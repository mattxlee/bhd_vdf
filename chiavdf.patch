diff --git a/src/alloc.hpp b/src/alloc.hpp
index a53d9f0..674284c 100644
--- a/src/alloc.hpp
+++ b/src/alloc.hpp
@@ -6,7 +6,7 @@
 inline void* mp_alloc_func(size_t new_bytes)
 {
     new_bytes = ((new_bytes + 8) + 15) & ~15;
-#if defined _MSC_VER
+#if defined _WIN32
     uint8_t* ret = static_cast<uint8_t*>(_aligned_malloc(new_bytes, 16));
 #else
     void* ptr = nullptr;
diff --git a/src/include.h b/src/include.h
index 63be0ae..7729b9c 100644
--- a/src/include.h
+++ b/src/include.h
@@ -20,15 +20,10 @@
 #include <array>
 #include <sstream>
 #include <fstream>
-#ifndef _WIN32
 #include <unistd.h>
 typedef unsigned __int128 uint128;
 typedef __int128 int128;
 #define USED __attribute__((used))
-#else
-#include "uint128_t/uint128_t.h"
-#define USED
-#endif
 #include <cassert>
 #include <iomanip>
 #include <set>
diff --git a/src/threading.h b/src/threading.h
index 50d4b49..3ba2459 100644
--- a/src/threading.h
+++ b/src/threading.h
@@ -7,8 +7,10 @@
 //mp_limb_t is an unsigned integer
 static_assert(sizeof(mp_limb_t)==8, "");
 
+#ifndef _WIN32
 static_assert(sizeof(unsigned long int)==8, "");
 static_assert(sizeof(long int)==8, "");
+#endif
 
 static uint64 get_time_cycles() {
     // Returns the time in EDX:EAX.
diff --git a/src/vdf.h b/src/vdf.h
index dec959d..dda778f 100644
--- a/src/vdf.h
+++ b/src/vdf.h
@@ -50,15 +50,12 @@
 #include "util.h"
 #include "callback.h"
 #include "fast_storage.h"
-#include <boost/asio.hpp>
 
 #include <atomic>
 #include <optional>
 
 bool warn_on_corruption_in_production=false;
 
-using boost::asio::ip::tcp;
-
 struct akashnil_form {
     // y = ax^2 + bxy + y^2
     mpz_t a;
