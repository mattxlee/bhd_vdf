cel_Xx_1: .intel_syntax noprefix         # asm_function:64                    .intel_syntax noprefix
cel_Xx_2: .global asm_cel_func_gcd_base  # asm_function:74                    .global asm_cel_func_gcd_base
cel_Xx_3: asm_cel_func_gcd_base:         # asm_function:75                    asm_cel_func_gcd_base:
cel_Xx_4: PUSH RBP                       # asm_function:91                    PUSH RBP
cel_Xx_5: PUSH RBX                       # asm_function:91                    PUSH RBX
cel_Xx_6: PUSH R12                       # asm_function:91                    PUSH R12
cel_Xx_7: PUSH R13                       # asm_function:91                    PUSH R13
cel_Xx_8: PUSH R14                       # asm_function:91                    PUSH R14
cel_Xx_9: PUSH R15                       # asm_function:91                    PUSH R15
cel_Xx_10: MOV RAX, RSP                  # asm_function:104                   MOV RAX, RSP
cel_Xx_11: AND RSP, -64                  # asm_function:105                   AND RSP, -64
cel_Xx_12: SUB RSP, 64                   # asm_function:106                   SUB RSP, 64
cel_Xx_13: MOV [RSP], RAX                # asm_function:107                   MOV [RSP], RAX
cel_Xx_14: MOVDQU XMM0, [RDI]            # compile_asm_gcd_base:42            MOVDQU `ab, [`ab_addr]
cel_Xx_15: MOVDQU XMM1, [RSI]            # compile_asm_gcd_base:43            MOVDQU `u, [`u_addr]
cel_Xx_16: MOVDQU XMM2, [RDX]            # compile_asm_gcd_base:44            MOVDQU `v, [`v_addr]
cel_Xx_17: MOVDQU XMM3, [RCX]            # compile_asm_gcd_base:45            MOVDQU `is_lehmer, [`is_lehmer_addr]
cel_Xx_18: MOVDQU XMM4, [R8]             # compile_asm_gcd_base:46            MOVDQU `ab_threshold, [`ab_threshold_addr]
cel_Xx_19: .text 1                       # gcd_base_continued_fraction:84     .text 1
cel_Xx_20: .balign 64                    # gcd_base_continued_fraction:86     .balign 64
cel_Xx_21: cel_gcd_base_table:           # gcd_base_continued_fraction:87     cel_gcd_base_table:
cel_Xx_22: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_23: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_24: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_25: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_26: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_27: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_28: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_29: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_30: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_31: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_32: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_33: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_34: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_35: .quad 0x3ff0000000000000, 0xc022000000000000, 0xbff0000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc022000000000000, 0xbff0000000000000, 0x4024000000000000
cel_Xx_36: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_37: .quad 0x3ff0000000000000, 0xc020000000000000, 0xbff0000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc020000000000000, 0xbff0000000000000, 0x4022000000000000
cel_Xx_38: .quad 0xc01c000000000000, 0x4020000000000000, 0x4020000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc01c000000000000, 0x4020000000000000, 0x4020000000000000, 0xc022000000000000
cel_Xx_39: .quad 0x3ff0000000000000, 0xc01c000000000000, 0xbff0000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc01c000000000000, 0xbff0000000000000, 0x4020000000000000
cel_Xx_40: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_41: .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000
cel_Xx_42: .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc018000000000000, 0xbff0000000000000, 0x401c000000000000
cel_Xx_43: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_44: .quad 0xc014000000000000, 0x4018000000000000, 0x4018000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc014000000000000, 0x4018000000000000, 0x4018000000000000, 0xc01c000000000000
cel_Xx_45: .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000
cel_Xx_46: .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xbff0000000000000, 0x4018000000000000
cel_Xx_47: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_48: .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000
cel_Xx_49: .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x4014000000000000, 0xc018000000000000
cel_Xx_50: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
cel_Xx_51: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
cel_Xx_52: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
cel_Xx_53: .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xbff0000000000000, 0x4014000000000000
cel_Xx_54: .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000
cel_Xx_55: .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000
cel_Xx_56: .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4010000000000000, 0xc014000000000000
cel_Xx_57: .quad 0x4010000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4022000000000000
cel_Xx_58: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
cel_Xx_59: .quad 0xc008000000000000, 0x401c000000000000, 0x4010000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x401c000000000000, 0x4010000000000000, 0xc022000000000000
cel_Xx_60: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
cel_Xx_61: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
cel_Xx_62: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
cel_Xx_63: .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xbff0000000000000, 0x4010000000000000
cel_Xx_64: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xbff0000000000000
cel_Xx_65: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
cel_Xx_66: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
cel_Xx_67: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
cel_Xx_68: .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4008000000000000, 0xc010000000000000
cel_Xx_69: .quad 0x4008000000000000, 0xc020000000000000, 0xc010000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc020000000000000, 0xc010000000000000, 0x4026000000000000
cel_Xx_70: .quad 0xc014000000000000, 0x4020000000000000, 0x401c000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xc014000000000000, 0x4020000000000000, 0x401c000000000000, 0xc026000000000000
cel_Xx_71: .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000
cel_Xx_72: .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc010000000000000, 0x401c000000000000
cel_Xx_73: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_74: .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000
cel_Xx_75: .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x4008000000000000, 0xc01c000000000000
cel_Xx_76: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_77: .quad 0xc000000000000000, 0x401c000000000000, 0x4008000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x401c000000000000, 0x4008000000000000, 0xc024000000000000
cel_Xx_78: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_79: .quad 0xc000000000000000, 0x4022000000000000, 0x4008000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4022000000000000, 0x4008000000000000, 0xc02a000000000000
cel_Xx_80: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_81: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_82: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_83: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_84: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_85: .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xbff0000000000000, 0x4008000000000000
cel_Xx_86: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_87: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_88: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_89: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_90: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_91: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_92: .quad 0x4000000000000000, 0xc022000000000000, 0xc008000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc022000000000000, 0xc008000000000000, 0x402c000000000000
cel_Xx_93: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_94: .quad 0x4000000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4026000000000000
cel_Xx_95: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_96: .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000
cel_Xx_97: .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc008000000000000, 0x4020000000000000
cel_Xx_98: .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4000000000000000, 0xc008000000000000
cel_Xx_99: .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000
cel_Xx_100: .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4014000000000000, 0xc020000000000000
cel_Xx_101: .quad 0x4014000000000000, 0xc020000000000000, 0xc020000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x4014000000000000, 0xc020000000000000, 0xc020000000000000, 0x402a000000000000
cel_Xx_102: .quad 0xc008000000000000, 0x4020000000000000, 0x4014000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4020000000000000, 0x4014000000000000, 0xc02a000000000000
cel_Xx_103: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
cel_Xx_104: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
cel_Xx_105: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
cel_Xx_106: .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc008000000000000, 0x4014000000000000
cel_Xx_107: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_108: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
cel_Xx_109: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
cel_Xx_110: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
cel_Xx_111: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
cel_Xx_112: .quad 0x4008000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc01c000000000000, 0xc014000000000000, 0x4028000000000000
cel_Xx_113: .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4000000000000000, 0xc014000000000000
cel_Xx_114: .quad 0xc010000000000000, 0x401c000000000000, 0x401c000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x401c000000000000, 0x401c000000000000, 0xc028000000000000
cel_Xx_115: .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000
cel_Xx_116: .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000
cel_Xx_117: .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc014000000000000, 0x401c000000000000
cel_Xx_118: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
cel_Xx_119: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
cel_Xx_120: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
cel_Xx_121: .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4000000000000000, 0xc01c000000000000
cel_Xx_122: .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000
cel_Xx_123: .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4022000000000000
cel_Xx_124: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_125: .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000
cel_Xx_126: .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4000000000000000, 0xc022000000000000
cel_Xx_127: .quad 0x4014000000000000, 0xc018000000000000, 0xc022000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4014000000000000, 0xc018000000000000, 0xc022000000000000, 0x4026000000000000
cel_Xx_128: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_129: .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000
cel_Xx_130: .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4018000000000000, 0x4000000000000000, 0xc026000000000000
cel_Xx_131: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_132: .quad 0xbff0000000000000, 0x401c000000000000, 0x4000000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x401c000000000000, 0x4000000000000000, 0xc02a000000000000
cel_Xx_133: .quad 0x401c000000000000, 0xc020000000000000, 0xc02a000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x401c000000000000, 0xc020000000000000, 0xc02a000000000000, 0x402e000000000000
cel_Xx_134: .quad 0xbff0000000000000, 0x4020000000000000, 0x4000000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4020000000000000, 0x4000000000000000, 0xc02e000000000000
cel_Xx_135: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_136: .quad 0xbff0000000000000, 0x4022000000000000, 0x4000000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4022000000000000, 0x4000000000000000, 0xc031000000000000
cel_Xx_137: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_138: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_139: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_140: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_141: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_142: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_143: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_144: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_145: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_146: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_147: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_148: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_149: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xbff0000000000000, 0x4000000000000000
cel_Xx_150: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_151: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_152: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_153: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_154: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_155: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_156: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_157: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_158: .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc000000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc000000000000000, 0x402e000000000000
cel_Xx_159: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_160: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_161: .quad 0x3ff0000000000000, 0xc014000000000000, 0xc000000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xc000000000000000, 0x4026000000000000
cel_Xx_162: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_163: .quad 0xc010000000000000, 0x4014000000000000, 0x4022000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x4022000000000000, 0xc026000000000000
cel_Xx_164: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000
cel_Xx_165: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc000000000000000, 0x4022000000000000
cel_Xx_166: .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000
cel_Xx_167: .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x401c000000000000, 0xc022000000000000
cel_Xx_168: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000
cel_Xx_169: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000
cel_Xx_170: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc000000000000000, 0x401c000000000000
cel_Xx_171: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc000000000000000
cel_Xx_172: .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000
cel_Xx_173: .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4014000000000000, 0xc01c000000000000
cel_Xx_174: .quad 0x4008000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4028000000000000
cel_Xx_175: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
cel_Xx_176: .quad 0xc000000000000000, 0x4014000000000000, 0x4014000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x4014000000000000, 0xc028000000000000
cel_Xx_177: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
cel_Xx_178: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
cel_Xx_179: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
cel_Xx_180: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
cel_Xx_181: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc000000000000000, 0x4014000000000000
cel_Xx_182: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
cel_Xx_183: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
cel_Xx_184: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
cel_Xx_185: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
cel_Xx_186: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
cel_Xx_187: .quad 0x4000000000000000, 0xc014000000000000, 0xc014000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc014000000000000, 0x402a000000000000
cel_Xx_188: .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4008000000000000, 0xc014000000000000
cel_Xx_189: .quad 0xc008000000000000, 0x4014000000000000, 0x4020000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4020000000000000, 0xc02a000000000000
cel_Xx_190: .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000
cel_Xx_191: .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc014000000000000, 0x4020000000000000
cel_Xx_192: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_193: .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000
cel_Xx_194: .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000
cel_Xx_195: .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4008000000000000, 0xc020000000000000
cel_Xx_196: .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000
cel_Xx_197: .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc020000000000000, 0x4026000000000000
cel_Xx_198: .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000
cel_Xx_199: .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4008000000000000, 0xc026000000000000
cel_Xx_200: .quad 0x4010000000000000, 0xc014000000000000, 0xc026000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc026000000000000, 0x402c000000000000
cel_Xx_201: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_202: .quad 0xbff0000000000000, 0x4014000000000000, 0x4008000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4008000000000000, 0xc02c000000000000
cel_Xx_203: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_204: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_205: .quad 0xbff0000000000000, 0x401c000000000000, 0x4008000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x401c000000000000, 0x4008000000000000, 0xc034000000000000
cel_Xx_206: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_207: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_208: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_209: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_210: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_211: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_212: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_213: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc000000000000000, 0x4008000000000000
cel_Xx_214: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_215: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_216: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_217: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_218: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_219: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_220: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_221: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_222: .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc01c000000000000, 0xc008000000000000, 0x4036000000000000
cel_Xx_223: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_224: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_225: .quad 0x3ff0000000000000, 0xc014000000000000, 0xc008000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc014000000000000, 0xc008000000000000, 0x4030000000000000
cel_Xx_226: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_227: .quad 0xc010000000000000, 0x4014000000000000, 0x402a000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0xc010000000000000, 0x4014000000000000, 0x402a000000000000, 0xc030000000000000
cel_Xx_228: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000
cel_Xx_229: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc008000000000000, 0x402a000000000000
cel_Xx_230: .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000
cel_Xx_231: .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4024000000000000, 0xc02a000000000000
cel_Xx_232: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000
cel_Xx_233: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000
cel_Xx_234: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc008000000000000, 0x4024000000000000
cel_Xx_235: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc008000000000000
cel_Xx_236: .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000
cel_Xx_237: .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x401c000000000000, 0xc024000000000000
cel_Xx_238: .quad 0x4008000000000000, 0xc014000000000000, 0xc024000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc014000000000000, 0xc024000000000000, 0x4031000000000000
cel_Xx_239: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
cel_Xx_240: .quad 0xc000000000000000, 0x4014000000000000, 0x401c000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4014000000000000, 0x401c000000000000, 0xc031000000000000
cel_Xx_241: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
cel_Xx_242: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
cel_Xx_243: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
cel_Xx_244: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
cel_Xx_245: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc008000000000000, 0x401c000000000000
cel_Xx_246: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
cel_Xx_247: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
cel_Xx_248: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
cel_Xx_249: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
cel_Xx_250: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
cel_Xx_251: .quad 0x4000000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc014000000000000, 0xc01c000000000000, 0x4032000000000000
cel_Xx_252: .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4010000000000000, 0xc01c000000000000
cel_Xx_253: .quad 0xc008000000000000, 0x4014000000000000, 0x4026000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4014000000000000, 0x4026000000000000, 0xc032000000000000
cel_Xx_254: .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000
cel_Xx_255: .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4026000000000000
cel_Xx_256: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_257: .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000
cel_Xx_258: .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000
cel_Xx_259: .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4010000000000000, 0xc026000000000000
cel_Xx_260: .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000
cel_Xx_261: .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc026000000000000, 0x402e000000000000
cel_Xx_262: .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000
cel_Xx_263: .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4010000000000000, 0xc02e000000000000
cel_Xx_264: .quad 0x4010000000000000, 0xc014000000000000, 0xc02e000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x4010000000000000, 0xc014000000000000, 0xc02e000000000000, 0x4033000000000000
cel_Xx_265: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_266: .quad 0xbff0000000000000, 0x4014000000000000, 0x4010000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4014000000000000, 0x4010000000000000, 0xc033000000000000
cel_Xx_267: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_268: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_269: .quad 0xbff0000000000000, 0x401c000000000000, 0x4010000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x401c000000000000, 0x4010000000000000, 0xc03b000000000000
cel_Xx_270: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_271: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_272: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_273: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_274: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_275: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_276: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_277: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc008000000000000, 0x4010000000000000
cel_Xx_278: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_279: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_280: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_281: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_282: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_283: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_284: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_285: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc010000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc010000000000000, 0x4031000000000000
cel_Xx_286: .quad 0xc008000000000000, 0x4010000000000000, 0x402a000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x402a000000000000, 0xc031000000000000
cel_Xx_287: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc010000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc010000000000000, 0x402a000000000000
cel_Xx_288: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc010000000000000
cel_Xx_289: .quad 0xc000000000000000, 0x4008000000000000, 0x4022000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4022000000000000, 0xc02a000000000000
cel_Xx_290: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
cel_Xx_291: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
cel_Xx_292: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
cel_Xx_293: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc010000000000000, 0x4022000000000000
cel_Xx_294: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
cel_Xx_295: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
cel_Xx_296: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
cel_Xx_297: .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4014000000000000, 0xc022000000000000
cel_Xx_298: .quad 0x4000000000000000, 0xc008000000000000, 0xc022000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc022000000000000, 0x402c000000000000
cel_Xx_299: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_300: .quad 0xbff0000000000000, 0x4008000000000000, 0x4014000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4014000000000000, 0xc02c000000000000
cel_Xx_301: .quad 0x4008000000000000, 0xc010000000000000, 0xc02c000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc02c000000000000, 0x4033000000000000
cel_Xx_302: .quad 0xbff0000000000000, 0x4010000000000000, 0x4014000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4014000000000000, 0xc033000000000000
cel_Xx_303: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_304: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_305: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_306: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_307: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_308: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_309: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc010000000000000, 0x4014000000000000
cel_Xx_310: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_311: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_312: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_313: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_314: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_315: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_316: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_317: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc014000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc014000000000000, 0x4035000000000000
cel_Xx_318: .quad 0xc008000000000000, 0x4010000000000000, 0x4030000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4030000000000000, 0xc035000000000000
cel_Xx_319: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc014000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc014000000000000, 0x4030000000000000
cel_Xx_320: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc014000000000000
cel_Xx_321: .quad 0xc000000000000000, 0x4008000000000000, 0x4026000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x4026000000000000, 0xc030000000000000
cel_Xx_322: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
cel_Xx_323: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
cel_Xx_324: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
cel_Xx_325: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc014000000000000, 0x4026000000000000
cel_Xx_326: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
cel_Xx_327: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
cel_Xx_328: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
cel_Xx_329: .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4018000000000000, 0xc026000000000000
cel_Xx_330: .quad 0x4000000000000000, 0xc008000000000000, 0xc026000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc026000000000000, 0x4031000000000000
cel_Xx_331: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_332: .quad 0xbff0000000000000, 0x4008000000000000, 0x4018000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4018000000000000, 0xc031000000000000
cel_Xx_333: .quad 0x4008000000000000, 0xc010000000000000, 0xc031000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc031000000000000, 0x4037000000000000
cel_Xx_334: .quad 0xbff0000000000000, 0x4010000000000000, 0x4018000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4018000000000000, 0xc037000000000000
cel_Xx_335: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_336: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_337: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_338: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_339: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_340: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_341: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc014000000000000, 0x4018000000000000
cel_Xx_342: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_343: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_344: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_345: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_346: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_347: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_348: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_349: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc018000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc018000000000000, 0x4039000000000000
cel_Xx_350: .quad 0xc008000000000000, 0x4010000000000000, 0x4033000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4033000000000000, 0xc039000000000000
cel_Xx_351: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc018000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc018000000000000, 0x4033000000000000
cel_Xx_352: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc018000000000000
cel_Xx_353: .quad 0xc000000000000000, 0x4008000000000000, 0x402a000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x402a000000000000, 0xc033000000000000
cel_Xx_354: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
cel_Xx_355: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
cel_Xx_356: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
cel_Xx_357: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc018000000000000, 0x402a000000000000
cel_Xx_358: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
cel_Xx_359: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
cel_Xx_360: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
cel_Xx_361: .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x401c000000000000, 0xc02a000000000000
cel_Xx_362: .quad 0x4000000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4034000000000000
cel_Xx_363: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_364: .quad 0xbff0000000000000, 0x4008000000000000, 0x401c000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x401c000000000000, 0xc034000000000000
cel_Xx_365: .quad 0x4008000000000000, 0xc010000000000000, 0xc034000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc034000000000000, 0x403b000000000000
cel_Xx_366: .quad 0xbff0000000000000, 0x4010000000000000, 0x401c000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x401c000000000000, 0xc03b000000000000
cel_Xx_367: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_368: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_369: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_370: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_371: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_372: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_373: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc018000000000000, 0x401c000000000000
cel_Xx_374: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_375: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_376: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_377: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_378: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_379: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_380: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_381: .quad 0x3ff0000000000000, 0xc010000000000000, 0xc01c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc010000000000000, 0xc01c000000000000, 0x403d000000000000
cel_Xx_382: .quad 0xc008000000000000, 0x4010000000000000, 0x4036000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xc008000000000000, 0x4010000000000000, 0x4036000000000000, 0xc03d000000000000
cel_Xx_383: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc01c000000000000, 0x4036000000000000
cel_Xx_384: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc01c000000000000
cel_Xx_385: .quad 0xc000000000000000, 0x4008000000000000, 0x402e000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0xc000000000000000, 0x4008000000000000, 0x402e000000000000, 0xc036000000000000
cel_Xx_386: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
cel_Xx_387: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
cel_Xx_388: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
cel_Xx_389: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc01c000000000000, 0x402e000000000000
cel_Xx_390: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
cel_Xx_391: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
cel_Xx_392: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
cel_Xx_393: .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4020000000000000, 0xc02e000000000000
cel_Xx_394: .quad 0x4000000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x4000000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4037000000000000
cel_Xx_395: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_396: .quad 0xbff0000000000000, 0x4008000000000000, 0x4020000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4020000000000000, 0xc037000000000000
cel_Xx_397: .quad 0x4008000000000000, 0xc010000000000000, 0xc037000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x4008000000000000, 0xc010000000000000, 0xc037000000000000, 0x403f000000000000
cel_Xx_398: .quad 0xbff0000000000000, 0x4010000000000000, 0x4020000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4010000000000000, 0x4020000000000000, 0xc03f000000000000
cel_Xx_399: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_400: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_401: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_402: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_403: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_404: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_405: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc01c000000000000, 0x4020000000000000
cel_Xx_406: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
cel_Xx_407: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
cel_Xx_408: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
cel_Xx_409: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
cel_Xx_410: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc020000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc020000000000000, 0x4039000000000000
cel_Xx_411: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc020000000000000
cel_Xx_412: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000
cel_Xx_413: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc020000000000000, 0x4031000000000000
cel_Xx_414: .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000
cel_Xx_415: .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4022000000000000, 0xc031000000000000
cel_Xx_416: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
cel_Xx_417: .quad 0xbff0000000000000, 0x4008000000000000, 0x4022000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4022000000000000, 0xc03a000000000000
cel_Xx_418: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
cel_Xx_419: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
cel_Xx_420: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
cel_Xx_421: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc020000000000000, 0x4022000000000000
cel_Xx_422: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
cel_Xx_423: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
cel_Xx_424: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
cel_Xx_425: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
cel_Xx_426: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc022000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc022000000000000, 0x403c000000000000
cel_Xx_427: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc022000000000000
cel_Xx_428: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000
cel_Xx_429: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc022000000000000, 0x4033000000000000
cel_Xx_430: .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000
cel_Xx_431: .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4024000000000000, 0xc033000000000000
cel_Xx_432: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
cel_Xx_433: .quad 0xbff0000000000000, 0x4008000000000000, 0x4024000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4024000000000000, 0xc03d000000000000
cel_Xx_434: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
cel_Xx_435: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
cel_Xx_436: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
cel_Xx_437: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc022000000000000, 0x4024000000000000
cel_Xx_438: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
cel_Xx_439: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
cel_Xx_440: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
cel_Xx_441: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
cel_Xx_442: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc024000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc024000000000000, 0x403f000000000000
cel_Xx_443: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc024000000000000
cel_Xx_444: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000
cel_Xx_445: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc024000000000000, 0x4035000000000000
cel_Xx_446: .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000
cel_Xx_447: .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4026000000000000, 0xc035000000000000
cel_Xx_448: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
cel_Xx_449: .quad 0xbff0000000000000, 0x4008000000000000, 0x4026000000000000, 0xc040000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4026000000000000, 0xc040000000000000
cel_Xx_450: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
cel_Xx_451: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
cel_Xx_452: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
cel_Xx_453: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc024000000000000, 0x4026000000000000
cel_Xx_454: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
cel_Xx_455: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
cel_Xx_456: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
cel_Xx_457: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
cel_Xx_458: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc026000000000000, 0x4041000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc026000000000000, 0x4041000000000000
cel_Xx_459: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc026000000000000
cel_Xx_460: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000
cel_Xx_461: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc026000000000000, 0x4037000000000000
cel_Xx_462: .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000
cel_Xx_463: .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4028000000000000, 0xc037000000000000
cel_Xx_464: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
cel_Xx_465: .quad 0xbff0000000000000, 0x4008000000000000, 0x4028000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4028000000000000, 0xc041800000000000
cel_Xx_466: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
cel_Xx_467: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
cel_Xx_468: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
cel_Xx_469: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc026000000000000, 0x4028000000000000
cel_Xx_470: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
cel_Xx_471: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
cel_Xx_472: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
cel_Xx_473: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
cel_Xx_474: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc028000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc028000000000000, 0x4042800000000000
cel_Xx_475: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc028000000000000
cel_Xx_476: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000
cel_Xx_477: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc028000000000000, 0x4039000000000000
cel_Xx_478: .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000
cel_Xx_479: .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402a000000000000, 0xc039000000000000
cel_Xx_480: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
cel_Xx_481: .quad 0xbff0000000000000, 0x4008000000000000, 0x402a000000000000, 0xc043000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x402a000000000000, 0xc043000000000000
cel_Xx_482: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
cel_Xx_483: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
cel_Xx_484: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
cel_Xx_485: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc028000000000000, 0x402a000000000000
cel_Xx_486: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
cel_Xx_487: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
cel_Xx_488: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
cel_Xx_489: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
cel_Xx_490: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4044000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02a000000000000, 0x4044000000000000
cel_Xx_491: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02a000000000000
cel_Xx_492: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000
cel_Xx_493: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02a000000000000, 0x403b000000000000
cel_Xx_494: .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000
cel_Xx_495: .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402c000000000000, 0xc03b000000000000
cel_Xx_496: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
cel_Xx_497: .quad 0xbff0000000000000, 0x4008000000000000, 0x402c000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x402c000000000000, 0xc044800000000000
cel_Xx_498: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
cel_Xx_499: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
cel_Xx_500: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
cel_Xx_501: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02a000000000000, 0x402c000000000000
cel_Xx_502: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
cel_Xx_503: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
cel_Xx_504: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
cel_Xx_505: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
cel_Xx_506: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02c000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02c000000000000, 0x4045800000000000
cel_Xx_507: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02c000000000000
cel_Xx_508: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000
cel_Xx_509: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02c000000000000, 0x403d000000000000
cel_Xx_510: .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000
cel_Xx_511: .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x402e000000000000, 0xc03d000000000000
cel_Xx_512: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
cel_Xx_513: .quad 0xbff0000000000000, 0x4008000000000000, 0x402e000000000000, 0xc046000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x402e000000000000, 0xc046000000000000
cel_Xx_514: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
cel_Xx_515: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
cel_Xx_516: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
cel_Xx_517: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02c000000000000, 0x402e000000000000
cel_Xx_518: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
cel_Xx_519: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
cel_Xx_520: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
cel_Xx_521: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
cel_Xx_522: .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4047000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc008000000000000, 0xc02e000000000000, 0x4047000000000000
cel_Xx_523: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc02e000000000000
cel_Xx_524: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000
cel_Xx_525: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc02e000000000000, 0x403f000000000000
cel_Xx_526: .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000
cel_Xx_527: .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4030000000000000, 0xc03f000000000000
cel_Xx_528: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
cel_Xx_529: .quad 0xbff0000000000000, 0x4008000000000000, 0x4030000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4008000000000000, 0x4030000000000000, 0xc047800000000000
cel_Xx_530: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
cel_Xx_531: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
cel_Xx_532: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
cel_Xx_533: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc02e000000000000, 0x4030000000000000
cel_Xx_534: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000
cel_Xx_535: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000
cel_Xx_536: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc030000000000000
cel_Xx_537: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc030000000000000, 0x4040800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc030000000000000, 0x4040800000000000
cel_Xx_538: .quad 0xbff0000000000000, 0x4000000000000000, 0x4031000000000000, 0xc040800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4031000000000000, 0xc040800000000000
cel_Xx_539: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000
cel_Xx_540: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000
cel_Xx_541: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc030000000000000, 0x4031000000000000
cel_Xx_542: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000
cel_Xx_543: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000
cel_Xx_544: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc031000000000000
cel_Xx_545: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc031000000000000, 0x4041800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc031000000000000, 0x4041800000000000
cel_Xx_546: .quad 0xbff0000000000000, 0x4000000000000000, 0x4032000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4032000000000000, 0xc041800000000000
cel_Xx_547: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000
cel_Xx_548: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000
cel_Xx_549: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc031000000000000, 0x4032000000000000
cel_Xx_550: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000
cel_Xx_551: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000
cel_Xx_552: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc032000000000000
cel_Xx_553: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc032000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc032000000000000, 0x4042800000000000
cel_Xx_554: .quad 0xbff0000000000000, 0x4000000000000000, 0x4033000000000000, 0xc042800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4033000000000000, 0xc042800000000000
cel_Xx_555: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000
cel_Xx_556: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000
cel_Xx_557: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc032000000000000, 0x4033000000000000
cel_Xx_558: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000
cel_Xx_559: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000
cel_Xx_560: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc033000000000000
cel_Xx_561: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc033000000000000, 0x4043800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc033000000000000, 0x4043800000000000
cel_Xx_562: .quad 0xbff0000000000000, 0x4000000000000000, 0x4034000000000000, 0xc043800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4034000000000000, 0xc043800000000000
cel_Xx_563: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000
cel_Xx_564: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000
cel_Xx_565: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc033000000000000, 0x4034000000000000
cel_Xx_566: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000
cel_Xx_567: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000
cel_Xx_568: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc034000000000000
cel_Xx_569: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc034000000000000, 0x4044800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc034000000000000, 0x4044800000000000
cel_Xx_570: .quad 0xbff0000000000000, 0x4000000000000000, 0x4035000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4035000000000000, 0xc044800000000000
cel_Xx_571: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000
cel_Xx_572: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000
cel_Xx_573: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc034000000000000, 0x4035000000000000
cel_Xx_574: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000
cel_Xx_575: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000
cel_Xx_576: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc035000000000000
cel_Xx_577: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc035000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc035000000000000, 0x4045800000000000
cel_Xx_578: .quad 0xbff0000000000000, 0x4000000000000000, 0x4036000000000000, 0xc045800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4036000000000000, 0xc045800000000000
cel_Xx_579: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000
cel_Xx_580: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000
cel_Xx_581: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc035000000000000, 0x4036000000000000
cel_Xx_582: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000
cel_Xx_583: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000
cel_Xx_584: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc036000000000000
cel_Xx_585: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc036000000000000, 0x4046800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc036000000000000, 0x4046800000000000
cel_Xx_586: .quad 0xbff0000000000000, 0x4000000000000000, 0x4037000000000000, 0xc046800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4037000000000000, 0xc046800000000000
cel_Xx_587: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000
cel_Xx_588: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000
cel_Xx_589: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc036000000000000, 0x4037000000000000
cel_Xx_590: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000
cel_Xx_591: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000
cel_Xx_592: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc037000000000000
cel_Xx_593: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc037000000000000, 0x4047800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc037000000000000, 0x4047800000000000
cel_Xx_594: .quad 0xbff0000000000000, 0x4000000000000000, 0x4038000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4038000000000000, 0xc047800000000000
cel_Xx_595: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000
cel_Xx_596: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000
cel_Xx_597: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc037000000000000, 0x4038000000000000
cel_Xx_598: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000
cel_Xx_599: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000
cel_Xx_600: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc038000000000000
cel_Xx_601: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc038000000000000, 0x4048800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc038000000000000, 0x4048800000000000
cel_Xx_602: .quad 0xbff0000000000000, 0x4000000000000000, 0x4039000000000000, 0xc048800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4039000000000000, 0xc048800000000000
cel_Xx_603: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000
cel_Xx_604: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000
cel_Xx_605: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc038000000000000, 0x4039000000000000
cel_Xx_606: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000
cel_Xx_607: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000
cel_Xx_608: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc039000000000000
cel_Xx_609: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc039000000000000, 0x4049800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc039000000000000, 0x4049800000000000
cel_Xx_610: .quad 0xbff0000000000000, 0x4000000000000000, 0x403a000000000000, 0xc049800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403a000000000000, 0xc049800000000000
cel_Xx_611: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000
cel_Xx_612: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000
cel_Xx_613: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc039000000000000, 0x403a000000000000
cel_Xx_614: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000
cel_Xx_615: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000
cel_Xx_616: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03a000000000000
cel_Xx_617: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03a000000000000, 0x404a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03a000000000000, 0x404a800000000000
cel_Xx_618: .quad 0xbff0000000000000, 0x4000000000000000, 0x403b000000000000, 0xc04a800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403b000000000000, 0xc04a800000000000
cel_Xx_619: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000
cel_Xx_620: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000
cel_Xx_621: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03a000000000000, 0x403b000000000000
cel_Xx_622: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000
cel_Xx_623: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000
cel_Xx_624: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03b000000000000
cel_Xx_625: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03b000000000000, 0x404b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03b000000000000, 0x404b800000000000
cel_Xx_626: .quad 0xbff0000000000000, 0x4000000000000000, 0x403c000000000000, 0xc04b800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403c000000000000, 0xc04b800000000000
cel_Xx_627: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000
cel_Xx_628: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000
cel_Xx_629: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03b000000000000, 0x403c000000000000
cel_Xx_630: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000
cel_Xx_631: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000
cel_Xx_632: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03c000000000000
cel_Xx_633: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03c000000000000, 0x404c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03c000000000000, 0x404c800000000000
cel_Xx_634: .quad 0xbff0000000000000, 0x4000000000000000, 0x403d000000000000, 0xc04c800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403d000000000000, 0xc04c800000000000
cel_Xx_635: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000
cel_Xx_636: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000
cel_Xx_637: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03c000000000000, 0x403d000000000000
cel_Xx_638: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000
cel_Xx_639: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000
cel_Xx_640: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03d000000000000
cel_Xx_641: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03d000000000000, 0x404d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03d000000000000, 0x404d800000000000
cel_Xx_642: .quad 0xbff0000000000000, 0x4000000000000000, 0x403e000000000000, 0xc04d800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403e000000000000, 0xc04d800000000000
cel_Xx_643: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000
cel_Xx_644: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000
cel_Xx_645: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03d000000000000, 0x403e000000000000
cel_Xx_646: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000
cel_Xx_647: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000
cel_Xx_648: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03e000000000000
cel_Xx_649: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03e000000000000, 0x404e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03e000000000000, 0x404e800000000000
cel_Xx_650: .quad 0xbff0000000000000, 0x4000000000000000, 0x403f000000000000, 0xc04e800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x403f000000000000, 0xc04e800000000000
cel_Xx_651: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000
cel_Xx_652: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000
cel_Xx_653: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03e000000000000, 0x403f000000000000
cel_Xx_654: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000
cel_Xx_655: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000
cel_Xx_656: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc03f000000000000
cel_Xx_657: .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03f000000000000, 0x404f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xc000000000000000, 0xc03f000000000000, 0x404f800000000000
cel_Xx_658: .quad 0xbff0000000000000, 0x4000000000000000, 0x4040000000000000, 0xc04f800000000000 # gcd_base_continued_fraction:106    .quad 0xbff0000000000000, 0x4000000000000000, 0x4040000000000000, 0xc04f800000000000
cel_Xx_659: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000
cel_Xx_660: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000
cel_Xx_661: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc03f000000000000, 0x4040000000000000
cel_Xx_662: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000
cel_Xx_663: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040000000000000
cel_Xx_664: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000
cel_Xx_665: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040000000000000, 0x4040800000000000
cel_Xx_666: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000
cel_Xx_667: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc040800000000000
cel_Xx_668: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000
cel_Xx_669: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc040800000000000, 0x4041000000000000
cel_Xx_670: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000
cel_Xx_671: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041000000000000
cel_Xx_672: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000
cel_Xx_673: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041000000000000, 0x4041800000000000
cel_Xx_674: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000
cel_Xx_675: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc041800000000000
cel_Xx_676: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000
cel_Xx_677: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc041800000000000, 0x4042000000000000
cel_Xx_678: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000
cel_Xx_679: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042000000000000
cel_Xx_680: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000
cel_Xx_681: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042000000000000, 0x4042800000000000
cel_Xx_682: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000
cel_Xx_683: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc042800000000000
cel_Xx_684: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000
cel_Xx_685: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc042800000000000, 0x4043000000000000
cel_Xx_686: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000
cel_Xx_687: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043000000000000
cel_Xx_688: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000
cel_Xx_689: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043000000000000, 0x4043800000000000
cel_Xx_690: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000
cel_Xx_691: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc043800000000000
cel_Xx_692: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000
cel_Xx_693: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc043800000000000, 0x4044000000000000
cel_Xx_694: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000
cel_Xx_695: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044000000000000
cel_Xx_696: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000
cel_Xx_697: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044000000000000, 0x4044800000000000
cel_Xx_698: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000
cel_Xx_699: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc044800000000000
cel_Xx_700: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000
cel_Xx_701: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc044800000000000, 0x4045000000000000
cel_Xx_702: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000
cel_Xx_703: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045000000000000
cel_Xx_704: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000
cel_Xx_705: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045000000000000, 0x4045800000000000
cel_Xx_706: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000
cel_Xx_707: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc045800000000000
cel_Xx_708: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000
cel_Xx_709: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc045800000000000, 0x4046000000000000
cel_Xx_710: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000
cel_Xx_711: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046000000000000
cel_Xx_712: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000
cel_Xx_713: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046000000000000, 0x4046800000000000
cel_Xx_714: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000
cel_Xx_715: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc046800000000000
cel_Xx_716: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000
cel_Xx_717: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc046800000000000, 0x4047000000000000
cel_Xx_718: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000
cel_Xx_719: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047000000000000
cel_Xx_720: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000
cel_Xx_721: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047000000000000, 0x4047800000000000
cel_Xx_722: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000
cel_Xx_723: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc047800000000000
cel_Xx_724: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000
cel_Xx_725: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc047800000000000, 0x4048000000000000
cel_Xx_726: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000
cel_Xx_727: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048000000000000
cel_Xx_728: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000
cel_Xx_729: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048000000000000, 0x4048800000000000
cel_Xx_730: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000
cel_Xx_731: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc048800000000000
cel_Xx_732: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000
cel_Xx_733: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc048800000000000, 0x4049000000000000
cel_Xx_734: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000
cel_Xx_735: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049000000000000
cel_Xx_736: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000
cel_Xx_737: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049000000000000, 0x4049800000000000
cel_Xx_738: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000
cel_Xx_739: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc049800000000000
cel_Xx_740: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000
cel_Xx_741: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc049800000000000, 0x404a000000000000
cel_Xx_742: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000
cel_Xx_743: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a000000000000
cel_Xx_744: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000
cel_Xx_745: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a000000000000, 0x404a800000000000
cel_Xx_746: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000
cel_Xx_747: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04a800000000000
cel_Xx_748: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000
cel_Xx_749: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04a800000000000, 0x404b000000000000
cel_Xx_750: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000
cel_Xx_751: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b000000000000
cel_Xx_752: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000
cel_Xx_753: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b000000000000, 0x404b800000000000
cel_Xx_754: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000
cel_Xx_755: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04b800000000000
cel_Xx_756: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000
cel_Xx_757: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04b800000000000, 0x404c000000000000
cel_Xx_758: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000
cel_Xx_759: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c000000000000
cel_Xx_760: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000
cel_Xx_761: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c000000000000, 0x404c800000000000
cel_Xx_762: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000
cel_Xx_763: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04c800000000000
cel_Xx_764: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000
cel_Xx_765: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04c800000000000, 0x404d000000000000
cel_Xx_766: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000
cel_Xx_767: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d000000000000
cel_Xx_768: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000
cel_Xx_769: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d000000000000, 0x404d800000000000
cel_Xx_770: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000
cel_Xx_771: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04d800000000000
cel_Xx_772: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000
cel_Xx_773: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04d800000000000, 0x404e000000000000
cel_Xx_774: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000
cel_Xx_775: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e000000000000
cel_Xx_776: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000
cel_Xx_777: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e000000000000, 0x404e800000000000
cel_Xx_778: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000
cel_Xx_779: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04e800000000000
cel_Xx_780: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000
cel_Xx_781: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04e800000000000, 0x404f000000000000
cel_Xx_782: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000
cel_Xx_783: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f000000000000
cel_Xx_784: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000
cel_Xx_785: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f000000000000, 0x404f800000000000
cel_Xx_786: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000
cel_Xx_787: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc04f800000000000
cel_Xx_788: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000
cel_Xx_789: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc04f800000000000, 0x4050000000000000
cel_Xx_790: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050000000000000
cel_Xx_791: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050000000000000, 0x4050400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050000000000000, 0x4050400000000000
cel_Xx_792: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050400000000000
cel_Xx_793: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050400000000000, 0x4050800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050400000000000, 0x4050800000000000
cel_Xx_794: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050800000000000
cel_Xx_795: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050800000000000, 0x4050c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050800000000000, 0x4050c00000000000
cel_Xx_796: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc050c00000000000
cel_Xx_797: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050c00000000000, 0x4051000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc050c00000000000, 0x4051000000000000
cel_Xx_798: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051000000000000
cel_Xx_799: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051000000000000, 0x4051400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051000000000000, 0x4051400000000000
cel_Xx_800: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051400000000000
cel_Xx_801: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051400000000000, 0x4051800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051400000000000, 0x4051800000000000
cel_Xx_802: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051800000000000
cel_Xx_803: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051800000000000, 0x4051c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051800000000000, 0x4051c00000000000
cel_Xx_804: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc051c00000000000
cel_Xx_805: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051c00000000000, 0x4052000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc051c00000000000, 0x4052000000000000
cel_Xx_806: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052000000000000
cel_Xx_807: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052000000000000, 0x4052400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052000000000000, 0x4052400000000000
cel_Xx_808: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052400000000000
cel_Xx_809: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052400000000000, 0x4052800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052400000000000, 0x4052800000000000
cel_Xx_810: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052800000000000
cel_Xx_811: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052800000000000, 0x4052c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052800000000000, 0x4052c00000000000
cel_Xx_812: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc052c00000000000
cel_Xx_813: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052c00000000000, 0x4053000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc052c00000000000, 0x4053000000000000
cel_Xx_814: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053000000000000
cel_Xx_815: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053000000000000, 0x4053400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053000000000000, 0x4053400000000000
cel_Xx_816: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053400000000000
cel_Xx_817: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053400000000000, 0x4053800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053400000000000, 0x4053800000000000
cel_Xx_818: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053800000000000
cel_Xx_819: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053800000000000, 0x4053c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053800000000000, 0x4053c00000000000
cel_Xx_820: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc053c00000000000
cel_Xx_821: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053c00000000000, 0x4054000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc053c00000000000, 0x4054000000000000
cel_Xx_822: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054000000000000
cel_Xx_823: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054000000000000, 0x4054400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054000000000000, 0x4054400000000000
cel_Xx_824: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054400000000000
cel_Xx_825: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054400000000000, 0x4054800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054400000000000, 0x4054800000000000
cel_Xx_826: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054800000000000
cel_Xx_827: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054800000000000, 0x4054c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054800000000000, 0x4054c00000000000
cel_Xx_828: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc054c00000000000
cel_Xx_829: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054c00000000000, 0x4055000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc054c00000000000, 0x4055000000000000
cel_Xx_830: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055000000000000
cel_Xx_831: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055000000000000, 0x4055400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055000000000000, 0x4055400000000000
cel_Xx_832: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055400000000000
cel_Xx_833: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055400000000000, 0x4055800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055400000000000, 0x4055800000000000
cel_Xx_834: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055800000000000
cel_Xx_835: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055800000000000, 0x4055c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055800000000000, 0x4055c00000000000
cel_Xx_836: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc055c00000000000
cel_Xx_837: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055c00000000000, 0x4056000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc055c00000000000, 0x4056000000000000
cel_Xx_838: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056000000000000
cel_Xx_839: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056000000000000, 0x4056400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056000000000000, 0x4056400000000000
cel_Xx_840: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056400000000000
cel_Xx_841: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056400000000000, 0x4056800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056400000000000, 0x4056800000000000
cel_Xx_842: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056800000000000
cel_Xx_843: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056800000000000, 0x4056c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056800000000000, 0x4056c00000000000
cel_Xx_844: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc056c00000000000
cel_Xx_845: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056c00000000000, 0x4057000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc056c00000000000, 0x4057000000000000
cel_Xx_846: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057000000000000
cel_Xx_847: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057000000000000, 0x4057400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057000000000000, 0x4057400000000000
cel_Xx_848: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057400000000000
cel_Xx_849: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057400000000000, 0x4057800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057400000000000, 0x4057800000000000
cel_Xx_850: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057800000000000
cel_Xx_851: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057800000000000, 0x4057c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057800000000000, 0x4057c00000000000
cel_Xx_852: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc057c00000000000
cel_Xx_853: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057c00000000000, 0x4058000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc057c00000000000, 0x4058000000000000
cel_Xx_854: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058000000000000
cel_Xx_855: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058000000000000, 0x4058400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058000000000000, 0x4058400000000000
cel_Xx_856: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058400000000000
cel_Xx_857: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058400000000000, 0x4058800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058400000000000, 0x4058800000000000
cel_Xx_858: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058800000000000
cel_Xx_859: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058800000000000, 0x4058c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058800000000000, 0x4058c00000000000
cel_Xx_860: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc058c00000000000
cel_Xx_861: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058c00000000000, 0x4059000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc058c00000000000, 0x4059000000000000
cel_Xx_862: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059000000000000
cel_Xx_863: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059000000000000, 0x4059400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059000000000000, 0x4059400000000000
cel_Xx_864: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059400000000000
cel_Xx_865: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059400000000000, 0x4059800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059400000000000, 0x4059800000000000
cel_Xx_866: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059800000000000
cel_Xx_867: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059800000000000, 0x4059c00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059800000000000, 0x4059c00000000000
cel_Xx_868: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc059c00000000000
cel_Xx_869: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059c00000000000, 0x405a000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc059c00000000000, 0x405a000000000000
cel_Xx_870: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a000000000000
cel_Xx_871: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a000000000000, 0x405a400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a000000000000, 0x405a400000000000
cel_Xx_872: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a400000000000
cel_Xx_873: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a400000000000, 0x405a800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a400000000000, 0x405a800000000000
cel_Xx_874: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05a800000000000
cel_Xx_875: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a800000000000, 0x405ac00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05a800000000000, 0x405ac00000000000
cel_Xx_876: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ac00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ac00000000000
cel_Xx_877: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ac00000000000, 0x405b000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ac00000000000, 0x405b000000000000
cel_Xx_878: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b000000000000
cel_Xx_879: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b000000000000, 0x405b400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b000000000000, 0x405b400000000000
cel_Xx_880: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b400000000000
cel_Xx_881: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b400000000000, 0x405b800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b400000000000, 0x405b800000000000
cel_Xx_882: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05b800000000000
cel_Xx_883: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b800000000000, 0x405bc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05b800000000000, 0x405bc00000000000
cel_Xx_884: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05bc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05bc00000000000
cel_Xx_885: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05bc00000000000, 0x405c000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05bc00000000000, 0x405c000000000000
cel_Xx_886: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c000000000000
cel_Xx_887: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c000000000000, 0x405c400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c000000000000, 0x405c400000000000
cel_Xx_888: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c400000000000
cel_Xx_889: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c400000000000, 0x405c800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c400000000000, 0x405c800000000000
cel_Xx_890: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05c800000000000
cel_Xx_891: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c800000000000, 0x405cc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05c800000000000, 0x405cc00000000000
cel_Xx_892: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05cc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05cc00000000000
cel_Xx_893: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05cc00000000000, 0x405d000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05cc00000000000, 0x405d000000000000
cel_Xx_894: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d000000000000
cel_Xx_895: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d000000000000, 0x405d400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d000000000000, 0x405d400000000000
cel_Xx_896: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d400000000000
cel_Xx_897: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d400000000000, 0x405d800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d400000000000, 0x405d800000000000
cel_Xx_898: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05d800000000000
cel_Xx_899: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d800000000000, 0x405dc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05d800000000000, 0x405dc00000000000
cel_Xx_900: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05dc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05dc00000000000
cel_Xx_901: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05dc00000000000, 0x405e000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05dc00000000000, 0x405e000000000000
cel_Xx_902: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e000000000000
cel_Xx_903: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e000000000000, 0x405e400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e000000000000, 0x405e400000000000
cel_Xx_904: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e400000000000
cel_Xx_905: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e400000000000, 0x405e800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e400000000000, 0x405e800000000000
cel_Xx_906: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05e800000000000
cel_Xx_907: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e800000000000, 0x405ec00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05e800000000000, 0x405ec00000000000
cel_Xx_908: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ec00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05ec00000000000
cel_Xx_909: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ec00000000000, 0x405f000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05ec00000000000, 0x405f000000000000
cel_Xx_910: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f000000000000
cel_Xx_911: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f000000000000, 0x405f400000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f000000000000, 0x405f400000000000
cel_Xx_912: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f400000000000
cel_Xx_913: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f400000000000, 0x405f800000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f400000000000, 0x405f800000000000
cel_Xx_914: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05f800000000000
cel_Xx_915: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f800000000000, 0x405fc00000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05f800000000000, 0x405fc00000000000
cel_Xx_916: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05fc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc05fc00000000000
cel_Xx_917: .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05fc00000000000, 0x4060000000000000 # gcd_base_continued_fraction:106    .quad 0x3ff0000000000000, 0xbff0000000000000, 0xc05fc00000000000, 0x4060000000000000
cel_Xx_918: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060000000000000
cel_Xx_919: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060200000000000
cel_Xx_920: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060400000000000
cel_Xx_921: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060600000000000
cel_Xx_922: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060800000000000
cel_Xx_923: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060a00000000000
cel_Xx_924: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060c00000000000
cel_Xx_925: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc060e00000000000
cel_Xx_926: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061000000000000
cel_Xx_927: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061200000000000
cel_Xx_928: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061400000000000
cel_Xx_929: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061600000000000
cel_Xx_930: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061800000000000
cel_Xx_931: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061a00000000000
cel_Xx_932: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061c00000000000
cel_Xx_933: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc061e00000000000
cel_Xx_934: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062000000000000
cel_Xx_935: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062200000000000
cel_Xx_936: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062400000000000
cel_Xx_937: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062600000000000
cel_Xx_938: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062800000000000
cel_Xx_939: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062a00000000000
cel_Xx_940: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062c00000000000
cel_Xx_941: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc062e00000000000
cel_Xx_942: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063000000000000
cel_Xx_943: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063200000000000
cel_Xx_944: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063400000000000
cel_Xx_945: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063600000000000
cel_Xx_946: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063800000000000
cel_Xx_947: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063a00000000000
cel_Xx_948: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063c00000000000
cel_Xx_949: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc063e00000000000
cel_Xx_950: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064000000000000
cel_Xx_951: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064200000000000
cel_Xx_952: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064400000000000
cel_Xx_953: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064600000000000
cel_Xx_954: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064800000000000
cel_Xx_955: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064a00000000000
cel_Xx_956: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064c00000000000
cel_Xx_957: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc064e00000000000
cel_Xx_958: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065000000000000
cel_Xx_959: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065200000000000
cel_Xx_960: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065400000000000
cel_Xx_961: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065600000000000
cel_Xx_962: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065800000000000
cel_Xx_963: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065a00000000000
cel_Xx_964: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065c00000000000
cel_Xx_965: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc065e00000000000
cel_Xx_966: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066000000000000
cel_Xx_967: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066200000000000
cel_Xx_968: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066400000000000
cel_Xx_969: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066600000000000
cel_Xx_970: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066800000000000
cel_Xx_971: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066a00000000000
cel_Xx_972: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066c00000000000
cel_Xx_973: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc066e00000000000
cel_Xx_974: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067000000000000
cel_Xx_975: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067200000000000
cel_Xx_976: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067400000000000
cel_Xx_977: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067600000000000
cel_Xx_978: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067800000000000
cel_Xx_979: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067a00000000000
cel_Xx_980: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067c00000000000
cel_Xx_981: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc067e00000000000
cel_Xx_982: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068000000000000
cel_Xx_983: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068200000000000
cel_Xx_984: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068400000000000
cel_Xx_985: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068600000000000
cel_Xx_986: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068800000000000
cel_Xx_987: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068a00000000000
cel_Xx_988: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068c00000000000
cel_Xx_989: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc068e00000000000
cel_Xx_990: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069000000000000
cel_Xx_991: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069200000000000
cel_Xx_992: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069400000000000
cel_Xx_993: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069600000000000
cel_Xx_994: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069800000000000
cel_Xx_995: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069a00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069a00000000000
cel_Xx_996: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069c00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069c00000000000
cel_Xx_997: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069e00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc069e00000000000
cel_Xx_998: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a000000000000
cel_Xx_999: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a200000000000
cel_Xx_1000: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a400000000000
cel_Xx_1001: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a600000000000
cel_Xx_1002: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06a800000000000
cel_Xx_1003: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06aa00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06aa00000000000
cel_Xx_1004: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ac00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ac00000000000
cel_Xx_1005: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ae00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ae00000000000
cel_Xx_1006: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b000000000000
cel_Xx_1007: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b200000000000
cel_Xx_1008: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b400000000000
cel_Xx_1009: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b600000000000
cel_Xx_1010: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06b800000000000
cel_Xx_1011: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ba00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ba00000000000
cel_Xx_1012: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06bc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06bc00000000000
cel_Xx_1013: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06be00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06be00000000000
cel_Xx_1014: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c000000000000
cel_Xx_1015: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c200000000000
cel_Xx_1016: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c400000000000
cel_Xx_1017: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c600000000000
cel_Xx_1018: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06c800000000000
cel_Xx_1019: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ca00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ca00000000000
cel_Xx_1020: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06cc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06cc00000000000
cel_Xx_1021: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ce00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ce00000000000
cel_Xx_1022: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d000000000000
cel_Xx_1023: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d200000000000
cel_Xx_1024: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d400000000000
cel_Xx_1025: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d600000000000
cel_Xx_1026: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06d800000000000
cel_Xx_1027: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06da00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06da00000000000
cel_Xx_1028: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06dc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06dc00000000000
cel_Xx_1029: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06de00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06de00000000000
cel_Xx_1030: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e000000000000
cel_Xx_1031: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e200000000000
cel_Xx_1032: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e400000000000
cel_Xx_1033: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e600000000000
cel_Xx_1034: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06e800000000000
cel_Xx_1035: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ea00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ea00000000000
cel_Xx_1036: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ec00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ec00000000000
cel_Xx_1037: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ee00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06ee00000000000
cel_Xx_1038: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f000000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f000000000000
cel_Xx_1039: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f200000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f200000000000
cel_Xx_1040: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f400000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f400000000000
cel_Xx_1041: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f600000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f600000000000
cel_Xx_1042: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f800000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06f800000000000
cel_Xx_1043: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fa00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fa00000000000
cel_Xx_1044: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fc00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fc00000000000
cel_Xx_1045: .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fe00000000000 # gcd_base_continued_fraction:106    .quad 0x0, 0x3ff0000000000000, 0x3ff0000000000000, 0xc06fe00000000000
cel_Xx_1046: .text                       # gcd_base_continued_fraction:110    .text
cel_Xx_1047: .text 1                     # gcd_base_continued_fraction:111    .text 1
cel_Xx_1048: .balign 16                  # gcd_base_continued_fraction:113    .balign 16
cel_Xx_1049: _cel_label_3:               # gcd_base_continued_fraction:114    _cel_label_3:
cel_Xx_1050: .quad 0x1fffffffffff        # gcd_base_continued_fraction:115    .quad 0x1fffffffffff
cel_Xx_1051: .quad 0x1fffffffffff        # gcd_base_continued_fraction:116    .quad 0x1fffffffffff
cel_Xx_1052: .text                       # gcd_base_continued_fraction:117    .text
cel_Xx_1053: MOV R12, [_cel_label_3]     # gcd_base_continued_fraction:141    MOV `c_table_delta_minus_1, [_cel_label_3]
cel_Xx_1054: MOV R11, 0x5                # gcd_base_continued_fraction:146    MOV `loop_counter, 0x5
cel_Xx_1055: .text 1                     # gcd_base_continued_fraction:111    .text 1
cel_Xx_1056: .balign 16                  # gcd_base_continued_fraction:113    .balign 16
cel_Xx_1057: _cel_label_6:               # gcd_base_continued_fraction:114    _cel_label_6:
cel_Xx_1058: .quad 0x3ff0000000000000    # gcd_base_continued_fraction:115    .quad 0x3ff0000000000000
cel_Xx_1059: .quad 0x0                   # gcd_base_continued_fraction:116    .quad 0x0
cel_Xx_1060: .text                       # gcd_base_continued_fraction:117    .text
cel_Xx_1061: MOVAPD XMM1, [_cel_label_6] # gcd_base_continued_fraction:148    MOVAPD `u, [_cel_label_6]
cel_Xx_1062: .text 1                     # gcd_base_continued_fraction:111    .text 1
cel_Xx_1063: .balign 16                  # gcd_base_continued_fraction:113    .balign 16
cel_Xx_1064: _cel_label_7:               # gcd_base_continued_fraction:114    _cel_label_7:
cel_Xx_1065: .quad 0x0                   # gcd_base_continued_fraction:115    .quad 0x0
cel_Xx_1066: .quad 0x3ff0000000000000    # gcd_base_continued_fraction:116    .quad 0x3ff0000000000000
cel_Xx_1067: .text                       # gcd_base_continued_fraction:117    .text
cel_Xx_1068: MOVAPD XMM2, [_cel_label_7] # gcd_base_continued_fraction:149    MOVAPD `v, [_cel_label_7]
cel_Xx_1069: .text 1                     # gcd_base_continued_fraction:111    .text 1
cel_Xx_1070: .balign 16                  # gcd_base_continued_fraction:113    .balign 16
cel_Xx_1071: _cel_label_8:               # gcd_base_continued_fraction:114    _cel_label_8:
cel_Xx_1072: .quad 0x433fffffffffffff    # gcd_base_continued_fraction:115    .quad 0x433fffffffffffff
cel_Xx_1073: .quad 0x433fffffffffffff    # gcd_base_continued_fraction:116    .quad 0x433fffffffffffff
cel_Xx_1074: .text                       # gcd_base_continued_fraction:117    .text
cel_Xx_1075: MOVAPD XMM14, [_cel_label_8] # gcd_base_continued_fraction:150    MOVAPD `range_check_range, [_cel_label_8]
cel_Xx_1076: .text 1                     # gcd_base_continued_fraction:111    .text 1
cel_Xx_1077: .balign 16                  # gcd_base_continued_fraction:113    .balign 16
cel_Xx_1078: _cel_label_9:               # gcd_base_continued_fraction:114    _cel_label_9:
cel_Xx_1079: .quad 0x7fffffffffffffff    # gcd_base_continued_fraction:115    .quad 0x7fffffffffffffff
cel_Xx_1080: .quad 0x7fffffffffffffff    # gcd_base_continued_fraction:116    .quad 0x7fffffffffffffff
cel_Xx_1081: .text                       # gcd_base_continued_fraction:117    .text
cel_Xx_1082: MOVAPD XMM15, [_cel_label_9] # gcd_base_continued_fraction:151    MOVAPD `double_abs_mask, [_cel_label_9]
cel_Xx_1083: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:154    MOVAPD `tmp, `ab
cel_Xx_1084: SHUFPD XMM9, XMM9, 3        # gcd_base_continued_fraction:155    SHUFPD `tmp, `tmp, 3
cel_Xx_1085: MOVAPD XMM13, XMM0          # gcd_base_continued_fraction:156    MOVAPD `q, `ab
cel_Xx_1086: DIVSD XMM13, XMM9           # gcd_base_continued_fraction:157    DIVSD `q, `tmp
cel_Xx_1087: _cel_label_5:               # gcd_base_continued_fraction:160    _cel_label_5:
cel_Xx_1088: #gcd_base loop start        # gcd_base_continued_fraction:166    #gcd_base loop start
cel_Xx_1089: MOVQ RBX, XMM13             # gcd_base_continued_fraction:169    MOVQ `q_scalar, `q
cel_Xx_1090: MOV RBP, RBX                # gcd_base_continued_fraction:170    MOV `q_scalar_2, `q_scalar
cel_Xx_1091: MOV R10, RBX                # gcd_base_continued_fraction:171    MOV `q_scalar_3, `q_scalar
cel_Xx_1092: SHR RBX, 0x28               # gcd_base_continued_fraction:175    SHR `q_scalar, 0x28
cel_Xx_1093: AND RBX, -32                # gcd_base_continued_fraction:176    AND `q_scalar, -32
cel_Xx_1094: SUB RBX, 0x3ff000           # gcd_base_continued_fraction:181    SUB `q_scalar, 0x3ff000
cel_Xx_1095: JB _cel_label_10            # gcd_base_continued_fraction:182    JB _cel_label_10
cel_Xx_1096: CMP RBX, 0x8000             # gcd_base_continued_fraction:183    CMP `q_scalar, 0x8000
cel_Xx_1097: JAE _cel_label_10           # gcd_base_continued_fraction:184    JAE _cel_label_10
cel_Xx_1098: MOVAPD XMM5, [cel_gcd_base_table+RBX] # gcd_base_continued_fraction:193    MOVAPD `m_0, [cel_gcd_base_table+`q_scalar]
cel_Xx_1099: MOVAPD XMM6, [cel_gcd_base_table+16+RBX] # gcd_base_continued_fraction:194    MOVAPD `m_1, [cel_gcd_base_table+16+`q_scalar]
cel_Xx_1100: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:199    MOVAPD `tmp, `ab
cel_Xx_1101: CMPLEPD XMM9, XMM4          # gcd_base_continued_fraction:200    CMPLEPD `tmp, `ab_threshold
cel_Xx_1102: PTEST XMM9, XMM9            # gcd_base_continued_fraction:201    PTEST `tmp, `tmp
cel_Xx_1103: JNZ _cel_label_4            # gcd_base_continued_fraction:202    JNZ _cel_label_4
cel_Xx_1104: AND RBP, R12                # gcd_base_continued_fraction:205    AND `q_scalar_2, `c_table_delta_minus_1
cel_Xx_1105: JZ _cel_label_10            # gcd_base_continued_fraction:206    JZ _cel_label_10
cel_Xx_1106: CMP RBP, R12                # gcd_base_continued_fraction:207    CMP `q_scalar_2, `c_table_delta_minus_1
cel_Xx_1107: JE _cel_label_10            # gcd_base_continued_fraction:208    JE _cel_label_10
cel_Xx_1108: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
cel_Xx_1109: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
cel_Xx_1110: MOVAPD XMM10, XMM0          # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
cel_Xx_1111: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1112: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1113: MOVAPD XMM7, XMM9           # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1114: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1115: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1116: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1117: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1118: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1119: ADDPD XMM7, XMM10           # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1120: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1121: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1122: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1123: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1124: MOVAPD XMM8, XMM7           # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
cel_Xx_1125: SHUFPD XMM8, XMM8, 3        # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
cel_Xx_1126: MOVAPD XMM13, XMM7          # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
cel_Xx_1127: DIVSD XMM13, XMM8           # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
cel_Xx_1128: MOVAPD XMM9, XMM1           # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
cel_Xx_1129: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
cel_Xx_1130: MOVAPD XMM10, XMM1          # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
cel_Xx_1131: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1132: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1133: MOVAPD XMM11, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1134: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1135: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1136: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1137: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1138: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1139: ADDPD XMM11, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1140: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1141: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1142: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1143: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1144: MOVAPD XMM9, XMM11          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1145: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1146: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1147: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1148: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1149: MOVAPD XMM9, XMM2           # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
cel_Xx_1150: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
cel_Xx_1151: MOVAPD XMM10, XMM2          # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
cel_Xx_1152: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1153: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1154: MOVAPD XMM12, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1155: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1156: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1157: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1158: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1159: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1160: ADDPD XMM12, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1161: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1162: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1163: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1164: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1165: MOVAPD XMM9, XMM12          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1166: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1167: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1168: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1169: JNZ _cel_label_10           # range_check:31                     JNZ _cel_label_10
cel_Xx_1170: UCOMISD XMM7, XMM4          # gcd_base_continued_fraction:260    UCOMISD `new_ab, `ab_threshold
cel_Xx_1171: JBE _cel_label_10           # gcd_base_continued_fraction:261    JBE _cel_label_10
cel_Xx_1172: JMP _cel_label_11           # gcd_base_continued_fraction:264    JMP _cel_label_11
cel_Xx_1173: _cel_label_10:              # gcd_base_continued_fraction:266    _cel_label_10:
cel_Xx_1174: #gcd_base no table          # gcd_base_continued_fraction:267    #gcd_base no table
cel_Xx_1175: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:272    MOVAPD `tmp, `ab
cel_Xx_1176: CMPLEPD XMM9, XMM4          # gcd_base_continued_fraction:273    CMPLEPD `tmp, `ab_threshold
cel_Xx_1177: PTEST XMM9, XMM9            # gcd_base_continued_fraction:274    PTEST `tmp, `tmp
cel_Xx_1178: JNZ _cel_label_4            # gcd_base_continued_fraction:275    JNZ _cel_label_4
cel_Xx_1179: MOVQ XMM13, R10             # gcd_base_continued_fraction:278    MOVQ `q, `q_scalar_3
cel_Xx_1180: ROUNDSD XMM13, XMM13, 1     # gcd_base_continued_fraction:282    ROUNDSD `q, `q, 1
cel_Xx_1181: MOVAPD XMM5, [_cel_label_7] # gcd_base_continued_fraction:288    MOVAPD `m_0, [_cel_label_7]
cel_Xx_1182: MOVAPD XMM6, XMM5           # gcd_base_continued_fraction:289    MOVAPD `m_1, `m_0
cel_Xx_1183: SUBSD XMM6, XMM13           # gcd_base_continued_fraction:290    SUBSD `m_1, `q
cel_Xx_1184: SHUFPD XMM6, XMM6, 1        # gcd_base_continued_fraction:291    SHUFPD `m_1, `m_1, 1
cel_Xx_1185: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
cel_Xx_1186: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
cel_Xx_1187: MOVAPD XMM10, XMM0          # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
cel_Xx_1188: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1189: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1190: MOVAPD XMM7, XMM9           # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1191: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1192: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1193: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1194: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1195: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1196: ADDPD XMM7, XMM10           # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1197: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1198: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1199: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1200: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1201: MOVAPD XMM8, XMM7           # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
cel_Xx_1202: SHUFPD XMM8, XMM8, 3        # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
cel_Xx_1203: MOVAPD XMM13, XMM7          # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
cel_Xx_1204: DIVSD XMM13, XMM8           # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
cel_Xx_1205: MOVAPD XMM9, XMM1           # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
cel_Xx_1206: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
cel_Xx_1207: MOVAPD XMM10, XMM1          # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
cel_Xx_1208: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1209: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1210: MOVAPD XMM11, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1211: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1212: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1213: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1214: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1215: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1216: ADDPD XMM11, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1217: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1218: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1219: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1220: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1221: MOVAPD XMM9, XMM11          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1222: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1223: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1224: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1225: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1226: MOVAPD XMM9, XMM2           # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
cel_Xx_1227: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
cel_Xx_1228: MOVAPD XMM10, XMM2          # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
cel_Xx_1229: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1230: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1231: MOVAPD XMM12, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1232: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1233: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1234: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1235: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1236: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1237: ADDPD XMM12, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1238: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1239: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1240: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1241: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1242: MOVAPD XMM9, XMM12          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1243: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1244: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1245: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1246: JNZ _cel_label_4            # range_check:31                     JNZ _cel_label_4
cel_Xx_1247: _cel_label_11:              # gcd_base_continued_fraction:296    _cel_label_11:
cel_Xx_1248: #gcd_base end no table      # gcd_base_continued_fraction:297    #gcd_base end no table
cel_Xx_1249: MOVAPD XMM5, XMM11          # gcd_base_continued_fraction:322    MOVAPD `m_0, `new_u
cel_Xx_1250: SHUFPD XMM5, XMM12, 0       # gcd_base_continued_fraction:323    SHUFPD `m_0, `new_v, 0
cel_Xx_1251: MOVAPD XMM6, XMM11          # gcd_base_continued_fraction:326    MOVAPD `m_1, `new_u
cel_Xx_1252: SHUFPD XMM6, XMM12, 3       # gcd_base_continued_fraction:327    SHUFPD `m_1, `new_v, 3
cel_Xx_1253: MOVAPD XMM9, XMM7           # gcd_base_continued_fraction:330    MOVAPD `tmp, `new_ab
cel_Xx_1254: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:331    SHUFPD `tmp, `tmp, 0
cel_Xx_1255: SUBPD XMM9, XMM8            # gcd_base_continued_fraction:334    SUBPD `tmp, `new_ab_1
cel_Xx_1256: ADDPD XMM9, XMM5            # gcd_base_continued_fraction:337    ADDPD `tmp, `m_0
cel_Xx_1257: CMPLTPD XMM9, XMM6          # gcd_base_continued_fraction:340    CMPLTPD `tmp, `m_1
cel_Xx_1258: .text 1                     # gcd_base_continued_fraction:111    .text 1
cel_Xx_1259: .balign 16                  # gcd_base_continued_fraction:113    .balign 16
cel_Xx_1260: _cel_label_12:              # gcd_base_continued_fraction:114    _cel_label_12:
cel_Xx_1261: .quad 0x8000000000000000    # gcd_base_continued_fraction:115    .quad 0x8000000000000000
cel_Xx_1262: .quad 0x8000000000000000    # gcd_base_continued_fraction:116    .quad 0x8000000000000000
cel_Xx_1263: .text                       # gcd_base_continued_fraction:117    .text
cel_Xx_1264: XORPD XMM6, [_cel_label_12] # gcd_base_continued_fraction:343    XORPD `m_1, [_cel_label_12]
cel_Xx_1265: CMPLTPD XMM8, XMM6          # gcd_base_continued_fraction:346    CMPLTPD `new_ab_1, `m_1
cel_Xx_1266: ORPD XMM9, XMM8             # gcd_base_continued_fraction:350    ORPD `tmp, `new_ab_1
cel_Xx_1267: ANDPD XMM9, XMM3            # gcd_base_continued_fraction:351    ANDPD `tmp, `is_lehmer
cel_Xx_1268: PTEST XMM9, XMM9            # gcd_base_continued_fraction:352    PTEST `tmp, `tmp
cel_Xx_1269: JNZ _cel_label_4            # gcd_base_continued_fraction:353    JNZ _cel_label_4
cel_Xx_1270: MOVAPD XMM0, XMM7           # gcd_base_continued_fraction:355    MOVAPD `ab, `new_ab
cel_Xx_1271: MOVAPD XMM1, XMM11          # gcd_base_continued_fraction:356    MOVAPD `u, `new_u
cel_Xx_1272: MOVAPD XMM2, XMM12          # gcd_base_continued_fraction:357    MOVAPD `v, `new_v
cel_Xx_1273: DEC R11                     # gcd_base_continued_fraction:360    DEC `loop_counter
cel_Xx_1274: JNZ _cel_label_5            # gcd_base_continued_fraction:361    JNZ _cel_label_5
cel_Xx_1275: #gcd_base loop end          # gcd_base_continued_fraction:363    #gcd_base loop end
cel_Xx_1276: _cel_label_4:               # gcd_base_continued_fraction:368    _cel_label_4:
cel_Xx_1277: CMP R11, 0x5                # gcd_base_continued_fraction:370    CMP `loop_counter, 0x5
cel_Xx_1278: JE _cel_label_0             # gcd_base_continued_fraction:371    JE _cel_label_0
cel_Xx_1279: JMP _cel_label_1            # compile_asm_gcd_base:53            JMP _cel_label_1
cel_Xx_1280: _cel_label_0:               # compile_asm_gcd_base:54            _cel_label_0:
cel_Xx_1281: MOV QWORD PTR [R9], 1       # compile_asm_gcd_base:56            MOV QWORD PTR [`no_progress_addr], 1
cel_Xx_1282: JMP _cel_label_2            # compile_asm_gcd_base:57            JMP _cel_label_2
cel_Xx_1283: _cel_label_1:               # compile_asm_gcd_base:59            _cel_label_1:
cel_Xx_1284: MOV QWORD PTR [R9], 0       # compile_asm_gcd_base:61            MOV QWORD PTR [`no_progress_addr], 0
cel_Xx_1285: _cel_label_2:               # compile_asm_gcd_base:63            _cel_label_2:
cel_Xx_1286: MOVDQU [RDI], XMM0          # compile_asm_gcd_base:65            MOVDQU [`ab_addr], `ab
cel_Xx_1287: MOVDQU [RSI], XMM1          # compile_asm_gcd_base:66            MOVDQU [`u_addr], `u
cel_Xx_1288: MOVDQU [RDX], XMM2          # compile_asm_gcd_base:67            MOVDQU [`v_addr], `v
cel_Xx_1289: MOVDQU [RCX], XMM3          # compile_asm_gcd_base:68            MOVDQU [`is_lehmer_addr], `is_lehmer
cel_Xx_1290: MOVDQU [R8], XMM4           # compile_asm_gcd_base:69            MOVDQU [`ab_threshold_addr], `ab_threshold
cel_Xx_1291: MOV RAX, 0                  # ~asm_function:117                  MOV RAX, 0
cel_Xx_1292: _cel_label_13:              # ~asm_function:121                  _cel_label_13:
cel_Xx_1293: MOV RSP, [RSP]              # ~asm_function:125                  MOV RSP, [RSP]
cel_Xx_1294: POP R15                     # ~asm_function:128                  POP R15
cel_Xx_1295: POP R14                     # ~asm_function:128                  POP R14
cel_Xx_1296: POP R13                     # ~asm_function:128                  POP R13
cel_Xx_1297: POP R12                     # ~asm_function:128                  POP R12
cel_Xx_1298: POP RBX                     # ~asm_function:128                  POP RBX
cel_Xx_1299: POP RBP                     # ~asm_function:128                  POP RBP
cel_Xx_1300: RET                         # ~asm_function:130                  RET
cel_Xx_1301: .global asm_cel_func_gcd_128 # asm_function:74                    .global asm_cel_func_gcd_128
cel_Xx_1302: asm_cel_func_gcd_128:       # asm_function:75                    asm_cel_func_gcd_128:
cel_Xx_1303: PUSH RBP                    # asm_function:91                    PUSH RBP
cel_Xx_1304: PUSH RBX                    # asm_function:91                    PUSH RBX
cel_Xx_1305: PUSH R12                    # asm_function:91                    PUSH R12
cel_Xx_1306: PUSH R13                    # asm_function:91                    PUSH R13
cel_Xx_1307: PUSH R14                    # asm_function:91                    PUSH R14
cel_Xx_1308: PUSH R15                    # asm_function:91                    PUSH R15
cel_Xx_1309: MOV RAX, RSP                # asm_function:104                   MOV RAX, RSP
cel_Xx_1310: AND RSP, -64                # asm_function:105                   AND RSP, -64
cel_Xx_1311: SUB RSP, 64                 # asm_function:106                   SUB RSP, 64
cel_Xx_1312: MOV [RSP], RAX              # asm_function:107                   MOV [RSP], RAX
cel_Xx_1313: MOV [RSP+-0x400], RDI       # compile_asm_gcd_128:117            MOV `spill_data_addr, `data_addr
cel_Xx_1314: MOV RBX, [RDI+0x0]          # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x0]
cel_Xx_1315: MOV [RSP+-0x3f8], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3f8], `tmp
cel_Xx_1316: MOV RBX, [RDI+0x8]          # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x8]
cel_Xx_1317: MOV [RSP+-0x3f0], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3f0], `tmp
cel_Xx_1318: MOV RBX, [RDI+0x10]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x10]
cel_Xx_1319: MOV [RSP+-0x3e8], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3e8], `tmp
cel_Xx_1320: MOV RBX, [RDI+0x18]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x18]
cel_Xx_1321: MOV [RSP+-0x3e0], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3e0], `tmp
cel_Xx_1322: MOV RBX, [RDI+0x20]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x20]
cel_Xx_1323: MOV [RSP+-0x3d8], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3d8], `tmp
cel_Xx_1324: MOV RBX, [RDI+0x28]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x28]
cel_Xx_1325: MOV [RSP+-0x3d0], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3d0], `tmp
cel_Xx_1326: MOV RBX, [RDI+0x30]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x30]
cel_Xx_1327: MOV [RSP+-0x3c8], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3c8], `tmp
cel_Xx_1328: MOV RBX, [RDI+0x38]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x38]
cel_Xx_1329: MOV [RSP+-0x3c0], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3c0], `tmp
cel_Xx_1330: MOV RBX, [RDI+0x40]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x40]
cel_Xx_1331: MOV [RSP+-0x3b8], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3b8], `tmp
cel_Xx_1332: MOV RBX, [RDI+0x48]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x48]
cel_Xx_1333: MOV [RSP+-0x3b0], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3b0], `tmp
cel_Xx_1334: MOV RBX, [RDI+0x50]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x50]
cel_Xx_1335: MOV [RSP+-0x3a8], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3a8], `tmp
cel_Xx_1336: MOV RBX, [RDI+0x58]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x58]
cel_Xx_1337: MOV [RSP+-0x3a0], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x3a0], `tmp
cel_Xx_1338: MOV RBX, [RDI+0x60]         # compile_asm_gcd_128:120            MOV `tmp, [`data_addr+0x60]
cel_Xx_1339: MOV [RSP+-0x398], RBX       # compile_asm_gcd_128:121            MOV [RSP+-0x398], `tmp
cel_Xx_1340: MOV QWORD PTR [RSP+-0x3d8], 1 # gcd_128:107                        MOV QWORD PTR `spill_u_0, 1
cel_Xx_1341: MOV QWORD PTR [RSP+-0x3d0], 0 # gcd_128:108                        MOV QWORD PTR `spill_u_1, 0
cel_Xx_1342: MOV QWORD PTR [RSP+-0x3c8], 0 # gcd_128:109                        MOV QWORD PTR `spill_v_0, 0
cel_Xx_1343: MOV QWORD PTR [RSP+-0x3c0], 1 # gcd_128:110                        MOV QWORD PTR `spill_v_1, 1
cel_Xx_1344: MOV QWORD PTR [RSP+-0x3b8], 0 # gcd_128:111                        MOV QWORD PTR `spill_parity, 0
cel_Xx_1345: MOV QWORD PTR [RSP+-0x390], 0x3 # gcd_128:112                        MOV QWORD PTR `spill_iter, 0x3
cel_Xx_1346: JMP _cel_label_21           # gcd_128:120                        JMP _cel_label_21
cel_Xx_1347: _cel_label_18:              # gcd_128:122                        _cel_label_18:
cel_Xx_1348: MOV R12, [_cel_label_3]     # gcd_base_continued_fraction:141    MOV `c_table_delta_minus_1, [_cel_label_3]
cel_Xx_1349: MOV R11, 0x5                # gcd_base_continued_fraction:146    MOV `loop_counter, 0x5
cel_Xx_1350: MOVAPD XMM1, [_cel_label_6] # gcd_base_continued_fraction:148    MOVAPD `u, [_cel_label_6]
cel_Xx_1351: MOVAPD XMM2, [_cel_label_7] # gcd_base_continued_fraction:149    MOVAPD `v, [_cel_label_7]
cel_Xx_1352: MOVAPD XMM14, [_cel_label_8] # gcd_base_continued_fraction:150    MOVAPD `range_check_range, [_cel_label_8]
cel_Xx_1353: MOVAPD XMM15, [_cel_label_9] # gcd_base_continued_fraction:151    MOVAPD `double_abs_mask, [_cel_label_9]
cel_Xx_1354: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:154    MOVAPD `tmp, `ab
cel_Xx_1355: SHUFPD XMM9, XMM9, 3        # gcd_base_continued_fraction:155    SHUFPD `tmp, `tmp, 3
cel_Xx_1356: MOVAPD XMM13, XMM0          # gcd_base_continued_fraction:156    MOVAPD `q, `ab
cel_Xx_1357: DIVSD XMM13, XMM9           # gcd_base_continued_fraction:157    DIVSD `q, `tmp
cel_Xx_1358: _cel_label_23:              # gcd_base_continued_fraction:160    _cel_label_23:
cel_Xx_1359: #gcd_base loop start        # gcd_base_continued_fraction:166    #gcd_base loop start
cel_Xx_1360: MOVQ R8, XMM13              # gcd_base_continued_fraction:169    MOVQ `q_scalar, `q
cel_Xx_1361: MOV R9, R8                  # gcd_base_continued_fraction:170    MOV `q_scalar_2, `q_scalar
cel_Xx_1362: MOV R10, R8                 # gcd_base_continued_fraction:171    MOV `q_scalar_3, `q_scalar
cel_Xx_1363: SHR R8, 0x28                # gcd_base_continued_fraction:175    SHR `q_scalar, 0x28
cel_Xx_1364: AND R8, -32                 # gcd_base_continued_fraction:176    AND `q_scalar, -32
cel_Xx_1365: SUB R8, 0x3ff000            # gcd_base_continued_fraction:181    SUB `q_scalar, 0x3ff000
cel_Xx_1366: JB _cel_label_24            # gcd_base_continued_fraction:182    JB _cel_label_24
cel_Xx_1367: CMP R8, 0x8000              # gcd_base_continued_fraction:183    CMP `q_scalar, 0x8000
cel_Xx_1368: JAE _cel_label_24           # gcd_base_continued_fraction:184    JAE _cel_label_24
cel_Xx_1369: MOVAPD XMM5, [cel_gcd_base_table+R8] # gcd_base_continued_fraction:193    MOVAPD `m_0, [cel_gcd_base_table+`q_scalar]
cel_Xx_1370: MOVAPD XMM6, [cel_gcd_base_table+16+R8] # gcd_base_continued_fraction:194    MOVAPD `m_1, [cel_gcd_base_table+16+`q_scalar]
cel_Xx_1371: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:199    MOVAPD `tmp, `ab
cel_Xx_1372: CMPLEPD XMM9, XMM4          # gcd_base_continued_fraction:200    CMPLEPD `tmp, `ab_threshold
cel_Xx_1373: PTEST XMM9, XMM9            # gcd_base_continued_fraction:201    PTEST `tmp, `tmp
cel_Xx_1374: JNZ _cel_label_22           # gcd_base_continued_fraction:202    JNZ _cel_label_22
cel_Xx_1375: AND R9, R12                 # gcd_base_continued_fraction:205    AND `q_scalar_2, `c_table_delta_minus_1
cel_Xx_1376: JZ _cel_label_24            # gcd_base_continued_fraction:206    JZ _cel_label_24
cel_Xx_1377: CMP R9, R12                 # gcd_base_continued_fraction:207    CMP `q_scalar_2, `c_table_delta_minus_1
cel_Xx_1378: JE _cel_label_24            # gcd_base_continued_fraction:208    JE _cel_label_24
cel_Xx_1379: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
cel_Xx_1380: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
cel_Xx_1381: MOVAPD XMM10, XMM0          # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
cel_Xx_1382: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1383: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1384: MOVAPD XMM7, XMM9           # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1385: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1386: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1387: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1388: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1389: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1390: ADDPD XMM7, XMM10           # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1391: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1392: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1393: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1394: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1395: MOVAPD XMM8, XMM7           # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
cel_Xx_1396: SHUFPD XMM8, XMM8, 3        # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
cel_Xx_1397: MOVAPD XMM13, XMM7          # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
cel_Xx_1398: DIVSD XMM13, XMM8           # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
cel_Xx_1399: MOVAPD XMM9, XMM1           # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
cel_Xx_1400: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
cel_Xx_1401: MOVAPD XMM10, XMM1          # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
cel_Xx_1402: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1403: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1404: MOVAPD XMM11, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1405: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1406: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1407: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1408: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1409: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1410: ADDPD XMM11, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1411: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1412: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1413: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1414: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1415: MOVAPD XMM9, XMM11          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1416: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1417: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1418: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1419: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1420: MOVAPD XMM9, XMM2           # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
cel_Xx_1421: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
cel_Xx_1422: MOVAPD XMM10, XMM2          # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
cel_Xx_1423: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1424: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1425: MOVAPD XMM12, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1426: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1427: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1428: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1429: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1430: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1431: ADDPD XMM12, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1432: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1433: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1434: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1435: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1436: MOVAPD XMM9, XMM12          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1437: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1438: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1439: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1440: JNZ _cel_label_24           # range_check:31                     JNZ _cel_label_24
cel_Xx_1441: UCOMISD XMM7, XMM4          # gcd_base_continued_fraction:260    UCOMISD `new_ab, `ab_threshold
cel_Xx_1442: JBE _cel_label_24           # gcd_base_continued_fraction:261    JBE _cel_label_24
cel_Xx_1443: JMP _cel_label_25           # gcd_base_continued_fraction:264    JMP _cel_label_25
cel_Xx_1444: _cel_label_24:              # gcd_base_continued_fraction:266    _cel_label_24:
cel_Xx_1445: #gcd_base no table          # gcd_base_continued_fraction:267    #gcd_base no table
cel_Xx_1446: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:272    MOVAPD `tmp, `ab
cel_Xx_1447: CMPLEPD XMM9, XMM4          # gcd_base_continued_fraction:273    CMPLEPD `tmp, `ab_threshold
cel_Xx_1448: PTEST XMM9, XMM9            # gcd_base_continued_fraction:274    PTEST `tmp, `tmp
cel_Xx_1449: JNZ _cel_label_22           # gcd_base_continued_fraction:275    JNZ _cel_label_22
cel_Xx_1450: MOVQ XMM13, R10             # gcd_base_continued_fraction:278    MOVQ `q, `q_scalar_3
cel_Xx_1451: ROUNDSD XMM13, XMM13, 1     # gcd_base_continued_fraction:282    ROUNDSD `q, `q, 1
cel_Xx_1452: MOVAPD XMM5, [_cel_label_7] # gcd_base_continued_fraction:288    MOVAPD `m_0, [_cel_label_7]
cel_Xx_1453: MOVAPD XMM6, XMM5           # gcd_base_continued_fraction:289    MOVAPD `m_1, `m_0
cel_Xx_1454: SUBSD XMM6, XMM13           # gcd_base_continued_fraction:290    SUBSD `m_1, `q
cel_Xx_1455: SHUFPD XMM6, XMM6, 1        # gcd_base_continued_fraction:291    SHUFPD `m_1, `m_1, 1
cel_Xx_1456: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
cel_Xx_1457: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
cel_Xx_1458: MOVAPD XMM10, XMM0          # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
cel_Xx_1459: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1460: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1461: MOVAPD XMM7, XMM9           # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1462: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1463: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1464: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1465: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1466: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1467: ADDPD XMM7, XMM10           # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1468: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1469: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1470: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1471: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1472: MOVAPD XMM8, XMM7           # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
cel_Xx_1473: SHUFPD XMM8, XMM8, 3        # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
cel_Xx_1474: MOVAPD XMM13, XMM7          # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
cel_Xx_1475: DIVSD XMM13, XMM8           # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
cel_Xx_1476: MOVAPD XMM9, XMM1           # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
cel_Xx_1477: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
cel_Xx_1478: MOVAPD XMM10, XMM1          # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
cel_Xx_1479: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1480: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1481: MOVAPD XMM11, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1482: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1483: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1484: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1485: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1486: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1487: ADDPD XMM11, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1488: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1489: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1490: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1491: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1492: MOVAPD XMM9, XMM11          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1493: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1494: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1495: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1496: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1497: MOVAPD XMM9, XMM2           # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
cel_Xx_1498: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
cel_Xx_1499: MOVAPD XMM10, XMM2          # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
cel_Xx_1500: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1501: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1502: MOVAPD XMM12, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1503: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1504: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1505: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1506: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1507: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1508: ADDPD XMM12, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1509: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1510: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1511: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1512: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1513: MOVAPD XMM9, XMM12          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1514: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1515: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1516: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1517: JNZ _cel_label_22           # range_check:31                     JNZ _cel_label_22
cel_Xx_1518: _cel_label_25:              # gcd_base_continued_fraction:296    _cel_label_25:
cel_Xx_1519: #gcd_base end no table      # gcd_base_continued_fraction:297    #gcd_base end no table
cel_Xx_1520: MOVAPD XMM5, XMM11          # gcd_base_continued_fraction:322    MOVAPD `m_0, `new_u
cel_Xx_1521: SHUFPD XMM5, XMM12, 0       # gcd_base_continued_fraction:323    SHUFPD `m_0, `new_v, 0
cel_Xx_1522: MOVAPD XMM6, XMM11          # gcd_base_continued_fraction:326    MOVAPD `m_1, `new_u
cel_Xx_1523: SHUFPD XMM6, XMM12, 3       # gcd_base_continued_fraction:327    SHUFPD `m_1, `new_v, 3
cel_Xx_1524: MOVAPD XMM9, XMM7           # gcd_base_continued_fraction:330    MOVAPD `tmp, `new_ab
cel_Xx_1525: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:331    SHUFPD `tmp, `tmp, 0
cel_Xx_1526: SUBPD XMM9, XMM8            # gcd_base_continued_fraction:334    SUBPD `tmp, `new_ab_1
cel_Xx_1527: ADDPD XMM9, XMM5            # gcd_base_continued_fraction:337    ADDPD `tmp, `m_0
cel_Xx_1528: CMPLTPD XMM9, XMM6          # gcd_base_continued_fraction:340    CMPLTPD `tmp, `m_1
cel_Xx_1529: XORPD XMM6, [_cel_label_12] # gcd_base_continued_fraction:343    XORPD `m_1, [_cel_label_12]
cel_Xx_1530: CMPLTPD XMM8, XMM6          # gcd_base_continued_fraction:346    CMPLTPD `new_ab_1, `m_1
cel_Xx_1531: ORPD XMM9, XMM8             # gcd_base_continued_fraction:350    ORPD `tmp, `new_ab_1
cel_Xx_1532: ANDPD XMM9, XMM3            # gcd_base_continued_fraction:351    ANDPD `tmp, `is_lehmer
cel_Xx_1533: PTEST XMM9, XMM9            # gcd_base_continued_fraction:352    PTEST `tmp, `tmp
cel_Xx_1534: JNZ _cel_label_22           # gcd_base_continued_fraction:353    JNZ _cel_label_22
cel_Xx_1535: MOVAPD XMM0, XMM7           # gcd_base_continued_fraction:355    MOVAPD `ab, `new_ab
cel_Xx_1536: MOVAPD XMM1, XMM11          # gcd_base_continued_fraction:356    MOVAPD `u, `new_u
cel_Xx_1537: MOVAPD XMM2, XMM12          # gcd_base_continued_fraction:357    MOVAPD `v, `new_v
cel_Xx_1538: DEC R11                     # gcd_base_continued_fraction:360    DEC `loop_counter
cel_Xx_1539: JNZ _cel_label_23           # gcd_base_continued_fraction:361    JNZ _cel_label_23
cel_Xx_1540: #gcd_base loop end          # gcd_base_continued_fraction:363    #gcd_base loop end
cel_Xx_1541: _cel_label_22:              # gcd_base_continued_fraction:368    _cel_label_22:
cel_Xx_1542: CMP R11, 0x5                # gcd_base_continued_fraction:370    CMP `loop_counter, 0x5
cel_Xx_1543: JE _cel_label_19            # gcd_base_continued_fraction:371    JE _cel_label_19
cel_Xx_1544: MOVAPD XMM8, [_cel_label_9] # gcd_128:175                        MOVAPD `double_abs_mask, [_cel_label_9]
cel_Xx_1545: MOVAPD XMM5, XMM1           # gcd_128:203                        MOVAPD `tmp_a, `vector_u
cel_Xx_1546: PAND XMM5, XMM8             # gcd_128:189                        PAND `tmp_a, `double_abs_mask
cel_Xx_1547: CVTTSD2SI R8, XMM5          # gcd_128:197                        CVTTSD2SI `m_0_0, `tmp_a
cel_Xx_1548: SHUFPD XMM5, XMM5, 3        # gcd_128:206                        SHUFPD `tmp_a, `tmp_a, 3
cel_Xx_1549: CVTTSD2SI R10, XMM5         # gcd_128:197                        CVTTSD2SI `m_1_0, `tmp_a
cel_Xx_1550: MOVAPD XMM5, XMM2           # gcd_128:211                        MOVAPD `tmp_a, `vector_v
cel_Xx_1551: PAND XMM5, XMM8             # gcd_128:189                        PAND `tmp_a, `double_abs_mask
cel_Xx_1552: CVTTSD2SI R9, XMM5          # gcd_128:197                        CVTTSD2SI `m_0_1, `tmp_a
cel_Xx_1553: SHUFPD XMM5, XMM5, 3        # gcd_128:214                        SHUFPD `tmp_a, `tmp_a, 3
cel_Xx_1554: CVTTSD2SI R11, XMM5         # gcd_128:197                        CVTTSD2SI `m_1_1, `tmp_a
cel_Xx_1555: MOV R12, [RSP+-0x3d8]       # gcd_128:217                        MOV `tmp_0, `spill_u_0
cel_Xx_1556: MOV R13, [RSP+-0x3d0]       # gcd_128:218                        MOV `tmp_1, `spill_u_1
cel_Xx_1557: MOV RAX, R8                 # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_1558: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_1559: JC _cel_label_19            # dot_product_exact:58               JC _cel_label_19
cel_Xx_1560: MOV RBX, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_1561: MOV RAX, R9                 # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_1562: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_1563: JC _cel_label_19            # dot_product_exact:64               JC _cel_label_19
cel_Xx_1564: ADD RBX, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_1565: JC _cel_label_19            # dot_product_exact:68               JC _cel_label_19
cel_Xx_1566: MOV RAX, R10                # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_1567: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_1568: JC _cel_label_19            # dot_product_exact:58               JC _cel_label_19
cel_Xx_1569: MOV RBP, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_1570: MOV RAX, R11                # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_1571: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_1572: JC _cel_label_19            # dot_product_exact:64               JC _cel_label_19
cel_Xx_1573: ADD RBP, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_1574: JC _cel_label_19            # dot_product_exact:68               JC _cel_label_19
cel_Xx_1575: MOV R12, [RSP+-0x3c8]       # gcd_128:222                        MOV `tmp_0, `spill_v_0
cel_Xx_1576: MOV R13, [RSP+-0x3c0]       # gcd_128:223                        MOV `tmp_1, `spill_v_1
cel_Xx_1577: MOV RAX, R8                 # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_1578: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_1579: JC _cel_label_19            # dot_product_exact:58               JC _cel_label_19
cel_Xx_1580: MOV RSI, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_1581: MOV RAX, R9                 # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_1582: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_1583: JC _cel_label_19            # dot_product_exact:64               JC _cel_label_19
cel_Xx_1584: ADD RSI, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_1585: JC _cel_label_19            # dot_product_exact:68               JC _cel_label_19
cel_Xx_1586: MOV RAX, R10                # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_1587: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_1588: JC _cel_label_19            # dot_product_exact:58               JC _cel_label_19
cel_Xx_1589: MOV RDI, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_1590: MOV RAX, R11                # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_1591: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_1592: JC _cel_label_19            # dot_product_exact:64               JC _cel_label_19
cel_Xx_1593: ADD RDI, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_1594: JC _cel_label_19            # dot_product_exact:68               JC _cel_label_19
cel_Xx_1595: MOV R13, [RSP+-0x3f8]       # gcd_128:249                        MOV `ab_start_0_0, `spill_ab_start_0_0
cel_Xx_1596: MOV R14, [RSP+-0x3f0]       # gcd_128:250                        MOV `ab_start_0_1, `spill_ab_start_0_1
cel_Xx_1597: MOV R15, [RSP+-0x3e8]       # gcd_128:251                        MOV `ab_start_1_0, `spill_ab_start_1_0
cel_Xx_1598: MOV RCX, [RSP+-0x3e0]       # gcd_128:252                        MOV `ab_start_1_1, `spill_ab_start_1_1
cel_Xx_1599: MOVAPD XMM5, XMM2           # gcd_128:256                        MOVAPD `tmp_a, `vector_v
cel_Xx_1600: SHUFPD XMM5, XMM5, 3        # gcd_128:257                        SHUFPD `tmp_a, `tmp_a, 3
cel_Xx_1601: MOVQ RAX, XMM5              # gcd_128:258                        MOVQ RAX, `tmp_a
cel_Xx_1602: SHR RAX, 63                 # gcd_128:259                        SHR RAX, 63
cel_Xx_1603: MOV R12, [RSP+-0x3b8]       # gcd_128:262                        MOV `new_parity, `spill_parity
cel_Xx_1604: XOR R12, RAX                # gcd_128:263                        XOR `new_parity, RAX
cel_Xx_1605: MOV RAX, R13                # gcd_128:268                        MOV RAX, `ab_start_0_0
cel_Xx_1606: MUL RBX                     # gcd_128:269                        MUL `new_u_0
cel_Xx_1607: MOV R8, RAX                 # gcd_128:272                        MOV `new_ab_0_0, RAX
cel_Xx_1608: MOV R9, RDX                 # gcd_128:273                        MOV `new_ab_0_1, RDX
cel_Xx_1609: MOV RAX, R14                # gcd_128:276                        MOV RAX, `ab_start_0_1
cel_Xx_1610: MUL RBX                     # gcd_128:277                        MUL `new_u_0
cel_Xx_1611: ADD R9, RAX                 # gcd_128:280                        ADD `new_ab_0_1, RAX
cel_Xx_1612: MOV RAX, R15                # gcd_128:283                        MOV RAX, `ab_start_1_0
cel_Xx_1613: MUL RSI                     # gcd_128:284                        MUL `new_v_0
cel_Xx_1614: SUB R8, RAX                 # gcd_128:287                        SUB `new_ab_0_0, RAX
cel_Xx_1615: SBB R9, RDX                 # gcd_128:288                        SBB `new_ab_0_1, RDX
cel_Xx_1616: MOV RAX, RCX                # gcd_128:291                        MOV RAX, `ab_start_1_1
cel_Xx_1617: MUL RSI                     # gcd_128:292                        MUL `new_v_0
cel_Xx_1618: SUB R9, RAX                 # gcd_128:295                        SUB `new_ab_0_1, RAX
cel_Xx_1619: MOV RAX, R15                # gcd_128:268                        MOV RAX, `ab_start_1_0
cel_Xx_1620: MUL RDI                     # gcd_128:269                        MUL `new_v_1
cel_Xx_1621: MOV R10, RAX                # gcd_128:272                        MOV `new_ab_1_0, RAX
cel_Xx_1622: MOV R11, RDX                # gcd_128:273                        MOV `new_ab_1_1, RDX
cel_Xx_1623: MOV RAX, RCX                # gcd_128:276                        MOV RAX, `ab_start_1_1
cel_Xx_1624: MUL RDI                     # gcd_128:277                        MUL `new_v_1
cel_Xx_1625: ADD R11, RAX                # gcd_128:280                        ADD `new_ab_1_1, RAX
cel_Xx_1626: MOV RAX, R13                # gcd_128:283                        MOV RAX, `ab_start_0_0
cel_Xx_1627: MUL RBP                     # gcd_128:284                        MUL `new_u_1
cel_Xx_1628: SUB R10, RAX                # gcd_128:287                        SUB `new_ab_1_0, RAX
cel_Xx_1629: SBB R11, RDX                # gcd_128:288                        SBB `new_ab_1_1, RDX
cel_Xx_1630: MOV RAX, R14                # gcd_128:291                        MOV RAX, `ab_start_0_1
cel_Xx_1631: MUL RBP                     # gcd_128:292                        MUL `new_u_1
cel_Xx_1632: SUB R11, RAX                # gcd_128:295                        SUB `new_ab_1_1, RAX
cel_Xx_1633: MOV RAX, -1                 # gcd_128:326                        MOV RAX, -1
cel_Xx_1634: ADD RAX, R12                # gcd_128:327                        ADD RAX, `new_parity
cel_Xx_1635: NOT RAX                     # gcd_128:328                        NOT RAX
cel_Xx_1636: XOR R8, RAX                 # gcd_128:333                        XOR `new_ab_0_0, RAX
cel_Xx_1637: XOR R9, RAX                 # gcd_128:334                        XOR `new_ab_0_1, RAX
cel_Xx_1638: ADD R8, R12                 # gcd_128:337                        ADD `new_ab_0_0, `new_parity
cel_Xx_1639: ADC R9, 0                   # gcd_128:338                        ADC `new_ab_0_1, 0
cel_Xx_1640: XOR R10, RAX                # gcd_128:333                        XOR `new_ab_1_0, RAX
cel_Xx_1641: XOR R11, RAX                # gcd_128:334                        XOR `new_ab_1_1, RAX
cel_Xx_1642: ADD R10, R12                # gcd_128:337                        ADD `new_ab_1_0, `new_parity
cel_Xx_1643: ADC R11, 0                  # gcd_128:338                        ADC `new_ab_1_1, 0
cel_Xx_1644: MOV RAX, [RSP+-0x3b0]       # gcd_128:366                        MOV `is_lehmer, `spill_is_lehmer
cel_Xx_1645: MOV R15, R8                 # gcd_128:369                        MOV `ab_delta_0, `new_ab_0_0
cel_Xx_1646: MOV RCX, R9                 # gcd_128:370                        MOV `ab_delta_1, `new_ab_0_1
cel_Xx_1647: SUB R15, R10                # gcd_128:371                        SUB `ab_delta_0, `new_ab_1_0
cel_Xx_1648: SBB RCX, R11                # gcd_128:372                        SBB `ab_delta_1, `new_ab_1_1
cel_Xx_1649: CMP R12, 0                  # gcd_128:391                        CMP `new_parity, 0
cel_Xx_1650: MOV R13, RBP                # gcd_128:392                        MOV `ab_threshold_0, `new_u_1
cel_Xx_1651: CMOVE R13, RDI              # gcd_128:393                        CMOVE `ab_threshold_0, `new_v_1
cel_Xx_1652: MOV R14, RBX                # gcd_128:397                        MOV `ab_threshold_1, `new_u_0
cel_Xx_1653: CMOVE R14, RSI              # gcd_128:398                        CMOVE `ab_threshold_1, `new_v_0
cel_Xx_1654: MOV RDX, RDI                # gcd_128:401                        MOV `b_new_min, `new_v_1
cel_Xx_1655: CMOVE RDX, RBP              # gcd_128:402                        CMOVE `b_new_min, `new_u_1
cel_Xx_1656: CMP RAX, 0                  # gcd_128:405                        CMP `is_lehmer, 0
cel_Xx_1657: CMOVE R13, RAX              # gcd_128:406                        CMOVE `ab_threshold_0, `is_lehmer
cel_Xx_1658: CMOVE R14, RAX              # gcd_128:407                        CMOVE `ab_threshold_1, `is_lehmer
cel_Xx_1659: CMOVE RDX, RAX              # gcd_128:410                        CMOVE `b_new_min, `is_lehmer
cel_Xx_1660: ADD R13, R14                # gcd_128:413                        ADD `ab_threshold_0, `ab_threshold_1
cel_Xx_1661: MOV R14, 0                  # gcd_128:414                        MOV `ab_threshold_1, 0
cel_Xx_1662: ADC R14, 0                  # gcd_128:415                        ADC `ab_threshold_1, 0
cel_Xx_1663: SUB R15, R13                # gcd_128:420                        SUB `ab_delta_0, `ab_threshold_0
cel_Xx_1664: SBB RCX, R14                # gcd_128:421                        SBB `ab_delta_1, `ab_threshold_1
cel_Xx_1665: JC _cel_label_19            # gcd_128:422                        JC _cel_label_19
cel_Xx_1666: CMP R10, RDX                # gcd_128:426                        CMP `new_ab_1_0, `b_new_min
cel_Xx_1667: MOV RDX, R11                # gcd_128:427                        MOV `b_new_min, `new_ab_1_1
cel_Xx_1668: SBB RDX, 0                  # gcd_128:428                        SBB `b_new_min, 0
cel_Xx_1669: JC _cel_label_19            # gcd_128:429                        JC _cel_label_19
cel_Xx_1670: MOV R13, [RSP+-0x3a8]       # gcd_128:434                        MOV `ab_threshold_0, `spill_ab_threshold_0
cel_Xx_1671: MOV R14, [RSP+-0x3a0]       # gcd_128:435                        MOV `ab_threshold_1, `spill_ab_threshold_1
cel_Xx_1672: MOV R15, R13                # gcd_128:438                        MOV `ab_delta_0, `ab_threshold_0
cel_Xx_1673: MOV RCX, R14                # gcd_128:439                        MOV `ab_delta_1, `ab_threshold_1
cel_Xx_1674: SUB R15, R8                 # gcd_128:440                        SUB `ab_delta_0, `new_ab_0_0
cel_Xx_1675: SBB RCX, R9                 # gcd_128:441                        SBB `ab_delta_1, `new_ab_0_1
cel_Xx_1676: JNC _cel_label_19           # gcd_128:442                        JNC _cel_label_19
cel_Xx_1677: MOV [RSP+-0x3d8], RBX       # gcd_128:445                        MOV `spill_u_0, `new_u_0
cel_Xx_1678: MOV [RSP+-0x3d0], RBP       # gcd_128:446                        MOV `spill_u_1, `new_u_1
cel_Xx_1679: MOV [RSP+-0x3c8], RSI       # gcd_128:449                        MOV `spill_v_0, `new_v_0
cel_Xx_1680: MOV [RSP+-0x3c0], RDI       # gcd_128:450                        MOV `spill_v_1, `new_v_1
cel_Xx_1681: MOV [RSP+-0x3b8], R12       # gcd_128:453                        MOV `spill_parity, `new_parity
cel_Xx_1682: MOV R15, [RSP+-0x390]       # gcd_128:459                        MOV `ab_delta_0, `spill_iter
cel_Xx_1683: DEC R15                     # gcd_128:460                        DEC `ab_delta_0
cel_Xx_1684: MOV [RSP+-0x390], R15       # gcd_128:461                        MOV `spill_iter, `ab_delta_0
cel_Xx_1685: JZ _cel_label_20            # gcd_128:462                        JZ _cel_label_20
cel_Xx_1686: _cel_label_17:              # gcd_128:465                        _cel_label_17:
cel_Xx_1687: XOR RCX, RCX                # gcd_128:492                        XOR `tmp_3, `tmp_3
cel_Xx_1688: MOV RAX, R10                # gcd_128:495                        MOV `tmp_0, `ab_1_0
cel_Xx_1689: MOV RDX, R11                # gcd_128:496                        MOV `tmp_1, `ab_1_1
cel_Xx_1690: SUB RAX, R13                # gcd_128:497                        SUB `tmp_0, `ab_threshold_0
cel_Xx_1691: SBB RDX, R14                # gcd_128:498                        SBB `tmp_1, `ab_threshold_1
cel_Xx_1692: JC _cel_label_19            # gcd_128:501                        JC _cel_label_19
cel_Xx_1693: MOV R15, RAX                # gcd_128:504                        MOV `tmp_2, `tmp_0
cel_Xx_1694: OR R15, RDX                 # gcd_128:505                        OR `tmp_2, `tmp_1
cel_Xx_1695: JZ _cel_label_19            # gcd_128:506                        JZ _cel_label_19
cel_Xx_1696: MOV RAX, R9                 # gcd_128:511                        MOV `tmp_0, `ab_0_1
cel_Xx_1697: MOV RDX, 64                 # gcd_128:512                        MOV `tmp_1, 64
cel_Xx_1698: CMP R9, 0                   # gcd_128:513                        CMP `ab_0_1, 0
cel_Xx_1699: CMOVEQ RAX, R8              # gcd_128:525                        CMOVEQ `tmp_0, `ab_0_0
cel_Xx_1700: CMOVEQ RDX, RCX             # gcd_128:526                        CMOVEQ `tmp_1, `tmp_3
cel_Xx_1701: BSR RAX, RAX                # gcd_128:530                        BSR `tmp_0, `tmp_0
cel_Xx_1702: ADD RDX, RAX                # gcd_128:533                        ADD `tmp_1, `tmp_0
cel_Xx_1703: INC RDX                     # gcd_128:534                        INC `tmp_1
cel_Xx_1704: XOR RAX, RAX                # gcd_128:545                        XOR `tmp_0, `tmp_0
cel_Xx_1705: MOV R15, [RSP+-0x3b0]       # gcd_128:546                        MOV `tmp_2, `spill_is_lehmer
cel_Xx_1706: CMP R15, 0                  # gcd_128:547                        CMP `tmp_2, 0
cel_Xx_1707: MOV RCX, 96                 # gcd_128:548                        MOV `tmp_3, 96
cel_Xx_1708: CMOVNE RAX, RCX             # gcd_128:549                        CMOVNE `tmp_0, `tmp_3
cel_Xx_1709: XOR RCX, RCX                # gcd_128:550                        XOR `tmp_3, `tmp_3
cel_Xx_1710: CMP RDX, RAX                # gcd_128:553                        CMP `tmp_1, `tmp_0
cel_Xx_1711: CMOVB RDX, RAX              # gcd_128:554                        CMOVB `tmp_1, `tmp_0
cel_Xx_1712: SUB RDX, 0x32               # gcd_128:562                        SUB `tmp_1, 0x32
cel_Xx_1713: CMOVB RDX, RCX              # gcd_128:566                        CMOVB `tmp_1, `tmp_3
cel_Xx_1714: OR R15, RDX                 # gcd_128:569                        OR `tmp_2, `tmp_1
cel_Xx_1715: .text 1                     # gcd_128:111                        .text 1
cel_Xx_1716: .balign 16                  # gcd_128:113                        .balign 16
cel_Xx_1717: _cel_label_26:              # gcd_128:114                        _cel_label_26:
cel_Xx_1718: .quad 0x0                   # gcd_128:115                        .quad 0x0
cel_Xx_1719: .quad 0x0                   # gcd_128:116                        .quad 0x0
cel_Xx_1720: .text                       # gcd_128:117                        .text
cel_Xx_1721: MOV RCX, OFFSET FLAT:_cel_label_26 # gcd_128:575                        MOV `tmp_3, OFFSET FLAT:_cel_label_26
cel_Xx_1722: .text 1                     # gcd_128:111                        .text 1
cel_Xx_1723: .balign 16                  # gcd_128:113                        .balign 16
cel_Xx_1724: _cel_label_27:              # gcd_128:114                        _cel_label_27:
cel_Xx_1725: .quad 0xffffffffffffffff    # gcd_128:115                        .quad 0xffffffffffffffff
cel_Xx_1726: .quad 0xffffffffffffffff    # gcd_128:116                        .quad 0xffffffffffffffff
cel_Xx_1727: .text                       # gcd_128:117                        .text
cel_Xx_1728: MOV RAX, OFFSET FLAT:_cel_label_27 # gcd_128:576                        MOV `tmp_0, OFFSET FLAT:_cel_label_27
cel_Xx_1729: CMOVZ RAX, RCX              # gcd_128:587                        CMOVZ `tmp_0, `tmp_3
cel_Xx_1730: MOVAPD XMM3, [RAX]          # gcd_128:588                        MOVAPD `vector_is_lehmer, [`tmp_0]
cel_Xx_1731: MOV RCX, RDX                # shift_right:23                     MOV RCX, `amount
cel_Xx_1732: MOV RBP, R10                # shift_right:24                     MOV `res, `v_0
cel_Xx_1733: SHRD RBP, R11, CL           # shift_right:25                     SHRD `res, `v_1, CL
cel_Xx_1734: XOR R15, R15                # shift_right:28                     XOR `res_2, `res_2
cel_Xx_1735: SUB RCX, 64                 # shift_right:31                     SUB RCX, 64
cel_Xx_1736: CMOVAE RBP, R15             # shift_right:35                     CMOVAE `res, `res_2
cel_Xx_1737: CMOVAE R15, R11             # shift_right:36                     CMOVAE `res_2, `v_1
cel_Xx_1738: SHR R15, CL                 # shift_right:39                     SHR `res_2, CL
cel_Xx_1739: OR RBP, R15                 # shift_right:42                     OR `res, `res_2
cel_Xx_1740: CVTSI2SD XMM0, RBP          # gcd_128:604                        CVTSI2SD `vector_ab, `new_u_1
cel_Xx_1741: SHUFPD XMM0, XMM0, 0        # gcd_128:609                        SHUFPD `vector_ab, `vector_ab, 0
cel_Xx_1742: MOV RCX, RDX                # shift_right:23                     MOV RCX, `amount
cel_Xx_1743: MOV RBX, R8                 # shift_right:24                     MOV `res, `v_0
cel_Xx_1744: SHRD RBX, R9, CL            # shift_right:25                     SHRD `res, `v_1, CL
cel_Xx_1745: XOR R15, R15                # shift_right:28                     XOR `res_2, `res_2
cel_Xx_1746: SUB RCX, 64                 # shift_right:31                     SUB RCX, 64
cel_Xx_1747: CMOVAE RBX, R15             # shift_right:35                     CMOVAE `res, `res_2
cel_Xx_1748: CMOVAE R15, R9              # shift_right:36                     CMOVAE `res_2, `v_1
cel_Xx_1749: SHR R15, CL                 # shift_right:39                     SHR `res_2, CL
cel_Xx_1750: OR RBX, R15                 # shift_right:42                     OR `res, `res_2
cel_Xx_1751: CVTSI2SD XMM0, RBX          # gcd_128:616                        CVTSI2SD `vector_ab, `new_u_0
cel_Xx_1752: MOV RCX, RDX                # shift_right:23                     MOV RCX, `amount
cel_Xx_1753: MOV RSI, R13                # shift_right:24                     MOV `res, `v_0
cel_Xx_1754: SHRD RSI, R14, CL           # shift_right:25                     SHRD `res, `v_1, CL
cel_Xx_1755: XOR R15, R15                # shift_right:28                     XOR `res_2, `res_2
cel_Xx_1756: SUB RCX, 64                 # shift_right:31                     SUB RCX, 64
cel_Xx_1757: CMOVAE RSI, R15             # shift_right:35                     CMOVAE `res, `res_2
cel_Xx_1758: CMOVAE R15, R14             # shift_right:36                     CMOVAE `res_2, `v_1
cel_Xx_1759: SHR R15, CL                 # shift_right:39                     SHR `res_2, CL
cel_Xx_1760: OR RSI, R15                 # shift_right:42                     OR `res, `res_2
cel_Xx_1761: CVTSI2SD XMM4, RSI          # gcd_128:625                        CVTSI2SD `vector_ab_threshold, `new_v_0
cel_Xx_1762: SHUFPD XMM4, XMM4, 0        # gcd_128:626                        SHUFPD `vector_ab_threshold, `vector_ab_threshold, 0
cel_Xx_1763: JMP _cel_label_18           # gcd_128:630                        JMP _cel_label_18
cel_Xx_1764: _cel_label_19:              # gcd_128:635                        _cel_label_19:
cel_Xx_1765: MOV R15, [RSP+-0x390]       # gcd_128:643                        MOV `tmp, `spill_iter
cel_Xx_1766: CMP R15, 0x3                # gcd_128:644                        CMP `tmp, 0x3
cel_Xx_1767: JE _cel_label_14            # gcd_128:645                        JE _cel_label_14
cel_Xx_1768: JMP _cel_label_20           # gcd_128:647                        JMP _cel_label_20
cel_Xx_1769: _cel_label_21:              # gcd_128:652                        _cel_label_21:
cel_Xx_1770: MOV R8, [RSP+-0x3f8]        # gcd_128:654                        MOV `new_ab_0_0, `spill_ab_start_0_0
cel_Xx_1771: MOV R9, [RSP+-0x3f0]        # gcd_128:655                        MOV `new_ab_0_1, `spill_ab_start_0_1
cel_Xx_1772: MOV R10, [RSP+-0x3e8]       # gcd_128:656                        MOV `new_ab_1_0, `spill_ab_start_1_0
cel_Xx_1773: MOV R11, [RSP+-0x3e0]       # gcd_128:657                        MOV `new_ab_1_1, `spill_ab_start_1_1
cel_Xx_1774: MOV R13, [RSP+-0x3a8]       # gcd_128:658                        MOV `ab_threshold_0, `spill_ab_threshold_0
cel_Xx_1775: MOV R14, [RSP+-0x3a0]       # gcd_128:659                        MOV `ab_threshold_1, `spill_ab_threshold_1
cel_Xx_1776: JMP _cel_label_17           # gcd_128:661                        JMP _cel_label_17
cel_Xx_1777: _cel_label_20:              # gcd_128:666                        _cel_label_20:
cel_Xx_1778: JMP _cel_label_15           # compile_asm_gcd_128:145            JMP _cel_label_15
cel_Xx_1779: _cel_label_14:              # compile_asm_gcd_128:146            _cel_label_14:
cel_Xx_1780: MOV RBX, 1                  # compile_asm_gcd_128:148            MOV `tmp, 1
cel_Xx_1781: JMP _cel_label_16           # compile_asm_gcd_128:149            JMP _cel_label_16
cel_Xx_1782: _cel_label_15:              # compile_asm_gcd_128:151            _cel_label_15:
cel_Xx_1783: MOV RBX, 0                  # compile_asm_gcd_128:153            MOV `tmp, 0
cel_Xx_1784: _cel_label_16:              # compile_asm_gcd_128:155            _cel_label_16:
cel_Xx_1785: MOV [RSP+-0x398], RBX       # compile_asm_gcd_128:157            MOV [RSP+-0x398], `tmp
cel_Xx_1786: MOV RBP, [RSP+-0x400]       # compile_asm_gcd_128:159            MOV `data_addr, `spill_data_addr
cel_Xx_1787: MOV RBX, [RSP+-0x3f8]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3f8]
cel_Xx_1788: MOV [RBP+0x0], RBX          # compile_asm_gcd_128:163            MOV [`data_addr+0x0], `tmp
cel_Xx_1789: MOV RBX, [RSP+-0x3f0]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3f0]
cel_Xx_1790: MOV [RBP+0x8], RBX          # compile_asm_gcd_128:163            MOV [`data_addr+0x8], `tmp
cel_Xx_1791: MOV RBX, [RSP+-0x3e8]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3e8]
cel_Xx_1792: MOV [RBP+0x10], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x10], `tmp
cel_Xx_1793: MOV RBX, [RSP+-0x3e0]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3e0]
cel_Xx_1794: MOV [RBP+0x18], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x18], `tmp
cel_Xx_1795: MOV RBX, [RSP+-0x3d8]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3d8]
cel_Xx_1796: MOV [RBP+0x20], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x20], `tmp
cel_Xx_1797: MOV RBX, [RSP+-0x3d0]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3d0]
cel_Xx_1798: MOV [RBP+0x28], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x28], `tmp
cel_Xx_1799: MOV RBX, [RSP+-0x3c8]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3c8]
cel_Xx_1800: MOV [RBP+0x30], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x30], `tmp
cel_Xx_1801: MOV RBX, [RSP+-0x3c0]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3c0]
cel_Xx_1802: MOV [RBP+0x38], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x38], `tmp
cel_Xx_1803: MOV RBX, [RSP+-0x3b8]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3b8]
cel_Xx_1804: MOV [RBP+0x40], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x40], `tmp
cel_Xx_1805: MOV RBX, [RSP+-0x3b0]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3b0]
cel_Xx_1806: MOV [RBP+0x48], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x48], `tmp
cel_Xx_1807: MOV RBX, [RSP+-0x3a8]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3a8]
cel_Xx_1808: MOV [RBP+0x50], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x50], `tmp
cel_Xx_1809: MOV RBX, [RSP+-0x3a0]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x3a0]
cel_Xx_1810: MOV [RBP+0x58], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x58], `tmp
cel_Xx_1811: MOV RBX, [RSP+-0x398]       # compile_asm_gcd_128:162            MOV `tmp, [RSP+-0x398]
cel_Xx_1812: MOV [RBP+0x60], RBX         # compile_asm_gcd_128:163            MOV [`data_addr+0x60], `tmp
cel_Xx_1813: MOV RAX, 0                  # ~asm_function:117                  MOV RAX, 0
cel_Xx_1814: _cel_label_28:              # ~asm_function:121                  _cel_label_28:
cel_Xx_1815: MOV RSP, [RSP]              # ~asm_function:125                  MOV RSP, [RSP]
cel_Xx_1816: POP R15                     # ~asm_function:128                  POP R15
cel_Xx_1817: POP R14                     # ~asm_function:128                  POP R14
cel_Xx_1818: POP R13                     # ~asm_function:128                  POP R13
cel_Xx_1819: POP R12                     # ~asm_function:128                  POP R12
cel_Xx_1820: POP RBX                     # ~asm_function:128                  POP RBX
cel_Xx_1821: POP RBP                     # ~asm_function:128                  POP RBP
cel_Xx_1822: RET                         # ~asm_function:130                  RET
cel_Xx_1823: .global asm_cel_func_gcd_unsigned # asm_function:74                    .global asm_cel_func_gcd_unsigned
cel_Xx_1824: asm_cel_func_gcd_unsigned:  # asm_function:75                    asm_cel_func_gcd_unsigned:
cel_Xx_1825: PUSH RBP                    # asm_function:91                    PUSH RBP
cel_Xx_1826: PUSH RBX                    # asm_function:91                    PUSH RBX
cel_Xx_1827: PUSH R12                    # asm_function:91                    PUSH R12
cel_Xx_1828: PUSH R13                    # asm_function:91                    PUSH R13
cel_Xx_1829: PUSH R14                    # asm_function:91                    PUSH R14
cel_Xx_1830: PUSH R15                    # asm_function:91                    PUSH R15
cel_Xx_1831: MOV RAX, RSP                # asm_function:104                   MOV RAX, RSP
cel_Xx_1832: AND RSP, -64                # asm_function:105                   AND RSP, -64
cel_Xx_1833: SUB RSP, 64                 # asm_function:106                   SUB RSP, 64
cel_Xx_1834: MOV [RSP], RAX              # asm_function:107                   MOV [RSP], RAX
cel_Xx_1835: MOV [RSP+-0x400], RDI       # compile_asm_gcd_unsigned:208       MOV `spill_data_addr, `data_addr
cel_Xx_1836: MOV RBX, [RDI+0x0]          # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x0]
cel_Xx_1837: MOV [RSP+-0x3f8], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3f8], `tmp
cel_Xx_1838: MOV RBX, [RDI+0x8]          # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x8]
cel_Xx_1839: MOV [RSP+-0x3f0], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3f0], `tmp
cel_Xx_1840: MOV RBX, [RDI+0x10]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x10]
cel_Xx_1841: MOV [RSP+-0x3e8], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3e8], `tmp
cel_Xx_1842: MOV RBX, [RDI+0x18]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x18]
cel_Xx_1843: MOV [RSP+-0x3e0], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3e0], `tmp
cel_Xx_1844: MOV RBX, [RDI+0x20]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x20]
cel_Xx_1845: MOV [RSP+-0x3d8], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3d8], `tmp
cel_Xx_1846: MOV RBX, [RDI+0x28]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x28]
cel_Xx_1847: MOV [RSP+-0x3d0], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3d0], `tmp
cel_Xx_1848: MOV RBX, [RDI+0x30]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x30]
cel_Xx_1849: MOV [RSP+-0x3c8], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3c8], `tmp
cel_Xx_1850: MOV RBX, [RDI+0x38]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x38]
cel_Xx_1851: MOV [RSP+-0x3c0], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3c0], `tmp
cel_Xx_1852: MOV RBX, [RDI+0x40]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x40]
cel_Xx_1853: MOV [RSP+-0x3b8], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3b8], `tmp
cel_Xx_1854: MOV RBX, [RDI+0x48]         # compile_asm_gcd_unsigned:211       MOV `tmp, [`data_addr+0x48]
cel_Xx_1855: MOV [RSP+-0x3b0], RBX       # compile_asm_gcd_unsigned:212       MOV [RSP+-0x3b0], `tmp
cel_Xx_1856: MOV QWORD PTR [RSP+-0x3b8], -1 # gcd_unsigned:415                   MOV QWORD PTR `spill_iter, -1
cel_Xx_1857: JMP _cel_label_29           # gcd_unsigned:421                   JMP _cel_label_29
cel_Xx_1858: _cel_label_30:              # gcd_unsigned:423                   _cel_label_30:
cel_Xx_1859: MOV QWORD PTR [RSP+-0x3a8], 1 # gcd_128:107                        MOV QWORD PTR `spill_u_0, 1
cel_Xx_1860: MOV QWORD PTR [RSP+-0x3a0], 0 # gcd_128:108                        MOV QWORD PTR `spill_u_1, 0
cel_Xx_1861: MOV QWORD PTR [RSP+-0x398], 0 # gcd_128:109                        MOV QWORD PTR `spill_v_0, 0
cel_Xx_1862: MOV QWORD PTR [RSP+-0x390], 1 # gcd_128:110                        MOV QWORD PTR `spill_v_1, 1
cel_Xx_1863: MOV QWORD PTR [RSP+-0x388], 0 # gcd_128:111                        MOV QWORD PTR `spill_parity, 0
cel_Xx_1864: MOV QWORD PTR [RSP+-0x348], 0x3 # gcd_128:112                        MOV QWORD PTR `spill_iter, 0x3
cel_Xx_1865: JMP _cel_label_36           # gcd_128:120                        JMP _cel_label_36
cel_Xx_1866: _cel_label_33:              # gcd_128:122                        _cel_label_33:
cel_Xx_1867: MOV R12, [_cel_label_3]     # gcd_base_continued_fraction:141    MOV `c_table_delta_minus_1, [_cel_label_3]
cel_Xx_1868: MOV R11, 0x5                # gcd_base_continued_fraction:146    MOV `loop_counter, 0x5
cel_Xx_1869: MOVAPD XMM1, [_cel_label_6] # gcd_base_continued_fraction:148    MOVAPD `u, [_cel_label_6]
cel_Xx_1870: MOVAPD XMM2, [_cel_label_7] # gcd_base_continued_fraction:149    MOVAPD `v, [_cel_label_7]
cel_Xx_1871: MOVAPD XMM14, [_cel_label_8] # gcd_base_continued_fraction:150    MOVAPD `range_check_range, [_cel_label_8]
cel_Xx_1872: MOVAPD XMM15, [_cel_label_9] # gcd_base_continued_fraction:151    MOVAPD `double_abs_mask, [_cel_label_9]
cel_Xx_1873: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:154    MOVAPD `tmp, `ab
cel_Xx_1874: SHUFPD XMM9, XMM9, 3        # gcd_base_continued_fraction:155    SHUFPD `tmp, `tmp, 3
cel_Xx_1875: MOVAPD XMM13, XMM0          # gcd_base_continued_fraction:156    MOVAPD `q, `ab
cel_Xx_1876: DIVSD XMM13, XMM9           # gcd_base_continued_fraction:157    DIVSD `q, `tmp
cel_Xx_1877: _cel_label_38:              # gcd_base_continued_fraction:160    _cel_label_38:
cel_Xx_1878: #gcd_base loop start        # gcd_base_continued_fraction:166    #gcd_base loop start
cel_Xx_1879: MOVQ R8, XMM13              # gcd_base_continued_fraction:169    MOVQ `q_scalar, `q
cel_Xx_1880: MOV R9, R8                  # gcd_base_continued_fraction:170    MOV `q_scalar_2, `q_scalar
cel_Xx_1881: MOV R10, R8                 # gcd_base_continued_fraction:171    MOV `q_scalar_3, `q_scalar
cel_Xx_1882: SHR R8, 0x28                # gcd_base_continued_fraction:175    SHR `q_scalar, 0x28
cel_Xx_1883: AND R8, -32                 # gcd_base_continued_fraction:176    AND `q_scalar, -32
cel_Xx_1884: SUB R8, 0x3ff000            # gcd_base_continued_fraction:181    SUB `q_scalar, 0x3ff000
cel_Xx_1885: JB _cel_label_39            # gcd_base_continued_fraction:182    JB _cel_label_39
cel_Xx_1886: CMP R8, 0x8000              # gcd_base_continued_fraction:183    CMP `q_scalar, 0x8000
cel_Xx_1887: JAE _cel_label_39           # gcd_base_continued_fraction:184    JAE _cel_label_39
cel_Xx_1888: MOVAPD XMM5, [cel_gcd_base_table+R8] # gcd_base_continued_fraction:193    MOVAPD `m_0, [cel_gcd_base_table+`q_scalar]
cel_Xx_1889: MOVAPD XMM6, [cel_gcd_base_table+16+R8] # gcd_base_continued_fraction:194    MOVAPD `m_1, [cel_gcd_base_table+16+`q_scalar]
cel_Xx_1890: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:199    MOVAPD `tmp, `ab
cel_Xx_1891: CMPLEPD XMM9, XMM4          # gcd_base_continued_fraction:200    CMPLEPD `tmp, `ab_threshold
cel_Xx_1892: PTEST XMM9, XMM9            # gcd_base_continued_fraction:201    PTEST `tmp, `tmp
cel_Xx_1893: JNZ _cel_label_37           # gcd_base_continued_fraction:202    JNZ _cel_label_37
cel_Xx_1894: AND R9, R12                 # gcd_base_continued_fraction:205    AND `q_scalar_2, `c_table_delta_minus_1
cel_Xx_1895: JZ _cel_label_39            # gcd_base_continued_fraction:206    JZ _cel_label_39
cel_Xx_1896: CMP R9, R12                 # gcd_base_continued_fraction:207    CMP `q_scalar_2, `c_table_delta_minus_1
cel_Xx_1897: JE _cel_label_39            # gcd_base_continued_fraction:208    JE _cel_label_39
cel_Xx_1898: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
cel_Xx_1899: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
cel_Xx_1900: MOVAPD XMM10, XMM0          # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
cel_Xx_1901: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1902: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1903: MOVAPD XMM7, XMM9           # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1904: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1905: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1906: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1907: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1908: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1909: ADDPD XMM7, XMM10           # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1910: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1911: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1912: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1913: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1914: MOVAPD XMM8, XMM7           # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
cel_Xx_1915: SHUFPD XMM8, XMM8, 3        # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
cel_Xx_1916: MOVAPD XMM13, XMM7          # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
cel_Xx_1917: DIVSD XMM13, XMM8           # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
cel_Xx_1918: MOVAPD XMM9, XMM1           # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
cel_Xx_1919: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
cel_Xx_1920: MOVAPD XMM10, XMM1          # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
cel_Xx_1921: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1922: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1923: MOVAPD XMM11, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1924: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1925: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1926: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1927: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1928: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1929: ADDPD XMM11, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1930: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1931: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1932: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1933: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1934: MOVAPD XMM9, XMM11          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1935: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1936: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1937: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1938: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1939: MOVAPD XMM9, XMM2           # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
cel_Xx_1940: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
cel_Xx_1941: MOVAPD XMM10, XMM2          # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
cel_Xx_1942: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1943: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1944: MOVAPD XMM12, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1945: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1946: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1947: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1948: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1949: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1950: ADDPD XMM12, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1951: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1952: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1953: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1954: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1955: MOVAPD XMM9, XMM12          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_1956: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1957: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1958: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1959: JNZ _cel_label_39           # range_check:31                     JNZ _cel_label_39
cel_Xx_1960: UCOMISD XMM7, XMM4          # gcd_base_continued_fraction:260    UCOMISD `new_ab, `ab_threshold
cel_Xx_1961: JBE _cel_label_39           # gcd_base_continued_fraction:261    JBE _cel_label_39
cel_Xx_1962: JMP _cel_label_40           # gcd_base_continued_fraction:264    JMP _cel_label_40
cel_Xx_1963: _cel_label_39:              # gcd_base_continued_fraction:266    _cel_label_39:
cel_Xx_1964: #gcd_base no table          # gcd_base_continued_fraction:267    #gcd_base no table
cel_Xx_1965: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:272    MOVAPD `tmp, `ab
cel_Xx_1966: CMPLEPD XMM9, XMM4          # gcd_base_continued_fraction:273    CMPLEPD `tmp, `ab_threshold
cel_Xx_1967: PTEST XMM9, XMM9            # gcd_base_continued_fraction:274    PTEST `tmp, `tmp
cel_Xx_1968: JNZ _cel_label_37           # gcd_base_continued_fraction:275    JNZ _cel_label_37
cel_Xx_1969: MOVQ XMM13, R10             # gcd_base_continued_fraction:278    MOVQ `q, `q_scalar_3
cel_Xx_1970: ROUNDSD XMM13, XMM13, 1     # gcd_base_continued_fraction:282    ROUNDSD `q, `q, 1
cel_Xx_1971: MOVAPD XMM5, [_cel_label_7] # gcd_base_continued_fraction:288    MOVAPD `m_0, [_cel_label_7]
cel_Xx_1972: MOVAPD XMM6, XMM5           # gcd_base_continued_fraction:289    MOVAPD `m_1, `m_0
cel_Xx_1973: SUBSD XMM6, XMM13           # gcd_base_continued_fraction:290    SUBSD `m_1, `q
cel_Xx_1974: SHUFPD XMM6, XMM6, 1        # gcd_base_continued_fraction:291    SHUFPD `m_1, `m_1, 1
cel_Xx_1975: MOVAPD XMM9, XMM0           # gcd_base_continued_fraction:214    MOVAPD `tmp, `ab
cel_Xx_1976: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:215    SHUFPD `tmp, `tmp, 0
cel_Xx_1977: MOVAPD XMM10, XMM0          # gcd_base_continued_fraction:217    MOVAPD `tmp2, `ab
cel_Xx_1978: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:218    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1979: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_1980: MOVAPD XMM7, XMM9           # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_1981: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1982: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1983: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1984: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_1985: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_1986: ADDPD XMM7, XMM10           # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_1987: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_1988: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_1989: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_1990: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_1991: MOVAPD XMM8, XMM7           # gcd_base_continued_fraction:226    MOVAPD `new_ab_1, `new_ab
cel_Xx_1992: SHUFPD XMM8, XMM8, 3        # gcd_base_continued_fraction:227    SHUFPD `new_ab_1, `new_ab_1, 3
cel_Xx_1993: MOVAPD XMM13, XMM7          # gcd_base_continued_fraction:231    MOVAPD `q, `new_ab
cel_Xx_1994: DIVSD XMM13, XMM8           # gcd_base_continued_fraction:232    DIVSD `q, `new_ab_1
cel_Xx_1995: MOVAPD XMM9, XMM1           # gcd_base_continued_fraction:234    MOVAPD `tmp, `u
cel_Xx_1996: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:235    SHUFPD `tmp, `tmp, 0
cel_Xx_1997: MOVAPD XMM10, XMM1          # gcd_base_continued_fraction:237    MOVAPD `tmp2, `u
cel_Xx_1998: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:238    SHUFPD `tmp2, `tmp2, 3
cel_Xx_1999: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_2000: MOVAPD XMM11, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_2001: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_2002: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_2003: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_2004: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_2005: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_2006: ADDPD XMM11, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_2007: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_2008: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_2009: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_2010: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_2011: MOVAPD XMM9, XMM11          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_2012: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_2013: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_2014: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_2015: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_2016: MOVAPD XMM9, XMM2           # gcd_base_continued_fraction:246    MOVAPD `tmp, `v
cel_Xx_2017: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:247    SHUFPD `tmp, `tmp, 0
cel_Xx_2018: MOVAPD XMM10, XMM2          # gcd_base_continued_fraction:249    MOVAPD `tmp2, `v
cel_Xx_2019: SHUFPD XMM10, XMM10, 3      # gcd_base_continued_fraction:250    SHUFPD `tmp2, `tmp2, 3
cel_Xx_2020: MULPD XMM9, XMM5            # dot_product_exact:46               MULPD `b_0, `a_0
cel_Xx_2021: MOVAPD XMM12, XMM9          # dot_product_exact:47               MOVAPD `v, `b_0
cel_Xx_2022: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_2023: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_2024: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_2025: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_2026: MULPD XMM10, XMM6           # dot_product_exact:54               MULPD `b_1, `a_1
cel_Xx_2027: ADDPD XMM12, XMM10          # dot_product_exact:55               ADDPD `v, `b_1
cel_Xx_2028: ANDPD XMM10, XMM15          # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_2029: CMPNLEPD XMM10, XMM14       # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_2030: PTEST XMM10, XMM10          # range_check:30                     PTEST `tmp, `tmp
cel_Xx_2031: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_2032: MOVAPD XMM9, XMM12          # dot_product_exact:60               MOVAPD `b_0, `v
cel_Xx_2033: ANDPD XMM9, XMM15           # range_check:21                     ANDPD `tmp, `double_abs_mask
cel_Xx_2034: CMPNLEPD XMM9, XMM14        # range_check:24                     CMPNLEPD `tmp, `range
cel_Xx_2035: PTEST XMM9, XMM9            # range_check:30                     PTEST `tmp, `tmp
cel_Xx_2036: JNZ _cel_label_37           # range_check:31                     JNZ _cel_label_37
cel_Xx_2037: _cel_label_40:              # gcd_base_continued_fraction:296    _cel_label_40:
cel_Xx_2038: #gcd_base end no table      # gcd_base_continued_fraction:297    #gcd_base end no table
cel_Xx_2039: MOVAPD XMM5, XMM11          # gcd_base_continued_fraction:322    MOVAPD `m_0, `new_u
cel_Xx_2040: SHUFPD XMM5, XMM12, 0       # gcd_base_continued_fraction:323    SHUFPD `m_0, `new_v, 0
cel_Xx_2041: MOVAPD XMM6, XMM11          # gcd_base_continued_fraction:326    MOVAPD `m_1, `new_u
cel_Xx_2042: SHUFPD XMM6, XMM12, 3       # gcd_base_continued_fraction:327    SHUFPD `m_1, `new_v, 3
cel_Xx_2043: MOVAPD XMM9, XMM7           # gcd_base_continued_fraction:330    MOVAPD `tmp, `new_ab
cel_Xx_2044: SHUFPD XMM9, XMM9, 0        # gcd_base_continued_fraction:331    SHUFPD `tmp, `tmp, 0
cel_Xx_2045: SUBPD XMM9, XMM8            # gcd_base_continued_fraction:334    SUBPD `tmp, `new_ab_1
cel_Xx_2046: ADDPD XMM9, XMM5            # gcd_base_continued_fraction:337    ADDPD `tmp, `m_0
cel_Xx_2047: CMPLTPD XMM9, XMM6          # gcd_base_continued_fraction:340    CMPLTPD `tmp, `m_1
cel_Xx_2048: XORPD XMM6, [_cel_label_12] # gcd_base_continued_fraction:343    XORPD `m_1, [_cel_label_12]
cel_Xx_2049: CMPLTPD XMM8, XMM6          # gcd_base_continued_fraction:346    CMPLTPD `new_ab_1, `m_1
cel_Xx_2050: ORPD XMM9, XMM8             # gcd_base_continued_fraction:350    ORPD `tmp, `new_ab_1
cel_Xx_2051: ANDPD XMM9, XMM3            # gcd_base_continued_fraction:351    ANDPD `tmp, `is_lehmer
cel_Xx_2052: PTEST XMM9, XMM9            # gcd_base_continued_fraction:352    PTEST `tmp, `tmp
cel_Xx_2053: JNZ _cel_label_37           # gcd_base_continued_fraction:353    JNZ _cel_label_37
cel_Xx_2054: MOVAPD XMM0, XMM7           # gcd_base_continued_fraction:355    MOVAPD `ab, `new_ab
cel_Xx_2055: MOVAPD XMM1, XMM11          # gcd_base_continued_fraction:356    MOVAPD `u, `new_u
cel_Xx_2056: MOVAPD XMM2, XMM12          # gcd_base_continued_fraction:357    MOVAPD `v, `new_v
cel_Xx_2057: DEC R11                     # gcd_base_continued_fraction:360    DEC `loop_counter
cel_Xx_2058: JNZ _cel_label_38           # gcd_base_continued_fraction:361    JNZ _cel_label_38
cel_Xx_2059: #gcd_base loop end          # gcd_base_continued_fraction:363    #gcd_base loop end
cel_Xx_2060: _cel_label_37:              # gcd_base_continued_fraction:368    _cel_label_37:
cel_Xx_2061: CMP R11, 0x5                # gcd_base_continued_fraction:370    CMP `loop_counter, 0x5
cel_Xx_2062: JE _cel_label_34            # gcd_base_continued_fraction:371    JE _cel_label_34
cel_Xx_2063: MOVAPD XMM8, [_cel_label_9] # gcd_128:175                        MOVAPD `double_abs_mask, [_cel_label_9]
cel_Xx_2064: MOVAPD XMM5, XMM1           # gcd_128:203                        MOVAPD `tmp_a, `vector_u
cel_Xx_2065: PAND XMM5, XMM8             # gcd_128:189                        PAND `tmp_a, `double_abs_mask
cel_Xx_2066: CVTTSD2SI R8, XMM5          # gcd_128:197                        CVTTSD2SI `m_0_0, `tmp_a
cel_Xx_2067: SHUFPD XMM5, XMM5, 3        # gcd_128:206                        SHUFPD `tmp_a, `tmp_a, 3
cel_Xx_2068: CVTTSD2SI R10, XMM5         # gcd_128:197                        CVTTSD2SI `m_1_0, `tmp_a
cel_Xx_2069: MOVAPD XMM5, XMM2           # gcd_128:211                        MOVAPD `tmp_a, `vector_v
cel_Xx_2070: PAND XMM5, XMM8             # gcd_128:189                        PAND `tmp_a, `double_abs_mask
cel_Xx_2071: CVTTSD2SI R9, XMM5          # gcd_128:197                        CVTTSD2SI `m_0_1, `tmp_a
cel_Xx_2072: SHUFPD XMM5, XMM5, 3        # gcd_128:214                        SHUFPD `tmp_a, `tmp_a, 3
cel_Xx_2073: CVTTSD2SI R11, XMM5         # gcd_128:197                        CVTTSD2SI `m_1_1, `tmp_a
cel_Xx_2074: MOV R12, [RSP+-0x3a8]       # gcd_128:217                        MOV `tmp_0, `spill_u_0
cel_Xx_2075: MOV R13, [RSP+-0x3a0]       # gcd_128:218                        MOV `tmp_1, `spill_u_1
cel_Xx_2076: MOV RAX, R8                 # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_2077: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_2078: JC _cel_label_34            # dot_product_exact:58               JC _cel_label_34
cel_Xx_2079: MOV RBX, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_2080: MOV RAX, R9                 # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_2081: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_2082: JC _cel_label_34            # dot_product_exact:64               JC _cel_label_34
cel_Xx_2083: ADD RBX, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_2084: JC _cel_label_34            # dot_product_exact:68               JC _cel_label_34
cel_Xx_2085: MOV RAX, R10                # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_2086: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_2087: JC _cel_label_34            # dot_product_exact:58               JC _cel_label_34
cel_Xx_2088: MOV RBP, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_2089: MOV RAX, R11                # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_2090: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_2091: JC _cel_label_34            # dot_product_exact:64               JC _cel_label_34
cel_Xx_2092: ADD RBP, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_2093: JC _cel_label_34            # dot_product_exact:68               JC _cel_label_34
cel_Xx_2094: MOV R12, [RSP+-0x398]       # gcd_128:222                        MOV `tmp_0, `spill_v_0
cel_Xx_2095: MOV R13, [RSP+-0x390]       # gcd_128:223                        MOV `tmp_1, `spill_v_1
cel_Xx_2096: MOV RAX, R8                 # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_2097: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_2098: JC _cel_label_34            # dot_product_exact:58               JC _cel_label_34
cel_Xx_2099: MOV RSI, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_2100: MOV RAX, R9                 # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_2101: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_2102: JC _cel_label_34            # dot_product_exact:64               JC _cel_label_34
cel_Xx_2103: ADD RSI, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_2104: JC _cel_label_34            # dot_product_exact:68               JC _cel_label_34
cel_Xx_2105: MOV RAX, R10                # dot_product_exact:56               MOV RAX, `a_0
cel_Xx_2106: MUL R12                     # dot_product_exact:57               MUL `b_0
cel_Xx_2107: JC _cel_label_34            # dot_product_exact:58               JC _cel_label_34
cel_Xx_2108: MOV RDI, RAX                # dot_product_exact:59               MOV `out, RAX
cel_Xx_2109: MOV RAX, R11                # dot_product_exact:62               MOV RAX, `a_1
cel_Xx_2110: MUL R13                     # dot_product_exact:63               MUL `b_1
cel_Xx_2111: JC _cel_label_34            # dot_product_exact:64               JC _cel_label_34
cel_Xx_2112: ADD RDI, RAX                # dot_product_exact:67               ADD `out, RAX
cel_Xx_2113: JC _cel_label_34            # dot_product_exact:68               JC _cel_label_34
cel_Xx_2114: MOV R13, [RSP+-0x378]       # gcd_128:249                        MOV `ab_start_0_0, `spill_ab_start_0_0
cel_Xx_2115: MOV R14, [RSP+-0x370]       # gcd_128:250                        MOV `ab_start_0_1, `spill_ab_start_0_1
cel_Xx_2116: MOV R15, [RSP+-0x368]       # gcd_128:251                        MOV `ab_start_1_0, `spill_ab_start_1_0
cel_Xx_2117: MOV RCX, [RSP+-0x360]       # gcd_128:252                        MOV `ab_start_1_1, `spill_ab_start_1_1
cel_Xx_2118: MOVAPD XMM5, XMM2           # gcd_128:256                        MOVAPD `tmp_a, `vector_v
cel_Xx_2119: SHUFPD XMM5, XMM5, 3        # gcd_128:257                        SHUFPD `tmp_a, `tmp_a, 3
cel_Xx_2120: MOVQ RAX, XMM5              # gcd_128:258                        MOVQ RAX, `tmp_a
cel_Xx_2121: SHR RAX, 63                 # gcd_128:259                        SHR RAX, 63
cel_Xx_2122: MOV R12, [RSP+-0x388]       # gcd_128:262                        MOV `new_parity, `spill_parity
cel_Xx_2123: XOR R12, RAX                # gcd_128:263                        XOR `new_parity, RAX
cel_Xx_2124: MOV RAX, R13                # gcd_128:268                        MOV RAX, `ab_start_0_0
cel_Xx_2125: MUL RBX                     # gcd_128:269                        MUL `new_u_0
cel_Xx_2126: MOV R8, RAX                 # gcd_128:272                        MOV `new_ab_0_0, RAX
cel_Xx_2127: MOV R9, RDX                 # gcd_128:273                        MOV `new_ab_0_1, RDX
cel_Xx_2128: MOV RAX, R14                # gcd_128:276                        MOV RAX, `ab_start_0_1
cel_Xx_2129: MUL RBX                     # gcd_128:277                        MUL `new_u_0
cel_Xx_2130: ADD R9, RAX                 # gcd_128:280                        ADD `new_ab_0_1, RAX
cel_Xx_2131: MOV RAX, R15                # gcd_128:283                        MOV RAX, `ab_start_1_0
cel_Xx_2132: MUL RSI                     # gcd_128:284                        MUL `new_v_0
cel_Xx_2133: SUB R8, RAX                 # gcd_128:287                        SUB `new_ab_0_0, RAX
cel_Xx_2134: SBB R9, RDX                 # gcd_128:288                        SBB `new_ab_0_1, RDX
cel_Xx_2135: MOV RAX, RCX                # gcd_128:291                        MOV RAX, `ab_start_1_1
cel_Xx_2136: MUL RSI                     # gcd_128:292                        MUL `new_v_0
cel_Xx_2137: SUB R9, RAX                 # gcd_128:295                        SUB `new_ab_0_1, RAX
cel_Xx_2138: MOV RAX, R15                # gcd_128:268                        MOV RAX, `ab_start_1_0
cel_Xx_2139: MUL RDI                     # gcd_128:269                        MUL `new_v_1
cel_Xx_2140: MOV R10, RAX                # gcd_128:272                        MOV `new_ab_1_0, RAX
cel_Xx_2141: MOV R11, RDX                # gcd_128:273                        MOV `new_ab_1_1, RDX
cel_Xx_2142: MOV RAX, RCX                # gcd_128:276                        MOV RAX, `ab_start_1_1
cel_Xx_2143: MUL RDI                     # gcd_128:277                        MUL `new_v_1
cel_Xx_2144: ADD R11, RAX                # gcd_128:280                        ADD `new_ab_1_1, RAX
cel_Xx_2145: MOV RAX, R13                # gcd_128:283                        MOV RAX, `ab_start_0_0
cel_Xx_2146: MUL RBP                     # gcd_128:284                        MUL `new_u_1
cel_Xx_2147: SUB R10, RAX                # gcd_128:287                        SUB `new_ab_1_0, RAX
cel_Xx_2148: SBB R11, RDX                # gcd_128:288                        SBB `new_ab_1_1, RDX
cel_Xx_2149: MOV RAX, R14                # gcd_128:291                        MOV RAX, `ab_start_0_1
cel_Xx_2150: MUL RBP                     # gcd_128:292                        MUL `new_u_1
cel_Xx_2151: SUB R11, RAX                # gcd_128:295                        SUB `new_ab_1_1, RAX
cel_Xx_2152: MOV RAX, -1                 # gcd_128:326                        MOV RAX, -1
cel_Xx_2153: ADD RAX, R12                # gcd_128:327                        ADD RAX, `new_parity
cel_Xx_2154: NOT RAX                     # gcd_128:328                        NOT RAX
cel_Xx_2155: XOR R8, RAX                 # gcd_128:333                        XOR `new_ab_0_0, RAX
cel_Xx_2156: XOR R9, RAX                 # gcd_128:334                        XOR `new_ab_0_1, RAX
cel_Xx_2157: ADD R8, R12                 # gcd_128:337                        ADD `new_ab_0_0, `new_parity
cel_Xx_2158: ADC R9, 0                   # gcd_128:338                        ADC `new_ab_0_1, 0
cel_Xx_2159: XOR R10, RAX                # gcd_128:333                        XOR `new_ab_1_0, RAX
cel_Xx_2160: XOR R11, RAX                # gcd_128:334                        XOR `new_ab_1_1, RAX
cel_Xx_2161: ADD R10, R12                # gcd_128:337                        ADD `new_ab_1_0, `new_parity
cel_Xx_2162: ADC R11, 0                  # gcd_128:338                        ADC `new_ab_1_1, 0
cel_Xx_2163: MOV RAX, [RSP+-0x380]       # gcd_128:366                        MOV `is_lehmer, `spill_is_lehmer
cel_Xx_2164: MOV R15, R8                 # gcd_128:369                        MOV `ab_delta_0, `new_ab_0_0
cel_Xx_2165: MOV RCX, R9                 # gcd_128:370                        MOV `ab_delta_1, `new_ab_0_1
cel_Xx_2166: SUB R15, R10                # gcd_128:371                        SUB `ab_delta_0, `new_ab_1_0
cel_Xx_2167: SBB RCX, R11                # gcd_128:372                        SBB `ab_delta_1, `new_ab_1_1
cel_Xx_2168: CMP R12, 0                  # gcd_128:391                        CMP `new_parity, 0
cel_Xx_2169: MOV R13, RBP                # gcd_128:392                        MOV `ab_threshold_0, `new_u_1
cel_Xx_2170: CMOVE R13, RDI              # gcd_128:393                        CMOVE `ab_threshold_0, `new_v_1
cel_Xx_2171: MOV R14, RBX                # gcd_128:397                        MOV `ab_threshold_1, `new_u_0
cel_Xx_2172: CMOVE R14, RSI              # gcd_128:398                        CMOVE `ab_threshold_1, `new_v_0
cel_Xx_2173: MOV RDX, RDI                # gcd_128:401                        MOV `b_new_min, `new_v_1
cel_Xx_2174: CMOVE RDX, RBP              # gcd_128:402                        CMOVE `b_new_min, `new_u_1
cel_Xx_2175: CMP RAX, 0                  # gcd_128:405                        CMP `is_lehmer, 0
cel_Xx_2176: CMOVE R13, RAX              # gcd_128:406                        CMOVE `ab_threshold_0, `is_lehmer
cel_Xx_2177: CMOVE R14, RAX              # gcd_128:407                        CMOVE `ab_threshold_1, `is_lehmer
cel_Xx_2178: CMOVE RDX, RAX              # gcd_128:410                        CMOVE `b_new_min, `is_lehmer
cel_Xx_2179: ADD R13, R14                # gcd_128:413                        ADD `ab_threshold_0, `ab_threshold_1
cel_Xx_2180: MOV R14, 0                  # gcd_128:414                        MOV `ab_threshold_1, 0
cel_Xx_2181: ADC R14, 0                  # gcd_128:415                        ADC `ab_threshold_1, 0
cel_Xx_2182: SUB R15, R13                # gcd_128:420                        SUB `ab_delta_0, `ab_threshold_0
cel_Xx_2183: SBB RCX, R14                # gcd_128:421                        SBB `ab_delta_1, `ab_threshold_1
cel_Xx_2184: JC _cel_label_34            # gcd_128:422                        JC _cel_label_34
cel_Xx_2185: CMP R10, RDX                # gcd_128:426                        CMP `new_ab_1_0, `b_new_min
cel_Xx_2186: MOV RDX, R11                # gcd_128:427                        MOV `b_new_min, `new_ab_1_1
cel_Xx_2187: SBB RDX, 0                  # gcd_128:428                        SBB `b_new_min, 0
cel_Xx_2188: JC _cel_label_34            # gcd_128:429                        JC _cel_label_34
cel_Xx_2189: MOV R13, [RSP+-0x358]       # gcd_128:434                        MOV `ab_threshold_0, `spill_ab_threshold_0
cel_Xx_2190: MOV R14, [RSP+-0x350]       # gcd_128:435                        MOV `ab_threshold_1, `spill_ab_threshold_1
cel_Xx_2191: MOV R15, R13                # gcd_128:438                        MOV `ab_delta_0, `ab_threshold_0
cel_Xx_2192: MOV RCX, R14                # gcd_128:439                        MOV `ab_delta_1, `ab_threshold_1
cel_Xx_2193: SUB R15, R8                 # gcd_128:440                        SUB `ab_delta_0, `new_ab_0_0
cel_Xx_2194: SBB RCX, R9                 # gcd_128:441                        SBB `ab_delta_1, `new_ab_0_1
cel_Xx_2195: JNC _cel_label_34           # gcd_128:442                        JNC _cel_label_34
cel_Xx_2196: MOV [RSP+-0x3a8], RBX       # gcd_128:445                        MOV `spill_u_0, `new_u_0
cel_Xx_2197: MOV [RSP+-0x3a0], RBP       # gcd_128:446                        MOV `spill_u_1, `new_u_1
cel_Xx_2198: MOV [RSP+-0x398], RSI       # gcd_128:449                        MOV `spill_v_0, `new_v_0
cel_Xx_2199: MOV [RSP+-0x390], RDI       # gcd_128:450                        MOV `spill_v_1, `new_v_1
cel_Xx_2200: MOV [RSP+-0x388], R12       # gcd_128:453                        MOV `spill_parity, `new_parity
cel_Xx_2201: MOV R15, [RSP+-0x348]       # gcd_128:459                        MOV `ab_delta_0, `spill_iter
cel_Xx_2202: DEC R15                     # gcd_128:460                        DEC `ab_delta_0
cel_Xx_2203: MOV [RSP+-0x348], R15       # gcd_128:461                        MOV `spill_iter, `ab_delta_0
cel_Xx_2204: JZ _cel_label_35            # gcd_128:462                        JZ _cel_label_35
cel_Xx_2205: _cel_label_32:              # gcd_128:465                        _cel_label_32:
cel_Xx_2206: XOR RCX, RCX                # gcd_128:492                        XOR `tmp_3, `tmp_3
cel_Xx_2207: MOV RAX, R10                # gcd_128:495                        MOV `tmp_0, `ab_1_0
cel_Xx_2208: MOV RDX, R11                # gcd_128:496                        MOV `tmp_1, `ab_1_1
cel_Xx_2209: SUB RAX, R13                # gcd_128:497                        SUB `tmp_0, `ab_threshold_0
cel_Xx_2210: SBB RDX, R14                # gcd_128:498                        SBB `tmp_1, `ab_threshold_1
cel_Xx_2211: JC _cel_label_34            # gcd_128:501                        JC _cel_label_34
cel_Xx_2212: MOV R15, RAX                # gcd_128:504                        MOV `tmp_2, `tmp_0
cel_Xx_2213: OR R15, RDX                 # gcd_128:505                        OR `tmp_2, `tmp_1
cel_Xx_2214: JZ _cel_label_34            # gcd_128:506                        JZ _cel_label_34
cel_Xx_2215: MOV RAX, R9                 # gcd_128:511                        MOV `tmp_0, `ab_0_1
cel_Xx_2216: MOV RDX, 64                 # gcd_128:512                        MOV `tmp_1, 64
cel_Xx_2217: CMP R9, 0                   # gcd_128:513                        CMP `ab_0_1, 0
cel_Xx_2218: CMOVEQ RAX, R8              # gcd_128:525                        CMOVEQ `tmp_0, `ab_0_0
cel_Xx_2219: CMOVEQ RDX, RCX             # gcd_128:526                        CMOVEQ `tmp_1, `tmp_3
cel_Xx_2220: BSR RAX, RAX                # gcd_128:530                        BSR `tmp_0, `tmp_0
cel_Xx_2221: ADD RDX, RAX                # gcd_128:533                        ADD `tmp_1, `tmp_0
cel_Xx_2222: INC RDX                     # gcd_128:534                        INC `tmp_1
cel_Xx_2223: XOR RAX, RAX                # gcd_128:545                        XOR `tmp_0, `tmp_0
cel_Xx_2224: MOV R15, [RSP+-0x380]       # gcd_128:546                        MOV `tmp_2, `spill_is_lehmer
cel_Xx_2225: CMP R15, 0                  # gcd_128:547                        CMP `tmp_2, 0
cel_Xx_2226: MOV RCX, 96                 # gcd_128:548                        MOV `tmp_3, 96
cel_Xx_2227: CMOVNE RAX, RCX             # gcd_128:549                        CMOVNE `tmp_0, `tmp_3
cel_Xx_2228: XOR RCX, RCX                # gcd_128:550                        XOR `tmp_3, `tmp_3
cel_Xx_2229: CMP RDX, RAX                # gcd_128:553                        CMP `tmp_1, `tmp_0
cel_Xx_2230: CMOVB RDX, RAX              # gcd_128:554                        CMOVB `tmp_1, `tmp_0
cel_Xx_2231: SUB RDX, 0x32               # gcd_128:562                        SUB `tmp_1, 0x32
cel_Xx_2232: CMOVB RDX, RCX              # gcd_128:566                        CMOVB `tmp_1, `tmp_3
cel_Xx_2233: OR R15, RDX                 # gcd_128:569                        OR `tmp_2, `tmp_1
cel_Xx_2234: MOV RCX, OFFSET FLAT:_cel_label_26 # gcd_128:575                        MOV `tmp_3, OFFSET FLAT:_cel_label_26
cel_Xx_2235: MOV RAX, OFFSET FLAT:_cel_label_27 # gcd_128:576                        MOV `tmp_0, OFFSET FLAT:_cel_label_27
cel_Xx_2236: CMOVZ RAX, RCX              # gcd_128:587                        CMOVZ `tmp_0, `tmp_3
cel_Xx_2237: MOVAPD XMM3, [RAX]          # gcd_128:588                        MOVAPD `vector_is_lehmer, [`tmp_0]
cel_Xx_2238: MOV RCX, RDX                # shift_right:23                     MOV RCX, `amount
cel_Xx_2239: MOV RBP, R10                # shift_right:24                     MOV `res, `v_0
cel_Xx_2240: SHRD RBP, R11, CL           # shift_right:25                     SHRD `res, `v_1, CL
cel_Xx_2241: XOR R15, R15                # shift_right:28                     XOR `res_2, `res_2
cel_Xx_2242: SUB RCX, 64                 # shift_right:31                     SUB RCX, 64
cel_Xx_2243: CMOVAE RBP, R15             # shift_right:35                     CMOVAE `res, `res_2
cel_Xx_2244: CMOVAE R15, R11             # shift_right:36                     CMOVAE `res_2, `v_1
cel_Xx_2245: SHR R15, CL                 # shift_right:39                     SHR `res_2, CL
cel_Xx_2246: OR RBP, R15                 # shift_right:42                     OR `res, `res_2
cel_Xx_2247: CVTSI2SD XMM0, RBP          # gcd_128:604                        CVTSI2SD `vector_ab, `new_u_1
cel_Xx_2248: SHUFPD XMM0, XMM0, 0        # gcd_128:609                        SHUFPD `vector_ab, `vector_ab, 0
cel_Xx_2249: MOV RCX, RDX                # shift_right:23                     MOV RCX, `amount
cel_Xx_2250: MOV RBX, R8                 # shift_right:24                     MOV `res, `v_0
cel_Xx_2251: SHRD RBX, R9, CL            # shift_right:25                     SHRD `res, `v_1, CL
cel_Xx_2252: XOR R15, R15                # shift_right:28                     XOR `res_2, `res_2
cel_Xx_2253: SUB RCX, 64                 # shift_right:31                     SUB RCX, 64
cel_Xx_2254: CMOVAE RBX, R15             # shift_right:35                     CMOVAE `res, `res_2
cel_Xx_2255: CMOVAE R15, R9              # shift_right:36                     CMOVAE `res_2, `v_1
cel_Xx_2256: SHR R15, CL                 # shift_right:39                     SHR `res_2, CL
cel_Xx_2257: OR RBX, R15                 # shift_right:42                     OR `res, `res_2
cel_Xx_2258: CVTSI2SD XMM0, RBX          # gcd_128:616                        CVTSI2SD `vector_ab, `new_u_0
cel_Xx_2259: MOV RCX, RDX                # shift_right:23                     MOV RCX, `amount
cel_Xx_2260: MOV RSI, R13                # shift_right:24                     MOV `res, `v_0
cel_Xx_2261: SHRD RSI, R14, CL           # shift_right:25                     SHRD `res, `v_1, CL
cel_Xx_2262: XOR R15, R15                # shift_right:28                     XOR `res_2, `res_2
cel_Xx_2263: SUB RCX, 64                 # shift_right:31                     SUB RCX, 64
cel_Xx_2264: CMOVAE RSI, R15             # shift_right:35                     CMOVAE `res, `res_2
cel_Xx_2265: CMOVAE R15, R14             # shift_right:36                     CMOVAE `res_2, `v_1
cel_Xx_2266: SHR R15, CL                 # shift_right:39                     SHR `res_2, CL
cel_Xx_2267: OR RSI, R15                 # shift_right:42                     OR `res, `res_2
cel_Xx_2268: CVTSI2SD XMM4, RSI          # gcd_128:625                        CVTSI2SD `vector_ab_threshold, `new_v_0
cel_Xx_2269: SHUFPD XMM4, XMM4, 0        # gcd_128:626                        SHUFPD `vector_ab_threshold, `vector_ab_threshold, 0
cel_Xx_2270: JMP _cel_label_33           # gcd_128:630                        JMP _cel_label_33
cel_Xx_2271: _cel_label_34:              # gcd_128:635                        _cel_label_34:
cel_Xx_2272: MOV R15, [RSP+-0x348]       # gcd_128:643                        MOV `tmp, `spill_iter
cel_Xx_2273: CMP R15, 0x3                # gcd_128:644                        CMP `tmp, 0x3
cel_Xx_2274: JE cel_label_error_1        # gcd_128:645                        JE cel_label_error_1
cel_Xx_2275: JMP _cel_label_35           # gcd_128:647                        JMP _cel_label_35
cel_Xx_2276: _cel_label_36:              # gcd_128:652                        _cel_label_36:
cel_Xx_2277: MOV R8, [RSP+-0x378]        # gcd_128:654                        MOV `new_ab_0_0, `spill_ab_start_0_0
cel_Xx_2278: MOV R9, [RSP+-0x370]        # gcd_128:655                        MOV `new_ab_0_1, `spill_ab_start_0_1
cel_Xx_2279: MOV R10, [RSP+-0x368]       # gcd_128:656                        MOV `new_ab_1_0, `spill_ab_start_1_0
cel_Xx_2280: MOV R11, [RSP+-0x360]       # gcd_128:657                        MOV `new_ab_1_1, `spill_ab_start_1_1
cel_Xx_2281: MOV R13, [RSP+-0x358]       # gcd_128:658                        MOV `ab_threshold_0, `spill_ab_threshold_0
cel_Xx_2282: MOV R14, [RSP+-0x350]       # gcd_128:659                        MOV `ab_threshold_1, `spill_ab_threshold_1
cel_Xx_2283: JMP _cel_label_32           # gcd_128:661                        JMP _cel_label_32
cel_Xx_2284: _cel_label_35:              # gcd_128:666                        _cel_label_35:
cel_Xx_2285: .text 1                     # gcd_unsigned:448                   .text 1
cel_Xx_2286: .balign 8                   # gcd_unsigned:450                   .balign 8
cel_Xx_2287: _cel_label_42:              # gcd_unsigned:451                   _cel_label_42:
cel_Xx_2288: .quad cel_multiply_uv_size_4 # gcd_unsigned:479                   .quad cel_multiply_uv_size_4
cel_Xx_2289: .quad cel_multiply_uv_size_4 # gcd_unsigned:479                   .quad cel_multiply_uv_size_4
cel_Xx_2290: .quad cel_multiply_uv_size_4 # gcd_unsigned:479                   .quad cel_multiply_uv_size_4
cel_Xx_2291: .quad cel_multiply_uv_size_4 # gcd_unsigned:479                   .quad cel_multiply_uv_size_4
cel_Xx_2292: .quad cel_multiply_uv_size_8 # gcd_unsigned:479                   .quad cel_multiply_uv_size_8
cel_Xx_2293: .quad cel_multiply_uv_size_8 # gcd_unsigned:479                   .quad cel_multiply_uv_size_8
cel_Xx_2294: .quad cel_multiply_uv_size_8 # gcd_unsigned:479                   .quad cel_multiply_uv_size_8
cel_Xx_2295: .quad cel_multiply_uv_size_8 # gcd_unsigned:479                   .quad cel_multiply_uv_size_8
cel_Xx_2296: .quad cel_multiply_uv_size_12 # gcd_unsigned:479                   .quad cel_multiply_uv_size_12
cel_Xx_2297: .quad cel_multiply_uv_size_12 # gcd_unsigned:479                   .quad cel_multiply_uv_size_12
cel_Xx_2298: .quad cel_multiply_uv_size_12 # gcd_unsigned:479                   .quad cel_multiply_uv_size_12
cel_Xx_2299: .quad cel_multiply_uv_size_12 # gcd_unsigned:479                   .quad cel_multiply_uv_size_12
cel_Xx_2300: .quad cel_multiply_uv_size_16 # gcd_unsigned:479                   .quad cel_multiply_uv_size_16
cel_Xx_2301: .quad cel_multiply_uv_size_16 # gcd_unsigned:479                   .quad cel_multiply_uv_size_16
cel_Xx_2302: .quad cel_multiply_uv_size_16 # gcd_unsigned:479                   .quad cel_multiply_uv_size_16
cel_Xx_2303: .quad cel_multiply_uv_size_16 # gcd_unsigned:479                   .quad cel_multiply_uv_size_16
cel_Xx_2304: .quad cel_multiply_uv_size_20 # gcd_unsigned:479                   .quad cel_multiply_uv_size_20
cel_Xx_2305: .quad cel_multiply_uv_size_20 # gcd_unsigned:479                   .quad cel_multiply_uv_size_20
cel_Xx_2306: .quad cel_multiply_uv_size_20 # gcd_unsigned:479                   .quad cel_multiply_uv_size_20
cel_Xx_2307: .quad cel_multiply_uv_size_20 # gcd_unsigned:479                   .quad cel_multiply_uv_size_20
cel_Xx_2308: .text                       # gcd_unsigned:481                   .text
cel_Xx_2309: MOV RBX, [RSP+-0x3b0]       # gcd_unsigned:483                   MOV `tmp, `spill_a_end_index
cel_Xx_2310: JMP QWORD PTR [_cel_label_42+RBX*8] # gcd_unsigned:484                   JMP QWORD PTR [_cel_label_42+`tmp*8]
cel_Xx_2311: cel_multiply_uv_size_4:     # gcd_unsigned:491                   cel_multiply_uv_size_4:
cel_Xx_2312: MOV RDI, [RSP+-0x388]       # gcd_unsigned:533                   MOV `tmp, `spill_parity
cel_Xx_2313: CMP RDI, 0                  # gcd_unsigned:534                   CMP `tmp, 0
cel_Xx_2314: MOV RBX, [RSP+-0x3a8]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_0
cel_Xx_2315: MOV RBP, [RSP+-0x398]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_0
cel_Xx_2316: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_2317: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_2318: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_2319: MOV [RSP+-0x348], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_0, `addr_a
cel_Xx_2320: MOV [RSP+-0x338], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_0, `addr_b
cel_Xx_2321: MOV RBX, [RSP+-0x3a0]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_1
cel_Xx_2322: MOV RBP, [RSP+-0x390]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_1
cel_Xx_2323: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_2324: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_2325: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_2326: MOV [RSP+-0x340], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_1, `addr_a
cel_Xx_2327: MOV [RSP+-0x330], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_1, `addr_b
cel_Xx_2328: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:549                   MOV `addr_new, `spill_iter
cel_Xx_2329: TEST RSI, 1                 # gcd_unsigned:550                   TEST `addr_new, 1
cel_Xx_2330: MOV RBX, [RSP+-0x3f8]       # gcd_unsigned:553                   MOV `addr_a, `spill_a_addr_base
cel_Xx_2331: CMOVNZ RBX, [RSP+-0x3e8]    # gcd_unsigned:554                   CMOVNZ `addr_a, `spill_a_2_addr_base
cel_Xx_2332: MOV RBP, [RSP+-0x3f0]       # gcd_unsigned:557                   MOV `addr_b, `spill_b_addr_base
cel_Xx_2333: CMOVNZ RBP, [RSP+-0x3e0]    # gcd_unsigned:558                   CMOVNZ `addr_b, `spill_b_2_addr_base
cel_Xx_2334: CMP RDI, 0                  # gcd_unsigned:561                   CMP `tmp, 0
cel_Xx_2335: MOV RSI, RBX                # gcd_unsigned:562                   MOV `addr_new, `addr_a
cel_Xx_2336: CMOVNE RBX, RBP             # gcd_unsigned:563                   CMOVNE `addr_a, `addr_b
cel_Xx_2337: CMOVNE RBP, RSI             # gcd_unsigned:564                   CMOVNE `addr_b, `addr_new
cel_Xx_2338: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:569                   MOV `addr_new, `spill_iter
cel_Xx_2339: TEST RSI, 1                 # gcd_unsigned:570                   TEST `addr_new, 1
cel_Xx_2340: MOV RSI, [RSP+-0x3e0]       # gcd_unsigned:571                   MOV `addr_new, `spill_b_2_addr_base
cel_Xx_2341: CMOVNZ RSI, [RSP+-0x3f0]    # gcd_unsigned:572                   CMOVNZ `addr_new, `spill_b_addr_base
cel_Xx_2342: MOV [RSP+-0x328], RSI       # gcd_unsigned:573                   MOV `spill_addr_b_new, `addr_new
cel_Xx_2343: MOV RSI, [RSP+-0x3e8]       # gcd_unsigned:576                   MOV `addr_new, `spill_a_2_addr_base
cel_Xx_2344: CMOVNZ RSI, [RSP+-0x3f8]    # gcd_unsigned:577                   CMOVNZ `addr_new, `spill_a_addr_base
cel_Xx_2345: MOV RDI, [RSP+-0x338]       # gcd_unsigned:606                   MOV `tmp, `spill_mod_v_0
cel_Xx_2346: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2347: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_2348: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2349: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2350: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2351: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_2352: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2353: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2354: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2355: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_2356: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2357: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2358: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2359: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_2360: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_2361: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2362: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2363: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2364: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2365: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2366: MOV [RSP+-0x320], R11       # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
cel_Xx_2367: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2368: MOV [RSP+-0x318], R12       # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
cel_Xx_2369: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2370: MOV [RSP+-0x310], R13       # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
cel_Xx_2371: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2372: MOV [RSP+-0x308], RAX       # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
cel_Xx_2373: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2374: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_2375: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2376: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2377: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2378: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_2379: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2380: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2381: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2382: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_2383: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2384: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2385: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2386: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_2387: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2388: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2389: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2390: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2391: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2392: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2393: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2394: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2395: MOV [RSP+-0x300], R11       # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
cel_Xx_2396: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2397: MOV [RSP+-0x2f8], R12       # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
cel_Xx_2398: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2399: MOV [RSP+-0x2f0], R13       # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
cel_Xx_2400: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2401: MOV [RSP+-0x2e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
cel_Xx_2402: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2403: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_2404: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2405: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2406: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2407: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_2408: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2409: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2410: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2411: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_2412: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2413: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2414: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2415: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_2416: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2417: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2418: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2419: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2420: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2421: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2422: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2423: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2424: MOV [RSP+-0x2e0], R11       # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
cel_Xx_2425: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2426: MOV [RSP+-0x2d8], R12       # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
cel_Xx_2427: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2428: MOV [RSP+-0x2d0], R13       # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
cel_Xx_2429: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2430: MOV [RSP+-0x2c8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
cel_Xx_2431: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2432: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_2433: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2434: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2435: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2436: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_2437: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2438: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2439: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2440: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_2441: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2442: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2443: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2444: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_2445: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2446: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2447: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2448: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2449: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2450: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2451: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2452: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2453: MOV [RSP+-0x2c0], R11       # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
cel_Xx_2454: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2455: MOV [RSP+-0x2b8], R12       # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
cel_Xx_2456: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2457: MOV [RSP+-0x2b0], R13       # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
cel_Xx_2458: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2459: MOV [RSP+-0x2a8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
cel_Xx_2460: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2461: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_2462: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2463: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2464: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2465: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_2466: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2467: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2468: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2469: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_2470: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2471: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2472: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2473: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_2474: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2475: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2476: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2477: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2478: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2479: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2480: MOV [RSP+-0x2a0], R11       # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
cel_Xx_2481: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2482: MOV [RSP+-0x298], R12       # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
cel_Xx_2483: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2484: MOV [RSP+-0x290], R13       # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
cel_Xx_2485: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2486: MOV [RSP+-0x288], RAX       # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
cel_Xx_2487: MOV RDI, [RSP+-0x340]       # gcd_unsigned:610                   MOV `tmp, `spill_mod_u_1
cel_Xx_2488: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2489: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_2490: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2491: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2492: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2493: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_2494: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2495: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2496: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2497: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_2498: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2499: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2500: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2501: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_2502: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_2503: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2504: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2505: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2506: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2507: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2508: MOV [RSP+-0x280], R11       # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
cel_Xx_2509: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2510: MOV [RSP+-0x278], R12       # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
cel_Xx_2511: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2512: MOV [RSP+-0x270], R13       # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
cel_Xx_2513: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2514: MOV [RSP+-0x268], RAX       # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
cel_Xx_2515: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2516: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_2517: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2518: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2519: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2520: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_2521: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2522: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2523: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2524: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_2525: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2526: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2527: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2528: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_2529: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2530: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2531: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2532: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2533: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2534: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2535: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2536: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2537: MOV [RSP+-0x260], R11       # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
cel_Xx_2538: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2539: MOV [RSP+-0x258], R12       # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
cel_Xx_2540: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2541: MOV [RSP+-0x250], R13       # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
cel_Xx_2542: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2543: MOV [RSP+-0x248], RAX       # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
cel_Xx_2544: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2545: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_2546: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2547: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2548: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2549: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_2550: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2551: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2552: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2553: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_2554: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2555: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2556: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2557: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_2558: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2559: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2560: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2561: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2562: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2563: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2564: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2565: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2566: MOV [RSP+-0x240], R11       # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
cel_Xx_2567: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2568: MOV [RSP+-0x238], R12       # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
cel_Xx_2569: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2570: MOV [RSP+-0x230], R13       # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
cel_Xx_2571: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2572: MOV [RSP+-0x228], RAX       # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
cel_Xx_2573: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2574: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_2575: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2576: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2577: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2578: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_2579: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2580: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2581: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2582: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_2583: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2584: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2585: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2586: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_2587: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2588: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2589: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2590: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2591: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2592: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2593: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2594: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2595: MOV [RSP+-0x220], R11       # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
cel_Xx_2596: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2597: MOV [RSP+-0x218], R12       # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
cel_Xx_2598: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2599: MOV [RSP+-0x210], R13       # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
cel_Xx_2600: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2601: MOV [RSP+-0x208], RAX       # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
cel_Xx_2602: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2603: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_2604: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2605: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2606: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2607: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_2608: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2609: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2610: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2611: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_2612: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2613: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2614: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2615: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_2616: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2617: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2618: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2619: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2620: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2621: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2622: MOV [RSP+-0x200], R11       # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
cel_Xx_2623: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2624: MOV [RSP+-0x1f8], R12       # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
cel_Xx_2625: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2626: MOV [RSP+-0x1f0], R13       # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
cel_Xx_2627: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2628: MOV [RSP+-0x1e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
cel_Xx_2629: MOV RDI, [RSP+-0x348]       # gcd_unsigned:614                   MOV `tmp, `spill_mod_u_0
cel_Xx_2630: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2631: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_2632: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2633: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2634: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2635: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_2636: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2637: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2638: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2639: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_2640: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2641: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2642: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2643: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_2644: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_2645: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2646: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2647: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2648: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2649: STC                         # mul_add_slow:243                   STC
cel_Xx_2650: ADC R11, [RSP+-0x320]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
cel_Xx_2651: ADC R12, [RSP+-0x318]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
cel_Xx_2652: ADC R13, [RSP+-0x310]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
cel_Xx_2653: ADC RAX, [RSP+-0x308]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
cel_Xx_2654: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2655: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_2656: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_2657: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_2658: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_2659: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2660: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_2661: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2662: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2663: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2664: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_2665: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2666: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2667: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2668: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_2669: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2670: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2671: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2672: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_2673: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2674: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2675: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2676: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2677: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2678: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2679: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2680: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2681: ADC R11, [RSP+-0x300]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
cel_Xx_2682: ADC R12, [RSP+-0x2f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
cel_Xx_2683: ADC R13, [RSP+-0x2f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
cel_Xx_2684: ADC RAX, [RSP+-0x2e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
cel_Xx_2685: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2686: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_2687: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_2688: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_2689: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_2690: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2691: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_2692: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2693: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2694: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2695: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_2696: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2697: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2698: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2699: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_2700: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2701: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2702: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2703: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_2704: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2705: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2706: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2707: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2708: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2709: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2710: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2711: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2712: ADC R11, [RSP+-0x2e0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
cel_Xx_2713: ADC R12, [RSP+-0x2d8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
cel_Xx_2714: ADC R13, [RSP+-0x2d0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
cel_Xx_2715: ADC RAX, [RSP+-0x2c8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
cel_Xx_2716: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2717: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_2718: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_2719: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_2720: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_2721: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2722: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_2723: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2724: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2725: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2726: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_2727: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2728: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2729: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2730: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_2731: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2732: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2733: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2734: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_2735: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2736: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2737: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2738: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2739: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2740: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2741: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2742: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2743: ADC R11, [RSP+-0x2c0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
cel_Xx_2744: ADC R12, [RSP+-0x2b8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
cel_Xx_2745: ADC R13, [RSP+-0x2b0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
cel_Xx_2746: ADC RAX, [RSP+-0x2a8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
cel_Xx_2747: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2748: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_2749: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_2750: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_2751: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_2752: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2753: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_2754: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2755: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2756: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2757: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_2758: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2759: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2760: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2761: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_2762: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2763: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2764: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2765: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_2766: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2767: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2768: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2769: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2770: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2771: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2772: ADC R11, [RSP+-0x2a0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
cel_Xx_2773: ADC R12, [RSP+-0x298]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
cel_Xx_2774: ADC R13, [RSP+-0x290]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
cel_Xx_2775: ADC RAX, [RSP+-0x288]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
cel_Xx_2776: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_2777: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_2778: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_2779: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_2780: MOV RSI, [RSP+-0x328]       # gcd_unsigned:618                   MOV `addr_new, `spill_addr_b_new
cel_Xx_2781: MOV RDI, [RSP+-0x330]       # gcd_unsigned:619                   MOV `tmp, `spill_mod_v_1
cel_Xx_2782: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2783: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_2784: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2785: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2786: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2787: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_2788: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2789: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2790: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2791: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_2792: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2793: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2794: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2795: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_2796: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_2797: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2798: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2799: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2800: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2801: STC                         # mul_add_slow:243                   STC
cel_Xx_2802: ADC R11, [RSP+-0x280]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
cel_Xx_2803: ADC R12, [RSP+-0x278]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
cel_Xx_2804: ADC R13, [RSP+-0x270]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
cel_Xx_2805: ADC RAX, [RSP+-0x268]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
cel_Xx_2806: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2807: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_2808: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_2809: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_2810: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_2811: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2812: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_2813: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2814: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2815: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2816: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_2817: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2818: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2819: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2820: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_2821: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2822: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2823: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2824: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_2825: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2826: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2827: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2828: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2829: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2830: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2831: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2832: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2833: ADC R11, [RSP+-0x260]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
cel_Xx_2834: ADC R12, [RSP+-0x258]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
cel_Xx_2835: ADC R13, [RSP+-0x250]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
cel_Xx_2836: ADC RAX, [RSP+-0x248]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
cel_Xx_2837: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2838: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_2839: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_2840: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_2841: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_2842: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2843: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_2844: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2845: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2846: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2847: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_2848: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2849: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2850: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2851: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_2852: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2853: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2854: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2855: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_2856: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2857: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2858: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2859: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2860: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2861: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2862: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2863: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2864: ADC R11, [RSP+-0x240]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
cel_Xx_2865: ADC R12, [RSP+-0x238]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
cel_Xx_2866: ADC R13, [RSP+-0x230]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
cel_Xx_2867: ADC RAX, [RSP+-0x228]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
cel_Xx_2868: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2869: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_2870: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_2871: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_2872: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_2873: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2874: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_2875: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2876: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2877: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2878: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_2879: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2880: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2881: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2882: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_2883: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2884: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2885: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2886: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_2887: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2888: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2889: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2890: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2891: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2892: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2893: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2894: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2895: ADC R11, [RSP+-0x220]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
cel_Xx_2896: ADC R12, [RSP+-0x218]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
cel_Xx_2897: ADC R13, [RSP+-0x210]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
cel_Xx_2898: ADC RAX, [RSP+-0x208]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
cel_Xx_2899: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_2900: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_2901: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_2902: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_2903: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_2904: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2905: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_2906: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2907: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2908: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2909: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_2910: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2911: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2912: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2913: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_2914: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2915: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2916: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2917: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_2918: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_2919: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_2920: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_2921: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2922: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2923: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_2924: ADC R11, [RSP+-0x200]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
cel_Xx_2925: ADC R12, [RSP+-0x1f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
cel_Xx_2926: ADC R13, [RSP+-0x1f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
cel_Xx_2927: ADC RAX, [RSP+-0x1e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
cel_Xx_2928: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_2929: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_2930: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_2931: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_2932: JMP _cel_label_41           # gcd_unsigned:622                   JMP _cel_label_41
cel_Xx_2933: cel_multiply_uv_size_8:     # gcd_unsigned:491                   cel_multiply_uv_size_8:
cel_Xx_2934: MOV RDI, [RSP+-0x388]       # gcd_unsigned:533                   MOV `tmp, `spill_parity
cel_Xx_2935: CMP RDI, 0                  # gcd_unsigned:534                   CMP `tmp, 0
cel_Xx_2936: MOV RBX, [RSP+-0x3a8]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_0
cel_Xx_2937: MOV RBP, [RSP+-0x398]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_0
cel_Xx_2938: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_2939: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_2940: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_2941: MOV [RSP+-0x348], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_0, `addr_a
cel_Xx_2942: MOV [RSP+-0x338], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_0, `addr_b
cel_Xx_2943: MOV RBX, [RSP+-0x3a0]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_1
cel_Xx_2944: MOV RBP, [RSP+-0x390]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_1
cel_Xx_2945: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_2946: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_2947: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_2948: MOV [RSP+-0x340], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_1, `addr_a
cel_Xx_2949: MOV [RSP+-0x330], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_1, `addr_b
cel_Xx_2950: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:549                   MOV `addr_new, `spill_iter
cel_Xx_2951: TEST RSI, 1                 # gcd_unsigned:550                   TEST `addr_new, 1
cel_Xx_2952: MOV RBX, [RSP+-0x3f8]       # gcd_unsigned:553                   MOV `addr_a, `spill_a_addr_base
cel_Xx_2953: CMOVNZ RBX, [RSP+-0x3e8]    # gcd_unsigned:554                   CMOVNZ `addr_a, `spill_a_2_addr_base
cel_Xx_2954: MOV RBP, [RSP+-0x3f0]       # gcd_unsigned:557                   MOV `addr_b, `spill_b_addr_base
cel_Xx_2955: CMOVNZ RBP, [RSP+-0x3e0]    # gcd_unsigned:558                   CMOVNZ `addr_b, `spill_b_2_addr_base
cel_Xx_2956: CMP RDI, 0                  # gcd_unsigned:561                   CMP `tmp, 0
cel_Xx_2957: MOV RSI, RBX                # gcd_unsigned:562                   MOV `addr_new, `addr_a
cel_Xx_2958: CMOVNE RBX, RBP             # gcd_unsigned:563                   CMOVNE `addr_a, `addr_b
cel_Xx_2959: CMOVNE RBP, RSI             # gcd_unsigned:564                   CMOVNE `addr_b, `addr_new
cel_Xx_2960: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:569                   MOV `addr_new, `spill_iter
cel_Xx_2961: TEST RSI, 1                 # gcd_unsigned:570                   TEST `addr_new, 1
cel_Xx_2962: MOV RSI, [RSP+-0x3e0]       # gcd_unsigned:571                   MOV `addr_new, `spill_b_2_addr_base
cel_Xx_2963: CMOVNZ RSI, [RSP+-0x3f0]    # gcd_unsigned:572                   CMOVNZ `addr_new, `spill_b_addr_base
cel_Xx_2964: MOV [RSP+-0x328], RSI       # gcd_unsigned:573                   MOV `spill_addr_b_new, `addr_new
cel_Xx_2965: MOV RSI, [RSP+-0x3e8]       # gcd_unsigned:576                   MOV `addr_new, `spill_a_2_addr_base
cel_Xx_2966: CMOVNZ RSI, [RSP+-0x3f8]    # gcd_unsigned:577                   CMOVNZ `addr_new, `spill_a_addr_base
cel_Xx_2967: MOV RDI, [RSP+-0x338]       # gcd_unsigned:606                   MOV `tmp, `spill_mod_v_0
cel_Xx_2968: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2969: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_2970: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2971: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2972: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2973: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_2974: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_2975: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_2976: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2977: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_2978: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_2979: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_2980: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2981: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_2982: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_2983: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_2984: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_2985: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_2986: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_2987: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_2988: MOV [RSP+-0x320], R11       # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
cel_Xx_2989: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_2990: MOV [RSP+-0x318], R12       # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
cel_Xx_2991: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_2992: MOV [RSP+-0x310], R13       # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
cel_Xx_2993: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_2994: MOV [RSP+-0x308], RAX       # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
cel_Xx_2995: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_2996: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_2997: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_2998: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_2999: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3000: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_3001: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3002: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3003: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3004: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_3005: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3006: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3007: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3008: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_3009: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3010: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3011: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3012: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3013: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3014: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3015: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3016: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3017: MOV [RSP+-0x300], R11       # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
cel_Xx_3018: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3019: MOV [RSP+-0x2f8], R12       # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
cel_Xx_3020: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3021: MOV [RSP+-0x2f0], R13       # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
cel_Xx_3022: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3023: MOV [RSP+-0x2e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
cel_Xx_3024: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3025: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_3026: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3027: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3028: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3029: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_3030: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3031: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3032: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3033: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_3034: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3035: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3036: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3037: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_3038: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3039: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3040: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3041: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3042: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3043: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3044: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3045: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3046: MOV [RSP+-0x2e0], R11       # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
cel_Xx_3047: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3048: MOV [RSP+-0x2d8], R12       # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
cel_Xx_3049: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3050: MOV [RSP+-0x2d0], R13       # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
cel_Xx_3051: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3052: MOV [RSP+-0x2c8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
cel_Xx_3053: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3054: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_3055: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3056: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3057: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3058: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_3059: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3060: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3061: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3062: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_3063: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3064: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3065: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3066: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_3067: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3068: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3069: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3070: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3071: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3072: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3073: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3074: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3075: MOV [RSP+-0x2c0], R11       # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
cel_Xx_3076: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3077: MOV [RSP+-0x2b8], R12       # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
cel_Xx_3078: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3079: MOV [RSP+-0x2b0], R13       # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
cel_Xx_3080: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3081: MOV [RSP+-0x2a8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
cel_Xx_3082: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3083: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_3084: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3085: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3086: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3087: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_3088: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3089: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3090: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3091: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_3092: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3093: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3094: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3095: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_3096: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3097: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3098: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3099: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3100: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3101: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3102: MOV [RSP+-0x2a0], R11       # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
cel_Xx_3103: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3104: MOV [RSP+-0x298], R12       # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
cel_Xx_3105: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3106: MOV [RSP+-0x290], R13       # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
cel_Xx_3107: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3108: MOV [RSP+-0x288], RAX       # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
cel_Xx_3109: MOV RDI, [RSP+-0x340]       # gcd_unsigned:610                   MOV `tmp, `spill_mod_u_1
cel_Xx_3110: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3111: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_3112: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3113: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3114: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3115: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_3116: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3117: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3118: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3119: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_3120: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3121: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3122: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3123: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_3124: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_3125: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3126: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3127: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3128: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3129: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3130: MOV [RSP+-0x280], R11       # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
cel_Xx_3131: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3132: MOV [RSP+-0x278], R12       # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
cel_Xx_3133: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3134: MOV [RSP+-0x270], R13       # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
cel_Xx_3135: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3136: MOV [RSP+-0x268], RAX       # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
cel_Xx_3137: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3138: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_3139: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3140: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3141: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3142: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_3143: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3144: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3145: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3146: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_3147: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3148: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3149: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3150: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_3151: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3152: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3153: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3154: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3155: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3156: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3157: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3158: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3159: MOV [RSP+-0x260], R11       # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
cel_Xx_3160: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3161: MOV [RSP+-0x258], R12       # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
cel_Xx_3162: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3163: MOV [RSP+-0x250], R13       # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
cel_Xx_3164: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3165: MOV [RSP+-0x248], RAX       # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
cel_Xx_3166: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3167: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_3168: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3169: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3170: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3171: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_3172: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3173: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3174: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3175: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_3176: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3177: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3178: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3179: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_3180: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3181: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3182: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3183: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3184: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3185: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3186: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3187: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3188: MOV [RSP+-0x240], R11       # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
cel_Xx_3189: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3190: MOV [RSP+-0x238], R12       # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
cel_Xx_3191: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3192: MOV [RSP+-0x230], R13       # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
cel_Xx_3193: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3194: MOV [RSP+-0x228], RAX       # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
cel_Xx_3195: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3196: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_3197: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3198: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3199: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3200: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_3201: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3202: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3203: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3204: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_3205: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3206: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3207: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3208: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_3209: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3210: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3211: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3212: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3213: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3214: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3215: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3216: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3217: MOV [RSP+-0x220], R11       # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
cel_Xx_3218: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3219: MOV [RSP+-0x218], R12       # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
cel_Xx_3220: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3221: MOV [RSP+-0x210], R13       # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
cel_Xx_3222: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3223: MOV [RSP+-0x208], RAX       # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
cel_Xx_3224: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3225: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_3226: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3227: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3228: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3229: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_3230: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3231: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3232: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3233: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_3234: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3235: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3236: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3237: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_3238: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3239: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3240: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3241: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3242: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3243: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3244: MOV [RSP+-0x200], R11       # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
cel_Xx_3245: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3246: MOV [RSP+-0x1f8], R12       # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
cel_Xx_3247: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3248: MOV [RSP+-0x1f0], R13       # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
cel_Xx_3249: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3250: MOV [RSP+-0x1e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
cel_Xx_3251: MOV RDI, [RSP+-0x348]       # gcd_unsigned:614                   MOV `tmp, `spill_mod_u_0
cel_Xx_3252: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3253: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_3254: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3255: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3256: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3257: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_3258: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3259: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3260: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3261: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_3262: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3263: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3264: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3265: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_3266: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_3267: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3268: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3269: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3270: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3271: STC                         # mul_add_slow:243                   STC
cel_Xx_3272: ADC R11, [RSP+-0x320]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
cel_Xx_3273: ADC R12, [RSP+-0x318]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
cel_Xx_3274: ADC R13, [RSP+-0x310]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
cel_Xx_3275: ADC RAX, [RSP+-0x308]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
cel_Xx_3276: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3277: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_3278: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_3279: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_3280: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_3281: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3282: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_3283: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3284: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3285: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3286: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_3287: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3288: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3289: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3290: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_3291: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3292: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3293: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3294: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_3295: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3296: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3297: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3298: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3299: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3300: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3301: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3302: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3303: ADC R11, [RSP+-0x300]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
cel_Xx_3304: ADC R12, [RSP+-0x2f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
cel_Xx_3305: ADC R13, [RSP+-0x2f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
cel_Xx_3306: ADC RAX, [RSP+-0x2e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
cel_Xx_3307: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3308: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_3309: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_3310: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_3311: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_3312: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3313: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_3314: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3315: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3316: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3317: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_3318: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3319: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3320: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3321: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_3322: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3323: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3324: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3325: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_3326: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3327: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3328: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3329: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3330: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3331: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3332: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3333: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3334: ADC R11, [RSP+-0x2e0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
cel_Xx_3335: ADC R12, [RSP+-0x2d8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
cel_Xx_3336: ADC R13, [RSP+-0x2d0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
cel_Xx_3337: ADC RAX, [RSP+-0x2c8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
cel_Xx_3338: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3339: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_3340: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_3341: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_3342: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_3343: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3344: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_3345: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3346: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3347: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3348: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_3349: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3350: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3351: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3352: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_3353: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3354: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3355: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3356: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_3357: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3358: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3359: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3360: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3361: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3362: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3363: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3364: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3365: ADC R11, [RSP+-0x2c0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
cel_Xx_3366: ADC R12, [RSP+-0x2b8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
cel_Xx_3367: ADC R13, [RSP+-0x2b0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
cel_Xx_3368: ADC RAX, [RSP+-0x2a8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
cel_Xx_3369: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3370: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_3371: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_3372: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_3373: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_3374: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3375: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_3376: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3377: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3378: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3379: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_3380: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3381: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3382: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3383: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_3384: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3385: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3386: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3387: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_3388: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3389: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3390: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3391: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3392: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3393: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3394: ADC R11, [RSP+-0x2a0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
cel_Xx_3395: ADC R12, [RSP+-0x298]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
cel_Xx_3396: ADC R13, [RSP+-0x290]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
cel_Xx_3397: ADC RAX, [RSP+-0x288]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
cel_Xx_3398: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_3399: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_3400: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_3401: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_3402: MOV RSI, [RSP+-0x328]       # gcd_unsigned:618                   MOV `addr_new, `spill_addr_b_new
cel_Xx_3403: MOV RDI, [RSP+-0x330]       # gcd_unsigned:619                   MOV `tmp, `spill_mod_v_1
cel_Xx_3404: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3405: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_3406: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3407: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3408: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3409: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_3410: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3411: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3412: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3413: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_3414: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3415: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3416: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3417: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_3418: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_3419: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3420: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3421: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3422: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3423: STC                         # mul_add_slow:243                   STC
cel_Xx_3424: ADC R11, [RSP+-0x280]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
cel_Xx_3425: ADC R12, [RSP+-0x278]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
cel_Xx_3426: ADC R13, [RSP+-0x270]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
cel_Xx_3427: ADC RAX, [RSP+-0x268]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
cel_Xx_3428: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3429: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_3430: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_3431: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_3432: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_3433: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3434: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_3435: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3436: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3437: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3438: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_3439: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3440: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3441: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3442: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_3443: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3444: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3445: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3446: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_3447: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3448: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3449: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3450: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3451: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3452: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3453: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3454: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3455: ADC R11, [RSP+-0x260]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
cel_Xx_3456: ADC R12, [RSP+-0x258]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
cel_Xx_3457: ADC R13, [RSP+-0x250]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
cel_Xx_3458: ADC RAX, [RSP+-0x248]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
cel_Xx_3459: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3460: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_3461: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_3462: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_3463: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_3464: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3465: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_3466: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3467: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3468: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3469: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_3470: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3471: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3472: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3473: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_3474: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3475: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3476: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3477: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_3478: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3479: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3480: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3481: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3482: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3483: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3484: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3485: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3486: ADC R11, [RSP+-0x240]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
cel_Xx_3487: ADC R12, [RSP+-0x238]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
cel_Xx_3488: ADC R13, [RSP+-0x230]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
cel_Xx_3489: ADC RAX, [RSP+-0x228]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
cel_Xx_3490: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3491: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_3492: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_3493: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_3494: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_3495: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3496: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_3497: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3498: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3499: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3500: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_3501: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3502: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3503: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3504: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_3505: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3506: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3507: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3508: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_3509: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3510: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3511: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3512: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3513: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3514: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3515: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3516: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3517: ADC R11, [RSP+-0x220]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
cel_Xx_3518: ADC R12, [RSP+-0x218]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
cel_Xx_3519: ADC R13, [RSP+-0x210]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
cel_Xx_3520: ADC RAX, [RSP+-0x208]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
cel_Xx_3521: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3522: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_3523: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_3524: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_3525: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_3526: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3527: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_3528: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3529: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3530: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3531: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_3532: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3533: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3534: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3535: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_3536: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3537: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3538: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3539: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_3540: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3541: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3542: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3543: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3544: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3545: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3546: ADC R11, [RSP+-0x200]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
cel_Xx_3547: ADC R12, [RSP+-0x1f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
cel_Xx_3548: ADC R13, [RSP+-0x1f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
cel_Xx_3549: ADC RAX, [RSP+-0x1e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
cel_Xx_3550: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_3551: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_3552: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_3553: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_3554: JMP _cel_label_41           # gcd_unsigned:622                   JMP _cel_label_41
cel_Xx_3555: cel_multiply_uv_size_12:    # gcd_unsigned:491                   cel_multiply_uv_size_12:
cel_Xx_3556: MOV RDI, [RSP+-0x388]       # gcd_unsigned:533                   MOV `tmp, `spill_parity
cel_Xx_3557: CMP RDI, 0                  # gcd_unsigned:534                   CMP `tmp, 0
cel_Xx_3558: MOV RBX, [RSP+-0x3a8]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_0
cel_Xx_3559: MOV RBP, [RSP+-0x398]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_0
cel_Xx_3560: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_3561: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_3562: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_3563: MOV [RSP+-0x348], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_0, `addr_a
cel_Xx_3564: MOV [RSP+-0x338], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_0, `addr_b
cel_Xx_3565: MOV RBX, [RSP+-0x3a0]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_1
cel_Xx_3566: MOV RBP, [RSP+-0x390]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_1
cel_Xx_3567: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_3568: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_3569: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_3570: MOV [RSP+-0x340], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_1, `addr_a
cel_Xx_3571: MOV [RSP+-0x330], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_1, `addr_b
cel_Xx_3572: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:549                   MOV `addr_new, `spill_iter
cel_Xx_3573: TEST RSI, 1                 # gcd_unsigned:550                   TEST `addr_new, 1
cel_Xx_3574: MOV RBX, [RSP+-0x3f8]       # gcd_unsigned:553                   MOV `addr_a, `spill_a_addr_base
cel_Xx_3575: CMOVNZ RBX, [RSP+-0x3e8]    # gcd_unsigned:554                   CMOVNZ `addr_a, `spill_a_2_addr_base
cel_Xx_3576: MOV RBP, [RSP+-0x3f0]       # gcd_unsigned:557                   MOV `addr_b, `spill_b_addr_base
cel_Xx_3577: CMOVNZ RBP, [RSP+-0x3e0]    # gcd_unsigned:558                   CMOVNZ `addr_b, `spill_b_2_addr_base
cel_Xx_3578: CMP RDI, 0                  # gcd_unsigned:561                   CMP `tmp, 0
cel_Xx_3579: MOV RSI, RBX                # gcd_unsigned:562                   MOV `addr_new, `addr_a
cel_Xx_3580: CMOVNE RBX, RBP             # gcd_unsigned:563                   CMOVNE `addr_a, `addr_b
cel_Xx_3581: CMOVNE RBP, RSI             # gcd_unsigned:564                   CMOVNE `addr_b, `addr_new
cel_Xx_3582: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:569                   MOV `addr_new, `spill_iter
cel_Xx_3583: TEST RSI, 1                 # gcd_unsigned:570                   TEST `addr_new, 1
cel_Xx_3584: MOV RSI, [RSP+-0x3e0]       # gcd_unsigned:571                   MOV `addr_new, `spill_b_2_addr_base
cel_Xx_3585: CMOVNZ RSI, [RSP+-0x3f0]    # gcd_unsigned:572                   CMOVNZ `addr_new, `spill_b_addr_base
cel_Xx_3586: MOV [RSP+-0x328], RSI       # gcd_unsigned:573                   MOV `spill_addr_b_new, `addr_new
cel_Xx_3587: MOV RSI, [RSP+-0x3e8]       # gcd_unsigned:576                   MOV `addr_new, `spill_a_2_addr_base
cel_Xx_3588: CMOVNZ RSI, [RSP+-0x3f8]    # gcd_unsigned:577                   CMOVNZ `addr_new, `spill_a_addr_base
cel_Xx_3589: MOV RDI, [RSP+-0x338]       # gcd_unsigned:606                   MOV `tmp, `spill_mod_v_0
cel_Xx_3590: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3591: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_3592: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3593: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3594: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3595: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_3596: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3597: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3598: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3599: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_3600: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3601: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3602: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3603: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_3604: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_3605: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3606: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3607: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3608: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3609: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3610: MOV [RSP+-0x320], R11       # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
cel_Xx_3611: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3612: MOV [RSP+-0x318], R12       # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
cel_Xx_3613: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3614: MOV [RSP+-0x310], R13       # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
cel_Xx_3615: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3616: MOV [RSP+-0x308], RAX       # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
cel_Xx_3617: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3618: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_3619: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3620: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3621: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3622: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_3623: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3624: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3625: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3626: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_3627: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3628: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3629: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3630: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_3631: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3632: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3633: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3634: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3635: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3636: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3637: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3638: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3639: MOV [RSP+-0x300], R11       # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
cel_Xx_3640: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3641: MOV [RSP+-0x2f8], R12       # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
cel_Xx_3642: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3643: MOV [RSP+-0x2f0], R13       # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
cel_Xx_3644: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3645: MOV [RSP+-0x2e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
cel_Xx_3646: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3647: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_3648: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3649: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3650: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3651: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_3652: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3653: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3654: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3655: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_3656: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3657: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3658: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3659: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_3660: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3661: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3662: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3663: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3664: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3665: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3666: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3667: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3668: MOV [RSP+-0x2e0], R11       # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
cel_Xx_3669: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3670: MOV [RSP+-0x2d8], R12       # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
cel_Xx_3671: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3672: MOV [RSP+-0x2d0], R13       # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
cel_Xx_3673: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3674: MOV [RSP+-0x2c8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
cel_Xx_3675: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3676: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_3677: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3678: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3679: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3680: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_3681: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3682: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3683: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3684: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_3685: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3686: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3687: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3688: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_3689: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3690: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3691: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3692: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3693: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3694: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3695: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3696: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3697: MOV [RSP+-0x2c0], R11       # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
cel_Xx_3698: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3699: MOV [RSP+-0x2b8], R12       # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
cel_Xx_3700: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3701: MOV [RSP+-0x2b0], R13       # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
cel_Xx_3702: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3703: MOV [RSP+-0x2a8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
cel_Xx_3704: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3705: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_3706: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3707: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3708: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3709: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_3710: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3711: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3712: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3713: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_3714: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3715: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3716: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3717: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_3718: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3719: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3720: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3721: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3722: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3723: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3724: MOV [RSP+-0x2a0], R11       # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
cel_Xx_3725: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3726: MOV [RSP+-0x298], R12       # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
cel_Xx_3727: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3728: MOV [RSP+-0x290], R13       # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
cel_Xx_3729: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3730: MOV [RSP+-0x288], RAX       # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
cel_Xx_3731: MOV RDI, [RSP+-0x340]       # gcd_unsigned:610                   MOV `tmp, `spill_mod_u_1
cel_Xx_3732: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3733: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_3734: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3735: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3736: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3737: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_3738: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3739: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3740: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3741: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_3742: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3743: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3744: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3745: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_3746: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_3747: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3748: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3749: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3750: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3751: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3752: MOV [RSP+-0x280], R11       # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
cel_Xx_3753: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3754: MOV [RSP+-0x278], R12       # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
cel_Xx_3755: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3756: MOV [RSP+-0x270], R13       # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
cel_Xx_3757: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3758: MOV [RSP+-0x268], RAX       # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
cel_Xx_3759: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3760: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_3761: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3762: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3763: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3764: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_3765: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3766: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3767: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3768: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_3769: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3770: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3771: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3772: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_3773: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3774: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3775: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3776: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3777: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3778: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3779: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3780: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3781: MOV [RSP+-0x260], R11       # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
cel_Xx_3782: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3783: MOV [RSP+-0x258], R12       # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
cel_Xx_3784: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3785: MOV [RSP+-0x250], R13       # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
cel_Xx_3786: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3787: MOV [RSP+-0x248], RAX       # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
cel_Xx_3788: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3789: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_3790: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3791: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3792: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3793: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_3794: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3795: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3796: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3797: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_3798: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3799: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3800: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3801: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_3802: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3803: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3804: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3805: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3806: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3807: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3808: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3809: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3810: MOV [RSP+-0x240], R11       # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
cel_Xx_3811: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3812: MOV [RSP+-0x238], R12       # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
cel_Xx_3813: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3814: MOV [RSP+-0x230], R13       # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
cel_Xx_3815: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3816: MOV [RSP+-0x228], RAX       # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
cel_Xx_3817: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3818: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_3819: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3820: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3821: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3822: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_3823: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3824: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3825: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3826: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_3827: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3828: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3829: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3830: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_3831: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3832: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3833: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3834: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3835: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3836: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3837: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3838: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3839: MOV [RSP+-0x220], R11       # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
cel_Xx_3840: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3841: MOV [RSP+-0x218], R12       # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
cel_Xx_3842: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3843: MOV [RSP+-0x210], R13       # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
cel_Xx_3844: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3845: MOV [RSP+-0x208], RAX       # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
cel_Xx_3846: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3847: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_3848: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3849: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3850: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3851: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_3852: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3853: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3854: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3855: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_3856: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3857: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3858: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3859: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_3860: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3861: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3862: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3863: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3864: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3865: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_3866: MOV [RSP+-0x200], R11       # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
cel_Xx_3867: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_3868: MOV [RSP+-0x1f8], R12       # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
cel_Xx_3869: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_3870: MOV [RSP+-0x1f0], R13       # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
cel_Xx_3871: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_3872: MOV [RSP+-0x1e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
cel_Xx_3873: MOV RDI, [RSP+-0x348]       # gcd_unsigned:614                   MOV `tmp, `spill_mod_u_0
cel_Xx_3874: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3875: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_3876: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3877: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3878: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3879: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_3880: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3881: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3882: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3883: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_3884: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3885: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3886: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3887: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_3888: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_3889: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3890: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3891: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3892: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3893: STC                         # mul_add_slow:243                   STC
cel_Xx_3894: ADC R11, [RSP+-0x320]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
cel_Xx_3895: ADC R12, [RSP+-0x318]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
cel_Xx_3896: ADC R13, [RSP+-0x310]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
cel_Xx_3897: ADC RAX, [RSP+-0x308]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
cel_Xx_3898: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3899: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_3900: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_3901: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_3902: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_3903: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3904: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_3905: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3906: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3907: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3908: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_3909: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3910: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3911: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3912: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_3913: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3914: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3915: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3916: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_3917: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3918: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3919: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3920: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3921: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3922: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3923: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3924: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3925: ADC R11, [RSP+-0x300]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
cel_Xx_3926: ADC R12, [RSP+-0x2f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
cel_Xx_3927: ADC R13, [RSP+-0x2f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
cel_Xx_3928: ADC RAX, [RSP+-0x2e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
cel_Xx_3929: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3930: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_3931: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_3932: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_3933: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_3934: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3935: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_3936: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3937: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3938: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3939: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_3940: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3941: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3942: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3943: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_3944: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3945: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3946: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3947: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_3948: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3949: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3950: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3951: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3952: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3953: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3954: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3955: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3956: ADC R11, [RSP+-0x2e0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
cel_Xx_3957: ADC R12, [RSP+-0x2d8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
cel_Xx_3958: ADC R13, [RSP+-0x2d0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
cel_Xx_3959: ADC RAX, [RSP+-0x2c8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
cel_Xx_3960: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3961: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_3962: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_3963: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_3964: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_3965: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3966: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_3967: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3968: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_3969: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3970: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_3971: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_3972: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_3973: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3974: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_3975: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_3976: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_3977: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3978: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_3979: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_3980: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_3981: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_3982: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_3983: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_3984: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_3985: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_3986: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_3987: ADC R11, [RSP+-0x2c0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
cel_Xx_3988: ADC R12, [RSP+-0x2b8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
cel_Xx_3989: ADC R13, [RSP+-0x2b0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
cel_Xx_3990: ADC RAX, [RSP+-0x2a8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
cel_Xx_3991: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_3992: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_3993: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_3994: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_3995: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_3996: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_3997: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_3998: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_3999: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4000: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4001: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_4002: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4003: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4004: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4005: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_4006: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4007: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4008: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4009: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_4010: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4011: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4012: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4013: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4014: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4015: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4016: ADC R11, [RSP+-0x2a0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
cel_Xx_4017: ADC R12, [RSP+-0x298]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
cel_Xx_4018: ADC R13, [RSP+-0x290]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
cel_Xx_4019: ADC RAX, [RSP+-0x288]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
cel_Xx_4020: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_4021: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_4022: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_4023: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_4024: MOV RSI, [RSP+-0x328]       # gcd_unsigned:618                   MOV `addr_new, `spill_addr_b_new
cel_Xx_4025: MOV RDI, [RSP+-0x330]       # gcd_unsigned:619                   MOV `tmp, `spill_mod_v_1
cel_Xx_4026: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4027: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_4028: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4029: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4030: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4031: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_4032: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4033: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4034: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4035: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_4036: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4037: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4038: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4039: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_4040: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4041: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4042: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4043: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4044: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4045: STC                         # mul_add_slow:243                   STC
cel_Xx_4046: ADC R11, [RSP+-0x280]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
cel_Xx_4047: ADC R12, [RSP+-0x278]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
cel_Xx_4048: ADC R13, [RSP+-0x270]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
cel_Xx_4049: ADC RAX, [RSP+-0x268]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
cel_Xx_4050: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4051: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_4052: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_4053: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_4054: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_4055: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4056: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_4057: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4058: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4059: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4060: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_4061: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4062: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4063: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4064: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_4065: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4066: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4067: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4068: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_4069: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4070: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4071: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4072: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4073: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4074: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4075: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4076: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4077: ADC R11, [RSP+-0x260]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
cel_Xx_4078: ADC R12, [RSP+-0x258]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
cel_Xx_4079: ADC R13, [RSP+-0x250]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
cel_Xx_4080: ADC RAX, [RSP+-0x248]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
cel_Xx_4081: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4082: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_4083: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_4084: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_4085: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_4086: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4087: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_4088: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4089: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4090: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4091: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_4092: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4093: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4094: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4095: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_4096: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4097: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4098: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4099: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_4100: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4101: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4102: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4103: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4104: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4105: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4106: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4107: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4108: ADC R11, [RSP+-0x240]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
cel_Xx_4109: ADC R12, [RSP+-0x238]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
cel_Xx_4110: ADC R13, [RSP+-0x230]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
cel_Xx_4111: ADC RAX, [RSP+-0x228]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
cel_Xx_4112: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4113: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_4114: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_4115: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_4116: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_4117: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4118: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_4119: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4120: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4121: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4122: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_4123: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4124: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4125: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4126: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_4127: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4128: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4129: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4130: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_4131: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4132: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4133: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4134: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4135: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4136: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4137: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4138: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4139: ADC R11, [RSP+-0x220]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
cel_Xx_4140: ADC R12, [RSP+-0x218]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
cel_Xx_4141: ADC R13, [RSP+-0x210]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
cel_Xx_4142: ADC RAX, [RSP+-0x208]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
cel_Xx_4143: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4144: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_4145: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_4146: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_4147: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_4148: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4149: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_4150: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4151: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4152: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4153: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_4154: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4155: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4156: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4157: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_4158: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4159: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4160: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4161: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_4162: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4163: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4164: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4165: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4166: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4167: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4168: ADC R11, [RSP+-0x200]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
cel_Xx_4169: ADC R12, [RSP+-0x1f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
cel_Xx_4170: ADC R13, [RSP+-0x1f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
cel_Xx_4171: ADC RAX, [RSP+-0x1e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
cel_Xx_4172: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_4173: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_4174: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_4175: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_4176: JMP _cel_label_41           # gcd_unsigned:622                   JMP _cel_label_41
cel_Xx_4177: cel_multiply_uv_size_16:    # gcd_unsigned:491                   cel_multiply_uv_size_16:
cel_Xx_4178: MOV RDI, [RSP+-0x388]       # gcd_unsigned:533                   MOV `tmp, `spill_parity
cel_Xx_4179: CMP RDI, 0                  # gcd_unsigned:534                   CMP `tmp, 0
cel_Xx_4180: MOV RBX, [RSP+-0x3a8]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_0
cel_Xx_4181: MOV RBP, [RSP+-0x398]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_0
cel_Xx_4182: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_4183: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_4184: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_4185: MOV [RSP+-0x348], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_0, `addr_a
cel_Xx_4186: MOV [RSP+-0x338], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_0, `addr_b
cel_Xx_4187: MOV RBX, [RSP+-0x3a0]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_1
cel_Xx_4188: MOV RBP, [RSP+-0x390]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_1
cel_Xx_4189: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_4190: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_4191: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_4192: MOV [RSP+-0x340], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_1, `addr_a
cel_Xx_4193: MOV [RSP+-0x330], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_1, `addr_b
cel_Xx_4194: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:549                   MOV `addr_new, `spill_iter
cel_Xx_4195: TEST RSI, 1                 # gcd_unsigned:550                   TEST `addr_new, 1
cel_Xx_4196: MOV RBX, [RSP+-0x3f8]       # gcd_unsigned:553                   MOV `addr_a, `spill_a_addr_base
cel_Xx_4197: CMOVNZ RBX, [RSP+-0x3e8]    # gcd_unsigned:554                   CMOVNZ `addr_a, `spill_a_2_addr_base
cel_Xx_4198: MOV RBP, [RSP+-0x3f0]       # gcd_unsigned:557                   MOV `addr_b, `spill_b_addr_base
cel_Xx_4199: CMOVNZ RBP, [RSP+-0x3e0]    # gcd_unsigned:558                   CMOVNZ `addr_b, `spill_b_2_addr_base
cel_Xx_4200: CMP RDI, 0                  # gcd_unsigned:561                   CMP `tmp, 0
cel_Xx_4201: MOV RSI, RBX                # gcd_unsigned:562                   MOV `addr_new, `addr_a
cel_Xx_4202: CMOVNE RBX, RBP             # gcd_unsigned:563                   CMOVNE `addr_a, `addr_b
cel_Xx_4203: CMOVNE RBP, RSI             # gcd_unsigned:564                   CMOVNE `addr_b, `addr_new
cel_Xx_4204: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:569                   MOV `addr_new, `spill_iter
cel_Xx_4205: TEST RSI, 1                 # gcd_unsigned:570                   TEST `addr_new, 1
cel_Xx_4206: MOV RSI, [RSP+-0x3e0]       # gcd_unsigned:571                   MOV `addr_new, `spill_b_2_addr_base
cel_Xx_4207: CMOVNZ RSI, [RSP+-0x3f0]    # gcd_unsigned:572                   CMOVNZ `addr_new, `spill_b_addr_base
cel_Xx_4208: MOV [RSP+-0x328], RSI       # gcd_unsigned:573                   MOV `spill_addr_b_new, `addr_new
cel_Xx_4209: MOV RSI, [RSP+-0x3e8]       # gcd_unsigned:576                   MOV `addr_new, `spill_a_2_addr_base
cel_Xx_4210: CMOVNZ RSI, [RSP+-0x3f8]    # gcd_unsigned:577                   CMOVNZ `addr_new, `spill_a_addr_base
cel_Xx_4211: MOV RDI, [RSP+-0x338]       # gcd_unsigned:606                   MOV `tmp, `spill_mod_v_0
cel_Xx_4212: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4213: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_4214: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4215: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4216: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4217: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_4218: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4219: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4220: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4221: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_4222: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4223: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4224: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4225: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_4226: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4227: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4228: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4229: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4230: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4231: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4232: MOV [RSP+-0x320], R11       # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
cel_Xx_4233: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4234: MOV [RSP+-0x318], R12       # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
cel_Xx_4235: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4236: MOV [RSP+-0x310], R13       # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
cel_Xx_4237: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4238: MOV [RSP+-0x308], RAX       # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
cel_Xx_4239: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4240: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_4241: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4242: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4243: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4244: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_4245: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4246: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4247: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4248: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_4249: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4250: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4251: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4252: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_4253: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4254: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4255: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4256: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4257: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4258: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4259: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4260: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4261: MOV [RSP+-0x300], R11       # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
cel_Xx_4262: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4263: MOV [RSP+-0x2f8], R12       # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
cel_Xx_4264: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4265: MOV [RSP+-0x2f0], R13       # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
cel_Xx_4266: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4267: MOV [RSP+-0x2e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
cel_Xx_4268: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4269: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_4270: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4271: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4272: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4273: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_4274: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4275: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4276: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4277: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_4278: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4279: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4280: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4281: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_4282: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4283: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4284: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4285: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4286: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4287: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4288: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4289: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4290: MOV [RSP+-0x2e0], R11       # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
cel_Xx_4291: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4292: MOV [RSP+-0x2d8], R12       # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
cel_Xx_4293: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4294: MOV [RSP+-0x2d0], R13       # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
cel_Xx_4295: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4296: MOV [RSP+-0x2c8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
cel_Xx_4297: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4298: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_4299: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4300: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4301: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4302: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_4303: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4304: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4305: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4306: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_4307: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4308: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4309: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4310: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_4311: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4312: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4313: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4314: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4315: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4316: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4317: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4318: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4319: MOV [RSP+-0x2c0], R11       # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
cel_Xx_4320: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4321: MOV [RSP+-0x2b8], R12       # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
cel_Xx_4322: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4323: MOV [RSP+-0x2b0], R13       # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
cel_Xx_4324: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4325: MOV [RSP+-0x2a8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
cel_Xx_4326: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4327: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_4328: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4329: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4330: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4331: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_4332: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4333: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4334: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4335: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_4336: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4337: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4338: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4339: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_4340: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4341: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4342: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4343: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4344: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4345: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4346: MOV [RSP+-0x2a0], R11       # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
cel_Xx_4347: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4348: MOV [RSP+-0x298], R12       # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
cel_Xx_4349: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4350: MOV [RSP+-0x290], R13       # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
cel_Xx_4351: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4352: MOV [RSP+-0x288], RAX       # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
cel_Xx_4353: MOV RDI, [RSP+-0x340]       # gcd_unsigned:610                   MOV `tmp, `spill_mod_u_1
cel_Xx_4354: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4355: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_4356: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4357: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4358: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4359: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_4360: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4361: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4362: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4363: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_4364: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4365: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4366: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4367: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_4368: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4369: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4370: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4371: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4372: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4373: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4374: MOV [RSP+-0x280], R11       # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
cel_Xx_4375: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4376: MOV [RSP+-0x278], R12       # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
cel_Xx_4377: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4378: MOV [RSP+-0x270], R13       # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
cel_Xx_4379: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4380: MOV [RSP+-0x268], RAX       # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
cel_Xx_4381: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4382: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_4383: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4384: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4385: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4386: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_4387: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4388: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4389: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4390: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_4391: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4392: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4393: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4394: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_4395: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4396: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4397: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4398: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4399: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4400: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4401: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4402: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4403: MOV [RSP+-0x260], R11       # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
cel_Xx_4404: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4405: MOV [RSP+-0x258], R12       # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
cel_Xx_4406: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4407: MOV [RSP+-0x250], R13       # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
cel_Xx_4408: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4409: MOV [RSP+-0x248], RAX       # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
cel_Xx_4410: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4411: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_4412: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4413: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4414: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4415: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_4416: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4417: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4418: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4419: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_4420: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4421: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4422: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4423: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_4424: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4425: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4426: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4427: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4428: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4429: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4430: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4431: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4432: MOV [RSP+-0x240], R11       # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
cel_Xx_4433: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4434: MOV [RSP+-0x238], R12       # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
cel_Xx_4435: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4436: MOV [RSP+-0x230], R13       # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
cel_Xx_4437: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4438: MOV [RSP+-0x228], RAX       # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
cel_Xx_4439: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4440: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_4441: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4442: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4443: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4444: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_4445: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4446: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4447: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4448: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_4449: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4450: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4451: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4452: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_4453: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4454: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4455: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4456: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4457: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4458: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4459: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4460: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4461: MOV [RSP+-0x220], R11       # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
cel_Xx_4462: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4463: MOV [RSP+-0x218], R12       # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
cel_Xx_4464: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4465: MOV [RSP+-0x210], R13       # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
cel_Xx_4466: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4467: MOV [RSP+-0x208], RAX       # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
cel_Xx_4468: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4469: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_4470: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4471: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4472: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4473: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_4474: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4475: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4476: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4477: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_4478: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4479: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4480: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4481: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_4482: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4483: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4484: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4485: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4486: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4487: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4488: MOV [RSP+-0x200], R11       # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
cel_Xx_4489: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4490: MOV [RSP+-0x1f8], R12       # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
cel_Xx_4491: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4492: MOV [RSP+-0x1f0], R13       # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
cel_Xx_4493: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4494: MOV [RSP+-0x1e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
cel_Xx_4495: MOV RDI, [RSP+-0x348]       # gcd_unsigned:614                   MOV `tmp, `spill_mod_u_0
cel_Xx_4496: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4497: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_4498: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4499: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4500: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4501: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_4502: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4503: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4504: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4505: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_4506: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4507: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4508: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4509: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_4510: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4511: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4512: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4513: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4514: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4515: STC                         # mul_add_slow:243                   STC
cel_Xx_4516: ADC R11, [RSP+-0x320]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
cel_Xx_4517: ADC R12, [RSP+-0x318]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
cel_Xx_4518: ADC R13, [RSP+-0x310]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
cel_Xx_4519: ADC RAX, [RSP+-0x308]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
cel_Xx_4520: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4521: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_4522: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_4523: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_4524: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_4525: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4526: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_4527: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4528: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4529: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4530: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_4531: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4532: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4533: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4534: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_4535: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4536: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4537: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4538: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_4539: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4540: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4541: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4542: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4543: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4544: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4545: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4546: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4547: ADC R11, [RSP+-0x300]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
cel_Xx_4548: ADC R12, [RSP+-0x2f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
cel_Xx_4549: ADC R13, [RSP+-0x2f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
cel_Xx_4550: ADC RAX, [RSP+-0x2e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
cel_Xx_4551: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4552: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_4553: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_4554: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_4555: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_4556: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4557: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_4558: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4559: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4560: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4561: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_4562: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4563: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4564: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4565: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_4566: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4567: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4568: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4569: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_4570: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4571: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4572: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4573: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4574: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4575: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4576: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4577: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4578: ADC R11, [RSP+-0x2e0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
cel_Xx_4579: ADC R12, [RSP+-0x2d8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
cel_Xx_4580: ADC R13, [RSP+-0x2d0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
cel_Xx_4581: ADC RAX, [RSP+-0x2c8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
cel_Xx_4582: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4583: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_4584: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_4585: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_4586: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_4587: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4588: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_4589: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4590: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4591: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4592: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_4593: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4594: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4595: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4596: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_4597: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4598: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4599: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4600: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_4601: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4602: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4603: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4604: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4605: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4606: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4607: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4608: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4609: ADC R11, [RSP+-0x2c0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
cel_Xx_4610: ADC R12, [RSP+-0x2b8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
cel_Xx_4611: ADC R13, [RSP+-0x2b0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
cel_Xx_4612: ADC RAX, [RSP+-0x2a8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
cel_Xx_4613: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4614: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_4615: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_4616: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_4617: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_4618: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4619: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_4620: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4621: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4622: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4623: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_4624: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4625: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4626: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4627: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_4628: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4629: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4630: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4631: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_4632: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4633: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4634: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4635: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4636: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4637: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4638: ADC R11, [RSP+-0x2a0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
cel_Xx_4639: ADC R12, [RSP+-0x298]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
cel_Xx_4640: ADC R13, [RSP+-0x290]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
cel_Xx_4641: ADC RAX, [RSP+-0x288]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
cel_Xx_4642: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_4643: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_4644: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_4645: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_4646: MOV RSI, [RSP+-0x328]       # gcd_unsigned:618                   MOV `addr_new, `spill_addr_b_new
cel_Xx_4647: MOV RDI, [RSP+-0x330]       # gcd_unsigned:619                   MOV `tmp, `spill_mod_v_1
cel_Xx_4648: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4649: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_4650: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4651: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4652: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4653: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_4654: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4655: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4656: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4657: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_4658: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4659: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4660: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4661: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_4662: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4663: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4664: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4665: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4666: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4667: STC                         # mul_add_slow:243                   STC
cel_Xx_4668: ADC R11, [RSP+-0x280]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
cel_Xx_4669: ADC R12, [RSP+-0x278]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
cel_Xx_4670: ADC R13, [RSP+-0x270]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
cel_Xx_4671: ADC RAX, [RSP+-0x268]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
cel_Xx_4672: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4673: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_4674: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_4675: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_4676: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_4677: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4678: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_4679: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4680: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4681: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4682: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_4683: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4684: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4685: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4686: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_4687: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4688: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4689: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4690: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_4691: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4692: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4693: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4694: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4695: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4696: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4697: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4698: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4699: ADC R11, [RSP+-0x260]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
cel_Xx_4700: ADC R12, [RSP+-0x258]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
cel_Xx_4701: ADC R13, [RSP+-0x250]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
cel_Xx_4702: ADC RAX, [RSP+-0x248]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
cel_Xx_4703: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4704: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_4705: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_4706: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_4707: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_4708: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4709: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_4710: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4711: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4712: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4713: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_4714: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4715: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4716: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4717: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_4718: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4719: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4720: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4721: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_4722: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4723: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4724: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4725: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4726: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4727: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4728: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4729: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4730: ADC R11, [RSP+-0x240]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
cel_Xx_4731: ADC R12, [RSP+-0x238]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
cel_Xx_4732: ADC R13, [RSP+-0x230]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
cel_Xx_4733: ADC RAX, [RSP+-0x228]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
cel_Xx_4734: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4735: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_4736: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_4737: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_4738: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_4739: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4740: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_4741: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4742: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4743: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4744: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_4745: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4746: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4747: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4748: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_4749: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4750: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4751: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4752: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_4753: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4754: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4755: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4756: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4757: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4758: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4759: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4760: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4761: ADC R11, [RSP+-0x220]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
cel_Xx_4762: ADC R12, [RSP+-0x218]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
cel_Xx_4763: ADC R13, [RSP+-0x210]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
cel_Xx_4764: ADC RAX, [RSP+-0x208]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
cel_Xx_4765: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_4766: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_4767: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_4768: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_4769: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_4770: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4771: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_4772: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4773: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4774: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4775: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_4776: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4777: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4778: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4779: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_4780: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4781: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4782: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4783: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_4784: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4785: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4786: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4787: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4788: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4789: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_4790: ADC R11, [RSP+-0x200]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
cel_Xx_4791: ADC R12, [RSP+-0x1f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
cel_Xx_4792: ADC R13, [RSP+-0x1f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
cel_Xx_4793: ADC RAX, [RSP+-0x1e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
cel_Xx_4794: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_4795: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_4796: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_4797: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_4798: JMP _cel_label_41           # gcd_unsigned:622                   JMP _cel_label_41
cel_Xx_4799: cel_multiply_uv_size_20:    # gcd_unsigned:491                   cel_multiply_uv_size_20:
cel_Xx_4800: MOV RDI, [RSP+-0x388]       # gcd_unsigned:533                   MOV `tmp, `spill_parity
cel_Xx_4801: CMP RDI, 0                  # gcd_unsigned:534                   CMP `tmp, 0
cel_Xx_4802: MOV RBX, [RSP+-0x3a8]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_0
cel_Xx_4803: MOV RBP, [RSP+-0x398]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_0
cel_Xx_4804: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_4805: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_4806: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_4807: MOV [RSP+-0x348], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_0, `addr_a
cel_Xx_4808: MOV [RSP+-0x338], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_0, `addr_b
cel_Xx_4809: MOV RBX, [RSP+-0x3a0]       # gcd_unsigned:537                   MOV `addr_a, `spill_u_1
cel_Xx_4810: MOV RBP, [RSP+-0x390]       # gcd_unsigned:538                   MOV `addr_b, `spill_v_1
cel_Xx_4811: MOV RSI, RBX                # gcd_unsigned:541                   MOV `addr_new, `addr_a
cel_Xx_4812: CMOVNE RBX, RBP             # gcd_unsigned:542                   CMOVNE `addr_a, `addr_b
cel_Xx_4813: CMOVNE RBP, RSI             # gcd_unsigned:543                   CMOVNE `addr_b, `addr_new
cel_Xx_4814: MOV [RSP+-0x340], RBX       # gcd_unsigned:545                   MOV `spill_mod_u_1, `addr_a
cel_Xx_4815: MOV [RSP+-0x330], RBP       # gcd_unsigned:546                   MOV `spill_mod_v_1, `addr_b
cel_Xx_4816: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:549                   MOV `addr_new, `spill_iter
cel_Xx_4817: TEST RSI, 1                 # gcd_unsigned:550                   TEST `addr_new, 1
cel_Xx_4818: MOV RBX, [RSP+-0x3f8]       # gcd_unsigned:553                   MOV `addr_a, `spill_a_addr_base
cel_Xx_4819: CMOVNZ RBX, [RSP+-0x3e8]    # gcd_unsigned:554                   CMOVNZ `addr_a, `spill_a_2_addr_base
cel_Xx_4820: MOV RBP, [RSP+-0x3f0]       # gcd_unsigned:557                   MOV `addr_b, `spill_b_addr_base
cel_Xx_4821: CMOVNZ RBP, [RSP+-0x3e0]    # gcd_unsigned:558                   CMOVNZ `addr_b, `spill_b_2_addr_base
cel_Xx_4822: CMP RDI, 0                  # gcd_unsigned:561                   CMP `tmp, 0
cel_Xx_4823: MOV RSI, RBX                # gcd_unsigned:562                   MOV `addr_new, `addr_a
cel_Xx_4824: CMOVNE RBX, RBP             # gcd_unsigned:563                   CMOVNE `addr_a, `addr_b
cel_Xx_4825: CMOVNE RBP, RSI             # gcd_unsigned:564                   CMOVNE `addr_b, `addr_new
cel_Xx_4826: MOV RSI, [RSP+-0x3b8]       # gcd_unsigned:569                   MOV `addr_new, `spill_iter
cel_Xx_4827: TEST RSI, 1                 # gcd_unsigned:570                   TEST `addr_new, 1
cel_Xx_4828: MOV RSI, [RSP+-0x3e0]       # gcd_unsigned:571                   MOV `addr_new, `spill_b_2_addr_base
cel_Xx_4829: CMOVNZ RSI, [RSP+-0x3f0]    # gcd_unsigned:572                   CMOVNZ `addr_new, `spill_b_addr_base
cel_Xx_4830: MOV [RSP+-0x328], RSI       # gcd_unsigned:573                   MOV `spill_addr_b_new, `addr_new
cel_Xx_4831: MOV RSI, [RSP+-0x3e8]       # gcd_unsigned:576                   MOV `addr_new, `spill_a_2_addr_base
cel_Xx_4832: CMOVNZ RSI, [RSP+-0x3f8]    # gcd_unsigned:577                   CMOVNZ `addr_new, `spill_a_addr_base
cel_Xx_4833: MOV RDI, [RSP+-0x338]       # gcd_unsigned:606                   MOV `tmp, `spill_mod_v_0
cel_Xx_4834: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4835: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_4836: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4837: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4838: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4839: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_4840: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4841: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4842: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4843: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_4844: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4845: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4846: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4847: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_4848: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4849: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4850: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4851: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4852: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4853: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4854: MOV [RSP+-0x320], R11       # mul_add_slow:266                   MOV [RSP+-0x320], `mul_low_0
cel_Xx_4855: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4856: MOV [RSP+-0x318], R12       # mul_add_slow:266                   MOV [RSP+-0x318], `mul_low_1
cel_Xx_4857: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4858: MOV [RSP+-0x310], R13       # mul_add_slow:266                   MOV [RSP+-0x310], `mul_low_2
cel_Xx_4859: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4860: MOV [RSP+-0x308], RAX       # mul_add_slow:266                   MOV [RSP+-0x308], `mul_low_3
cel_Xx_4861: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4862: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_4863: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4864: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4865: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4866: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_4867: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4868: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4869: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4870: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_4871: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4872: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4873: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4874: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_4875: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4876: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4877: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4878: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4879: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4880: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4881: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4882: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4883: MOV [RSP+-0x300], R11       # mul_add_slow:266                   MOV [RSP+-0x300], `mul_low_0
cel_Xx_4884: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4885: MOV [RSP+-0x2f8], R12       # mul_add_slow:266                   MOV [RSP+-0x2f8], `mul_low_1
cel_Xx_4886: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4887: MOV [RSP+-0x2f0], R13       # mul_add_slow:266                   MOV [RSP+-0x2f0], `mul_low_2
cel_Xx_4888: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4889: MOV [RSP+-0x2e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2e8], `mul_low_3
cel_Xx_4890: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4891: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_4892: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4893: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4894: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4895: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_4896: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4897: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4898: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4899: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_4900: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4901: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4902: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4903: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_4904: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4905: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4906: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4907: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4908: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4909: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4910: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4911: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4912: MOV [RSP+-0x2e0], R11       # mul_add_slow:266                   MOV [RSP+-0x2e0], `mul_low_0
cel_Xx_4913: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4914: MOV [RSP+-0x2d8], R12       # mul_add_slow:266                   MOV [RSP+-0x2d8], `mul_low_1
cel_Xx_4915: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4916: MOV [RSP+-0x2d0], R13       # mul_add_slow:266                   MOV [RSP+-0x2d0], `mul_low_2
cel_Xx_4917: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4918: MOV [RSP+-0x2c8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2c8], `mul_low_3
cel_Xx_4919: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4920: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_4921: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4922: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4923: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4924: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_4925: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4926: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4927: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4928: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_4929: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4930: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4931: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4932: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_4933: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4934: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4935: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4936: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4937: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4938: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4939: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4940: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4941: MOV [RSP+-0x2c0], R11       # mul_add_slow:266                   MOV [RSP+-0x2c0], `mul_low_0
cel_Xx_4942: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4943: MOV [RSP+-0x2b8], R12       # mul_add_slow:266                   MOV [RSP+-0x2b8], `mul_low_1
cel_Xx_4944: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4945: MOV [RSP+-0x2b0], R13       # mul_add_slow:266                   MOV [RSP+-0x2b0], `mul_low_2
cel_Xx_4946: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4947: MOV [RSP+-0x2a8], RAX       # mul_add_slow:266                   MOV [RSP+-0x2a8], `mul_low_3
cel_Xx_4948: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4949: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_4950: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4951: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4952: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4953: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_4954: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4955: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4956: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4957: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_4958: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4959: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4960: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4961: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_4962: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_4963: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_4964: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_4965: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4966: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4967: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4968: MOV [RSP+-0x2a0], R11       # mul_add_slow:266                   MOV [RSP+-0x2a0], `mul_low_0
cel_Xx_4969: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4970: MOV [RSP+-0x298], R12       # mul_add_slow:266                   MOV [RSP+-0x298], `mul_low_1
cel_Xx_4971: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_4972: MOV [RSP+-0x290], R13       # mul_add_slow:266                   MOV [RSP+-0x290], `mul_low_2
cel_Xx_4973: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_4974: MOV [RSP+-0x288], RAX       # mul_add_slow:266                   MOV [RSP+-0x288], `mul_low_3
cel_Xx_4975: MOV RDI, [RSP+-0x340]       # gcd_unsigned:610                   MOV `tmp, `spill_mod_u_1
cel_Xx_4976: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4977: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_4978: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_4979: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_4980: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4981: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_4982: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_4983: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_4984: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4985: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_4986: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_4987: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_4988: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_4989: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_4990: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_4991: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_4992: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_4993: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_4994: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_4995: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_4996: MOV [RSP+-0x280], R11       # mul_add_slow:266                   MOV [RSP+-0x280], `mul_low_0
cel_Xx_4997: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_4998: MOV [RSP+-0x278], R12       # mul_add_slow:266                   MOV [RSP+-0x278], `mul_low_1
cel_Xx_4999: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_5000: MOV [RSP+-0x270], R13       # mul_add_slow:266                   MOV [RSP+-0x270], `mul_low_2
cel_Xx_5001: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_5002: MOV [RSP+-0x268], RAX       # mul_add_slow:266                   MOV [RSP+-0x268], `mul_low_3
cel_Xx_5003: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5004: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_5005: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5006: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5007: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5008: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_5009: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5010: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5011: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5012: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_5013: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5014: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5015: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5016: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_5017: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5018: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5019: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5020: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5021: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5022: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5023: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5024: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_5025: MOV [RSP+-0x260], R11       # mul_add_slow:266                   MOV [RSP+-0x260], `mul_low_0
cel_Xx_5026: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_5027: MOV [RSP+-0x258], R12       # mul_add_slow:266                   MOV [RSP+-0x258], `mul_low_1
cel_Xx_5028: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_5029: MOV [RSP+-0x250], R13       # mul_add_slow:266                   MOV [RSP+-0x250], `mul_low_2
cel_Xx_5030: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_5031: MOV [RSP+-0x248], RAX       # mul_add_slow:266                   MOV [RSP+-0x248], `mul_low_3
cel_Xx_5032: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5033: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_5034: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5035: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5036: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5037: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_5038: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5039: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5040: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5041: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_5042: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5043: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5044: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5045: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_5046: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5047: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5048: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5049: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5050: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5051: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5052: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5053: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_5054: MOV [RSP+-0x240], R11       # mul_add_slow:266                   MOV [RSP+-0x240], `mul_low_0
cel_Xx_5055: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_5056: MOV [RSP+-0x238], R12       # mul_add_slow:266                   MOV [RSP+-0x238], `mul_low_1
cel_Xx_5057: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_5058: MOV [RSP+-0x230], R13       # mul_add_slow:266                   MOV [RSP+-0x230], `mul_low_2
cel_Xx_5059: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_5060: MOV [RSP+-0x228], RAX       # mul_add_slow:266                   MOV [RSP+-0x228], `mul_low_3
cel_Xx_5061: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5062: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_5063: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5064: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5065: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5066: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_5067: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5068: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5069: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5070: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_5071: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5072: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5073: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5074: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_5075: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5076: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5077: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5078: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5079: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5080: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5081: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5082: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_5083: MOV [RSP+-0x220], R11       # mul_add_slow:266                   MOV [RSP+-0x220], `mul_low_0
cel_Xx_5084: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_5085: MOV [RSP+-0x218], R12       # mul_add_slow:266                   MOV [RSP+-0x218], `mul_low_1
cel_Xx_5086: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_5087: MOV [RSP+-0x210], R13       # mul_add_slow:266                   MOV [RSP+-0x210], `mul_low_2
cel_Xx_5088: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_5089: MOV [RSP+-0x208], RAX       # mul_add_slow:266                   MOV [RSP+-0x208], `mul_low_3
cel_Xx_5090: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5091: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_5092: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5093: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5094: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5095: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_5096: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5097: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5098: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5099: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_5100: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5101: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5102: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5103: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_5104: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5105: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5106: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5107: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5108: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5109: NOT R11                     # mul_add_slow:264                   NOT `mul_low_0
cel_Xx_5110: MOV [RSP+-0x200], R11       # mul_add_slow:266                   MOV [RSP+-0x200], `mul_low_0
cel_Xx_5111: NOT R12                     # mul_add_slow:264                   NOT `mul_low_1
cel_Xx_5112: MOV [RSP+-0x1f8], R12       # mul_add_slow:266                   MOV [RSP+-0x1f8], `mul_low_1
cel_Xx_5113: NOT R13                     # mul_add_slow:264                   NOT `mul_low_2
cel_Xx_5114: MOV [RSP+-0x1f0], R13       # mul_add_slow:266                   MOV [RSP+-0x1f0], `mul_low_2
cel_Xx_5115: NOT RAX                     # mul_add_slow:264                   NOT `mul_low_3
cel_Xx_5116: MOV [RSP+-0x1e8], RAX       # mul_add_slow:266                   MOV [RSP+-0x1e8], `mul_low_3
cel_Xx_5117: MOV RDI, [RSP+-0x348]       # gcd_unsigned:614                   MOV `tmp, `spill_mod_u_0
cel_Xx_5118: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5119: MUL QWORD PTR [RBX+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x0]
cel_Xx_5120: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5121: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5122: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5123: MUL QWORD PTR [RBX+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBX+0x8]
cel_Xx_5124: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5125: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5126: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5127: MUL QWORD PTR [RBX+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x10]
cel_Xx_5128: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5129: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5130: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5131: MUL QWORD PTR [RBX+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x18]
cel_Xx_5132: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_5133: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5134: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5135: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5136: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5137: STC                         # mul_add_slow:243                   STC
cel_Xx_5138: ADC R11, [RSP+-0x320]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x320]
cel_Xx_5139: ADC R12, [RSP+-0x318]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x318]
cel_Xx_5140: ADC R13, [RSP+-0x310]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x310]
cel_Xx_5141: ADC RAX, [RSP+-0x308]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x308]
cel_Xx_5142: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5143: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_5144: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_5145: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_5146: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_5147: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5148: MUL QWORD PTR [RBX+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x20]
cel_Xx_5149: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5150: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5151: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5152: MUL QWORD PTR [RBX+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x28]
cel_Xx_5153: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5154: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5155: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5156: MUL QWORD PTR [RBX+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x30]
cel_Xx_5157: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5158: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5159: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5160: MUL QWORD PTR [RBX+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x38]
cel_Xx_5161: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5162: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5163: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5164: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5165: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5166: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5167: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5168: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5169: ADC R11, [RSP+-0x300]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x300]
cel_Xx_5170: ADC R12, [RSP+-0x2f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2f8]
cel_Xx_5171: ADC R13, [RSP+-0x2f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2f0]
cel_Xx_5172: ADC RAX, [RSP+-0x2e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2e8]
cel_Xx_5173: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5174: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_5175: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_5176: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_5177: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_5178: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5179: MUL QWORD PTR [RBX+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x40]
cel_Xx_5180: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5181: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5182: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5183: MUL QWORD PTR [RBX+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x48]
cel_Xx_5184: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5185: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5186: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5187: MUL QWORD PTR [RBX+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x50]
cel_Xx_5188: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5189: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5190: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5191: MUL QWORD PTR [RBX+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x58]
cel_Xx_5192: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5193: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5194: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5195: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5196: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5197: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5198: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5199: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5200: ADC R11, [RSP+-0x2e0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2e0]
cel_Xx_5201: ADC R12, [RSP+-0x2d8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2d8]
cel_Xx_5202: ADC R13, [RSP+-0x2d0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2d0]
cel_Xx_5203: ADC RAX, [RSP+-0x2c8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2c8]
cel_Xx_5204: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5205: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_5206: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_5207: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_5208: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_5209: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5210: MUL QWORD PTR [RBX+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x60]
cel_Xx_5211: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5212: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5213: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5214: MUL QWORD PTR [RBX+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x68]
cel_Xx_5215: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5216: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5217: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5218: MUL QWORD PTR [RBX+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x70]
cel_Xx_5219: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5220: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5221: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5222: MUL QWORD PTR [RBX+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x78]
cel_Xx_5223: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5224: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5225: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5226: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5227: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5228: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5229: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5230: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5231: ADC R11, [RSP+-0x2c0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2c0]
cel_Xx_5232: ADC R12, [RSP+-0x2b8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x2b8]
cel_Xx_5233: ADC R13, [RSP+-0x2b0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x2b0]
cel_Xx_5234: ADC RAX, [RSP+-0x2a8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x2a8]
cel_Xx_5235: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5236: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_5237: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_5238: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_5239: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_5240: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5241: MUL QWORD PTR [RBX+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x80]
cel_Xx_5242: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5243: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5244: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5245: MUL QWORD PTR [RBX+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x88]
cel_Xx_5246: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5247: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5248: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5249: MUL QWORD PTR [RBX+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x90]
cel_Xx_5250: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5251: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5252: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5253: MUL QWORD PTR [RBX+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBX+0x98]
cel_Xx_5254: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5255: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5256: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5257: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5258: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5259: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5260: ADC R11, [RSP+-0x2a0]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x2a0]
cel_Xx_5261: ADC R12, [RSP+-0x298]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x298]
cel_Xx_5262: ADC R13, [RSP+-0x290]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x290]
cel_Xx_5263: ADC RAX, [RSP+-0x288]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x288]
cel_Xx_5264: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_5265: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_5266: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_5267: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_5268: MOV RSI, [RSP+-0x328]       # gcd_unsigned:618                   MOV `addr_new, `spill_addr_b_new
cel_Xx_5269: MOV RDI, [RSP+-0x330]       # gcd_unsigned:619                   MOV `tmp, `spill_mod_v_1
cel_Xx_5270: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5271: MUL QWORD PTR [RBP+0x0]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x0]
cel_Xx_5272: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5273: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5274: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5275: MUL QWORD PTR [RBP+0x8]     # mul_add_slow:208                   MUL QWORD PTR [RBP+0x8]
cel_Xx_5276: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5277: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5278: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5279: MUL QWORD PTR [RBP+0x10]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x10]
cel_Xx_5280: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5281: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5282: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5283: MUL QWORD PTR [RBP+0x18]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x18]
cel_Xx_5284: ADD R12, R14                # mul_add_slow:222                   ADD `mul_low_1, `mul_high_0
cel_Xx_5285: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5286: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5287: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5288: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5289: STC                         # mul_add_slow:243                   STC
cel_Xx_5290: ADC R11, [RSP+-0x280]       # mul_add_slow:244                   ADC `mul_low_0, [RSP+-0x280]
cel_Xx_5291: ADC R12, [RSP+-0x278]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x278]
cel_Xx_5292: ADC R13, [RSP+-0x270]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x270]
cel_Xx_5293: ADC RAX, [RSP+-0x268]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x268]
cel_Xx_5294: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5295: MOV [RSI+0x0], R11          # mul_add_slow:266                   MOV [RSI+0x0], `mul_low_0
cel_Xx_5296: MOV [RSI+0x8], R12          # mul_add_slow:266                   MOV [RSI+0x8], `mul_low_1
cel_Xx_5297: MOV [RSI+0x10], R13         # mul_add_slow:266                   MOV [RSI+0x10], `mul_low_2
cel_Xx_5298: MOV [RSI+0x18], RAX         # mul_add_slow:266                   MOV [RSI+0x18], `mul_low_3
cel_Xx_5299: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5300: MUL QWORD PTR [RBP+0x20]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x20]
cel_Xx_5301: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5302: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5303: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5304: MUL QWORD PTR [RBP+0x28]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x28]
cel_Xx_5305: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5306: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5307: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5308: MUL QWORD PTR [RBP+0x30]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x30]
cel_Xx_5309: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5310: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5311: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5312: MUL QWORD PTR [RBP+0x38]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x38]
cel_Xx_5313: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5314: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5315: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5316: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5317: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5318: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5319: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5320: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5321: ADC R11, [RSP+-0x260]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x260]
cel_Xx_5322: ADC R12, [RSP+-0x258]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x258]
cel_Xx_5323: ADC R13, [RSP+-0x250]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x250]
cel_Xx_5324: ADC RAX, [RSP+-0x248]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x248]
cel_Xx_5325: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5326: MOV [RSI+0x20], R11         # mul_add_slow:266                   MOV [RSI+0x20], `mul_low_0
cel_Xx_5327: MOV [RSI+0x28], R12         # mul_add_slow:266                   MOV [RSI+0x28], `mul_low_1
cel_Xx_5328: MOV [RSI+0x30], R13         # mul_add_slow:266                   MOV [RSI+0x30], `mul_low_2
cel_Xx_5329: MOV [RSI+0x38], RAX         # mul_add_slow:266                   MOV [RSI+0x38], `mul_low_3
cel_Xx_5330: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5331: MUL QWORD PTR [RBP+0x40]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x40]
cel_Xx_5332: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5333: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5334: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5335: MUL QWORD PTR [RBP+0x48]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x48]
cel_Xx_5336: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5337: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5338: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5339: MUL QWORD PTR [RBP+0x50]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x50]
cel_Xx_5340: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5341: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5342: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5343: MUL QWORD PTR [RBP+0x58]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x58]
cel_Xx_5344: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5345: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5346: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5347: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5348: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5349: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5350: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5351: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5352: ADC R11, [RSP+-0x240]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x240]
cel_Xx_5353: ADC R12, [RSP+-0x238]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x238]
cel_Xx_5354: ADC R13, [RSP+-0x230]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x230]
cel_Xx_5355: ADC RAX, [RSP+-0x228]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x228]
cel_Xx_5356: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5357: MOV [RSI+0x40], R11         # mul_add_slow:266                   MOV [RSI+0x40], `mul_low_0
cel_Xx_5358: MOV [RSI+0x48], R12         # mul_add_slow:266                   MOV [RSI+0x48], `mul_low_1
cel_Xx_5359: MOV [RSI+0x50], R13         # mul_add_slow:266                   MOV [RSI+0x50], `mul_low_2
cel_Xx_5360: MOV [RSI+0x58], RAX         # mul_add_slow:266                   MOV [RSI+0x58], `mul_low_3
cel_Xx_5361: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5362: MUL QWORD PTR [RBP+0x60]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x60]
cel_Xx_5363: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5364: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5365: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5366: MUL QWORD PTR [RBP+0x68]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x68]
cel_Xx_5367: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5368: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5369: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5370: MUL QWORD PTR [RBP+0x70]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x70]
cel_Xx_5371: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5372: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5373: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5374: MUL QWORD PTR [RBP+0x78]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x78]
cel_Xx_5375: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5376: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5377: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5378: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5379: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5380: MOV R10, RDX                # mul_add_slow:233                   MOV `mul_high_4_previous, `mul_high_3
cel_Xx_5381: SBB R8, R8                  # mul_add_slow:234                   SBB `mul_carry, `mul_carry
cel_Xx_5382: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5383: ADC R11, [RSP+-0x220]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x220]
cel_Xx_5384: ADC R12, [RSP+-0x218]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x218]
cel_Xx_5385: ADC R13, [RSP+-0x210]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x210]
cel_Xx_5386: ADC RAX, [RSP+-0x208]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x208]
cel_Xx_5387: SBB R9, R9                  # mul_add_slow:258                   SBB `add_carry, `add_carry
cel_Xx_5388: MOV [RSI+0x60], R11         # mul_add_slow:266                   MOV [RSI+0x60], `mul_low_0
cel_Xx_5389: MOV [RSI+0x68], R12         # mul_add_slow:266                   MOV [RSI+0x68], `mul_low_1
cel_Xx_5390: MOV [RSI+0x70], R13         # mul_add_slow:266                   MOV [RSI+0x70], `mul_low_2
cel_Xx_5391: MOV [RSI+0x78], RAX         # mul_add_slow:266                   MOV [RSI+0x78], `mul_low_3
cel_Xx_5392: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5393: MUL QWORD PTR [RBP+0x80]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x80]
cel_Xx_5394: MOV R11, RAX                # mul_add_slow:214                   MOV `mul_low_0, RAX
cel_Xx_5395: MOV R14, RDX                # mul_add_slow:215                   MOV `mul_high_0, RDX
cel_Xx_5396: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5397: MUL QWORD PTR [RBP+0x88]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x88]
cel_Xx_5398: MOV R12, RAX                # mul_add_slow:214                   MOV `mul_low_1, RAX
cel_Xx_5399: MOV R15, RDX                # mul_add_slow:215                   MOV `mul_high_1, RDX
cel_Xx_5400: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5401: MUL QWORD PTR [RBP+0x90]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x90]
cel_Xx_5402: MOV R13, RAX                # mul_add_slow:214                   MOV `mul_low_2, RAX
cel_Xx_5403: MOV RCX, RDX                # mul_add_slow:215                   MOV `mul_high_2, RDX
cel_Xx_5404: MOV RAX, RDI                # mul_add_slow:207                   MOV RAX, `b
cel_Xx_5405: MUL QWORD PTR [RBP+0x98]    # mul_add_slow:208                   MUL QWORD PTR [RBP+0x98]
cel_Xx_5406: ADD R8, 1                   # mul_add_slow:224                   ADD `mul_carry, 1
cel_Xx_5407: ADC R11, R10                # mul_add_slow:225                   ADC `mul_low_0, `mul_high_4_previous
cel_Xx_5408: ADC R12, R14                # mul_add_slow:226                   ADC `mul_low_1, `mul_high_0
cel_Xx_5409: ADC R13, R15                # mul_add_slow:229                   ADC `mul_low_2, `mul_high_1
cel_Xx_5410: ADC RAX, RCX                # mul_add_slow:230                   ADC `mul_low_3, `mul_high_2
cel_Xx_5411: ADD R9, 1                   # mul_add_slow:249                   ADD `add_carry, 1
cel_Xx_5412: ADC R11, [RSP+-0x200]       # mul_add_slow:250                   ADC `mul_low_0, [RSP+-0x200]
cel_Xx_5413: ADC R12, [RSP+-0x1f8]       # mul_add_slow:254                   ADC `mul_low_1, [RSP+-0x1f8]
cel_Xx_5414: ADC R13, [RSP+-0x1f0]       # mul_add_slow:254                   ADC `mul_low_2, [RSP+-0x1f0]
cel_Xx_5415: ADC RAX, [RSP+-0x1e8]       # mul_add_slow:254                   ADC `mul_low_3, [RSP+-0x1e8]
cel_Xx_5416: MOV [RSI+0x80], R11         # mul_add_slow:266                   MOV [RSI+0x80], `mul_low_0
cel_Xx_5417: MOV [RSI+0x88], R12         # mul_add_slow:266                   MOV [RSI+0x88], `mul_low_1
cel_Xx_5418: MOV [RSI+0x90], R13         # mul_add_slow:266                   MOV [RSI+0x90], `mul_low_2
cel_Xx_5419: MOV [RSI+0x98], RAX         # mul_add_slow:266                   MOV [RSI+0x98], `mul_low_3
cel_Xx_5420: JMP _cel_label_41           # gcd_unsigned:622                   JMP _cel_label_41
cel_Xx_5421: _cel_label_41:              # gcd_unsigned:624                   _cel_label_41:
cel_Xx_5422: _cel_label_29:              # gcd_unsigned:636                   _cel_label_29:
cel_Xx_5423: MOV RBX, [RSP+-0x3b8]       # gcd_unsigned:647                   MOV `iter, `spill_iter
cel_Xx_5424: TEST RBX, 1                 # gcd_unsigned:650                   TEST `iter, 1
cel_Xx_5425: MOV RAX, [RSP+-0x3e8]       # gcd_unsigned:651                   MOV `addr_a, `spill_a_2_addr_base
cel_Xx_5426: CMOVNZ RAX, [RSP+-0x3f8]    # gcd_unsigned:652                   CMOVNZ `addr_a, `spill_a_addr_base
cel_Xx_5427: MOV RDX, [RSP+-0x3e0]       # gcd_unsigned:655                   MOV `addr_b, `spill_b_2_addr_base
cel_Xx_5428: CMOVNZ RDX, [RSP+-0x3f0]    # gcd_unsigned:656                   CMOVNZ `addr_b, `spill_b_addr_base
cel_Xx_5429: MOV R10, [RSP+-0x3b0]       # gcd_unsigned:666                   MOV `a_head_start, `spill_a_end_index
cel_Xx_5430: LEA R10, [RAX+R10*8]        # update_end_index:48                LEA `end_index, [`addr_base+`end_index*8]
cel_Xx_5431: XOR R15, R15                # update_end_index:50                XOR `tmp_0, `tmp_0
cel_Xx_5432: MOV RCX, 8                  # update_end_index:51                MOV `tmp_8, 8
cel_Xx_5433: MOV R14, [R10]              # update_end_index:63                MOV `tmp_value, [`end_index]
cel_Xx_5434: CMP R14, R15                # update_end_index:67                CMP `tmp_value, `tmp_0
cel_Xx_5435: MOV R14, R15                # update_end_index:68                MOV `tmp_value, `tmp_0
cel_Xx_5436: CMOVE R14, RCX              # update_end_index:69                CMOVE `tmp_value, `tmp_8
cel_Xx_5437: CMP R10, RAX                # update_end_index:73                CMP `end_index, `addr_base
cel_Xx_5438: CMOVE R14, R15              # update_end_index:74                CMOVE `tmp_value, `tmp_0
cel_Xx_5439: SUB R10, R14                # update_end_index:78                SUB `end_index, `tmp_value
cel_Xx_5440: _cel_label_43:              # update_end_index:60                _cel_label_43:
cel_Xx_5441: MOV R14, [R10]              # update_end_index:63                MOV `tmp_value, [`end_index]
cel_Xx_5442: CMP R14, R15                # update_end_index:67                CMP `tmp_value, `tmp_0
cel_Xx_5443: MOV R14, R15                # update_end_index:68                MOV `tmp_value, `tmp_0
cel_Xx_5444: CMOVE R14, RCX              # update_end_index:69                CMOVE `tmp_value, `tmp_8
cel_Xx_5445: CMP R10, RAX                # update_end_index:73                CMP `end_index, `addr_base
cel_Xx_5446: CMOVE R14, R15              # update_end_index:74                CMOVE `tmp_value, `tmp_0
cel_Xx_5447: SUB R10, R14                # update_end_index:78                SUB `end_index, `tmp_value
cel_Xx_5448: CMP R14, R15                # update_end_index:82                CMP `tmp_value, `tmp_0
cel_Xx_5449: JNE _cel_label_43           # update_end_index:83                JNE _cel_label_43
cel_Xx_5450: SUB R10, RAX                # update_end_index:88                SUB `end_index, `addr_base
cel_Xx_5451: SHR R10, 3                  # update_end_index:89                SHR `end_index, 3
cel_Xx_5452: MOV [RSP+-0x3b0], R10       # gcd_unsigned:668                   MOV `spill_a_end_index, `a_head_start
cel_Xx_5453: XOR RBP, RBP                # gcd_unsigned:672                   XOR `is_lehmer, `is_lehmer
cel_Xx_5454: CMP R10, 2                  # gcd_unsigned:673                   CMP `a_head_start, 2
cel_Xx_5455: SETAE BPL                   # gcd_unsigned:674                   SETAE `is_lehmer_8
cel_Xx_5456: MOV [RSP+-0x380], RBP       # gcd_unsigned:675                   MOV `spill_is_lehmer, `is_lehmer
cel_Xx_5457: XOR R14, R14                # calculate_head_start:103           XOR `tmp, `tmp
cel_Xx_5458: SUB R10, 2                  # calculate_head_start:104           SUB `end_index, 2
cel_Xx_5459: CMOVB R10, R14              # calculate_head_start:105           CMOVB `end_index, `tmp
cel_Xx_5460: LEA R14, [RAX+R10*8+0x0]    # extract_head_at:122                LEA `tmp_addr, [`addr_base+`head_start*8+0x0]
cel_Xx_5461: MOV RSI, [R14]              # extract_head_at:123                MOV `res_0, [`tmp_addr]
cel_Xx_5462: MOV RDI, [R14+8]            # extract_head_at:124                MOV `res_1, [`tmp_addr+8]
cel_Xx_5463: MOV R13, [R14+16]           # extract_head_at:125                MOV `res_2, [`tmp_addr+16]
cel_Xx_5464: BSR R11, R13                # calculate_shift_amount:308         BSR `res, `limbs_2
cel_Xx_5465: INC R11                     # calculate_shift_amount:309         INC `res
cel_Xx_5466: XOR R14, R14                # calculate_shift_amount:313         XOR `tmp, `tmp
cel_Xx_5467: CMP R13, R14                # calculate_shift_amount:314         CMP `limbs_2, `tmp
cel_Xx_5468: CMOVE R11, R14              # calculate_shift_amount:315         CMOVE `res, `tmp
cel_Xx_5469: MOV RCX, R11                # shift_right:330                    MOV RCX, `amount
cel_Xx_5470: SHRD RSI, RDI, CL           # shift_right:334                    SHRD `limbs_0, `limbs_1, CL
cel_Xx_5471: SHRD RDI, R13, CL           # shift_right:338                    SHRD `limbs_1, `limbs_2, CL
cel_Xx_5472: CMP R11, 64                 # shift_right:340                    CMP `amount, 64
cel_Xx_5473: CMOVE RSI, RDI              # shift_right:341                    CMOVE `limbs_0, `limbs_1
cel_Xx_5474: CMOVE RDI, R13              # shift_right:342                    CMOVE `limbs_1, `limbs_2
cel_Xx_5475: LEA R14, [RDX+R10*8+0x0]    # extract_head_at:122                LEA `tmp_addr, [`addr_base+`head_start*8+0x0]
cel_Xx_5476: MOV R8, [R14]               # extract_head_at:123                MOV `res_0, [`tmp_addr]
cel_Xx_5477: MOV R9, [R14+8]             # extract_head_at:124                MOV `res_1, [`tmp_addr+8]
cel_Xx_5478: MOV R12, [R14+16]           # extract_head_at:125                MOV `res_2, [`tmp_addr+16]
cel_Xx_5479: MOV RCX, R11                # shift_right:330                    MOV RCX, `amount
cel_Xx_5480: SHRD R8, R9, CL             # shift_right:334                    SHRD `limbs_0, `limbs_1, CL
cel_Xx_5481: SHRD R9, R12, CL            # shift_right:338                    SHRD `limbs_1, `limbs_2, CL
cel_Xx_5482: CMP R11, 64                 # shift_right:340                    CMP `amount, 64
cel_Xx_5483: CMOVE R8, R9                # shift_right:341                    CMOVE `limbs_0, `limbs_1
cel_Xx_5484: CMOVE R9, R12               # shift_right:342                    CMOVE `limbs_1, `limbs_2
cel_Xx_5485: MOV [RSP+-0x378], RSI       # gcd_unsigned:686                   MOV `spill_a_128, `a_head_0
cel_Xx_5486: MOV [RSP+-0x370], RDI       # gcd_unsigned:687                   MOV `spill_a_128_8, `a_head_1
cel_Xx_5487: MOV [RSP+-0x368], R8        # gcd_unsigned:689                   MOV `spill_b_128, `b_head_0
cel_Xx_5488: MOV [RSP+-0x360], R9        # gcd_unsigned:690                   MOV `spill_b_128_8, `b_head_1
cel_Xx_5489: MOV RAX, [RSP+-0x3d8]       # gcd_unsigned:709                   MOV `addr_threshold, `spill_threshold_addr_base
cel_Xx_5490: LEA R15, [RAX+R10*8+0x0]    # extract_head_at:122                LEA `tmp_addr, [`addr_base+`head_start*8+0x0]
cel_Xx_5491: MOV RDX, [R15]              # extract_head_at:123                MOV `res_0, [`tmp_addr]
cel_Xx_5492: MOV R13, [R15+8]            # extract_head_at:124                MOV `res_1, [`tmp_addr+8]
cel_Xx_5493: MOV R14, [R15+16]           # extract_head_at:125                MOV `res_2, [`tmp_addr+16]
cel_Xx_5494: MOV RCX, R11                # shift_right:330                    MOV RCX, `amount
cel_Xx_5495: SHRD RDX, R13, CL           # shift_right:334                    SHRD `limbs_0, `limbs_1, CL
cel_Xx_5496: SHRD R13, R14, CL           # shift_right:338                    SHRD `limbs_1, `limbs_2, CL
cel_Xx_5497: CMP R11, 64                 # shift_right:340                    CMP `amount, 64
cel_Xx_5498: CMOVE RDX, R13              # shift_right:341                    CMOVE `limbs_0, `limbs_1
cel_Xx_5499: CMOVE R13, R14              # shift_right:342                    CMOVE `limbs_1, `limbs_2
cel_Xx_5500: MOV [RSP+-0x358], RDX       # gcd_unsigned:718                   MOV `spill_threshold_128, `threshold_head_0
cel_Xx_5501: MOV [RSP+-0x350], R13       # gcd_unsigned:719                   MOV `spill_threshold_128_8, `threshold_head_1
cel_Xx_5502: MOV RAX, RDX                # gcd_unsigned:722                   MOV `addr_threshold, `threshold_head_0
cel_Xx_5503: MOV R14, R13                # gcd_unsigned:723                   MOV `threshold_head_2, `threshold_head_1
cel_Xx_5504: SUB RAX, RSI                # gcd_unsigned:724                   SUB `addr_threshold, `a_head_0
cel_Xx_5505: SBB R14, RDI                # gcd_unsigned:725                   SBB `threshold_head_2, `a_head_1
cel_Xx_5506: JNC cel_label_error_2       # gcd_unsigned:726                   JNC cel_label_error_2
cel_Xx_5507: XOR R12, R12                # gcd_unsigned:729                   XOR `exit_flag, `exit_flag
cel_Xx_5508: SUB RDX, R8                 # gcd_unsigned:730                   SUB `threshold_head_0, `b_head_0
cel_Xx_5509: SBB R13, R9                 # gcd_unsigned:731                   SBB `threshold_head_1, `b_head_1
cel_Xx_5510: SETNC R12B                  # gcd_unsigned:732                   SETNC `exit_flag_8
cel_Xx_5511: OR RDX, R13                 # gcd_unsigned:735                   OR `threshold_head_0, `threshold_head_1
cel_Xx_5512: DEC RBP                     # gcd_unsigned:736                   DEC `is_lehmer
cel_Xx_5513: OR RDX, RBP                 # gcd_unsigned:737                   OR `threshold_head_0, `is_lehmer
cel_Xx_5514: JZ cel_label_error_3        # gcd_unsigned:738                   JZ cel_label_error_3
cel_Xx_5515: MOV R13, RBX                # gcd_unsigned:753                   MOV `out_uv_addr, `iter
cel_Xx_5516: SHL R13, 6                  # gcd_unsigned:754                   SHL `out_uv_addr, 6
cel_Xx_5517: ADD R13, [RSP+-0x3c0]       # gcd_unsigned:755                   ADD `out_uv_addr, `spill_out_uv_addr
cel_Xx_5518: MOV R14, [RSP+-0x3a8]       # gcd_unsigned:757                   MOV `tmp, `spill_u_0
cel_Xx_5519: MOV [R13], R14              # gcd_unsigned:758                   MOV [`out_uv_addr], `tmp
cel_Xx_5520: MOV R14, [RSP+-0x3a0]       # gcd_unsigned:760                   MOV `tmp, `spill_u_1
cel_Xx_5521: MOV [R13+8], R14            # gcd_unsigned:761                   MOV [`out_uv_addr+8], `tmp
cel_Xx_5522: MOV R14, [RSP+-0x398]       # gcd_unsigned:763                   MOV `tmp, `spill_v_0
cel_Xx_5523: MOV [R13+16], R14           # gcd_unsigned:764                   MOV [`out_uv_addr+16], `tmp
cel_Xx_5524: MOV R14, [RSP+-0x390]       # gcd_unsigned:766                   MOV `tmp, `spill_v_1
cel_Xx_5525: MOV [R13+24], R14           # gcd_unsigned:767                   MOV [`out_uv_addr+24], `tmp
cel_Xx_5526: MOV R14, [RSP+-0x388]       # gcd_unsigned:769                   MOV `tmp, `spill_parity
cel_Xx_5527: MOV [R13+32], R14           # gcd_unsigned:770                   MOV [`out_uv_addr+32], `tmp
cel_Xx_5528: MOV [R13+40], R12           # gcd_unsigned:772                   MOV [`out_uv_addr+40], `exit_flag
cel_Xx_5529: MOV R14, [RSP+-0x3d0]       # gcd_unsigned:777                   MOV `tmp, `spill_uv_counter_start
cel_Xx_5530: ADD R14, RBX                # gcd_unsigned:778                   ADD `tmp, `iter
cel_Xx_5531: MOV R13, [RSP+-0x3c8]       # gcd_unsigned:779                   MOV `out_uv_addr, `spill_out_uv_counter_addr
cel_Xx_5532: MOV [R13], R14              # gcd_unsigned:780                   MOV [`out_uv_addr], `tmp
cel_Xx_5533: INC RBX                     # gcd_unsigned:782                   INC `iter
cel_Xx_5534: MOV [RSP+-0x3b8], RBX       # gcd_unsigned:783                   MOV `spill_iter, `iter
cel_Xx_5535: CMP R12, 0                  # gcd_unsigned:785                   CMP `exit_flag, 0
cel_Xx_5536: JNE _cel_label_31           # gcd_unsigned:786                   JNE _cel_label_31
cel_Xx_5537: CMP RBX, 0x28               # gcd_unsigned:788                   CMP `iter, 0x28
cel_Xx_5538: JGE cel_label_error_4       # gcd_unsigned:789                   JGE cel_label_error_4
cel_Xx_5539: JMP _cel_label_30           # gcd_unsigned:792                   JMP _cel_label_30
cel_Xx_5540: _cel_label_31:              # gcd_unsigned:794                   _cel_label_31:
cel_Xx_5541: MOV RBP, [RSP+-0x400]       # compile_asm_gcd_unsigned:234       MOV `data_addr, `spill_data_addr
cel_Xx_5542: MOV RBX, [RSP+-0x3f8]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3f8]
cel_Xx_5543: MOV [RBP+0x0], RBX          # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x0], `tmp
cel_Xx_5544: MOV RBX, [RSP+-0x3f0]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3f0]
cel_Xx_5545: MOV [RBP+0x8], RBX          # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x8], `tmp
cel_Xx_5546: MOV RBX, [RSP+-0x3e8]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3e8]
cel_Xx_5547: MOV [RBP+0x10], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x10], `tmp
cel_Xx_5548: MOV RBX, [RSP+-0x3e0]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3e0]
cel_Xx_5549: MOV [RBP+0x18], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x18], `tmp
cel_Xx_5550: MOV RBX, [RSP+-0x3d8]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3d8]
cel_Xx_5551: MOV [RBP+0x20], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x20], `tmp
cel_Xx_5552: MOV RBX, [RSP+-0x3d0]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3d0]
cel_Xx_5553: MOV [RBP+0x28], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x28], `tmp
cel_Xx_5554: MOV RBX, [RSP+-0x3c8]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3c8]
cel_Xx_5555: MOV [RBP+0x30], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x30], `tmp
cel_Xx_5556: MOV RBX, [RSP+-0x3c0]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3c0]
cel_Xx_5557: MOV [RBP+0x38], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x38], `tmp
cel_Xx_5558: MOV RBX, [RSP+-0x3b8]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3b8]
cel_Xx_5559: MOV [RBP+0x40], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x40], `tmp
cel_Xx_5560: MOV RBX, [RSP+-0x3b0]       # compile_asm_gcd_unsigned:237       MOV `tmp, [RSP+-0x3b0]
cel_Xx_5561: MOV [RBP+0x48], RBX         # compile_asm_gcd_unsigned:238       MOV [`data_addr+0x48], `tmp
cel_Xx_5562: MOV RAX, 0                  # ~asm_function:117                  MOV RAX, 0
cel_Xx_5563: _cel_label_44:              # ~asm_function:121                  _cel_label_44:
cel_Xx_5564: MOV RSP, [RSP]              # ~asm_function:125                  MOV RSP, [RSP]
cel_Xx_5565: POP R15                     # ~asm_function:128                  POP R15
cel_Xx_5566: POP R14                     # ~asm_function:128                  POP R14
cel_Xx_5567: POP R13                     # ~asm_function:128                  POP R13
cel_Xx_5568: POP R12                     # ~asm_function:128                  POP R12
cel_Xx_5569: POP RBX                     # ~asm_function:128                  POP RBX
cel_Xx_5570: POP RBP                     # ~asm_function:128                  POP RBP
cel_Xx_5571: RET                         # ~asm_function:130                  RET
cel_Xx_5572: cel_label_error_1:          # ~asm_function:136                  cel_label_error_1:
cel_Xx_5573: MOV RAX, 0x1                # ~asm_function:139                  MOV RAX, 0x1
cel_Xx_5574: JMP _cel_label_44           # ~asm_function:140                  JMP _cel_label_44
cel_Xx_5575: cel_label_error_2:          # ~asm_function:136                  cel_label_error_2:
cel_Xx_5576: MOV RAX, 0x2                # ~asm_function:139                  MOV RAX, 0x2
cel_Xx_5577: JMP _cel_label_44           # ~asm_function:140                  JMP _cel_label_44
cel_Xx_5578: cel_label_error_3:          # ~asm_function:136                  cel_label_error_3:
cel_Xx_5579: MOV RAX, 0x3                # ~asm_function:139                  MOV RAX, 0x3
cel_Xx_5580: JMP _cel_label_44           # ~asm_function:140                  JMP _cel_label_44
cel_Xx_5581: cel_label_error_4:          # ~asm_function:136                  cel_label_error_4:
cel_Xx_5582: MOV RAX, 0x4                # ~asm_function:139                  MOV RAX, 0x4
cel_Xx_5583: JMP _cel_label_44           # ~asm_function:140                  JMP _cel_label_44
